{"version":3,"sources":["views/view-base.js"],"names":["define","langx","noder","$","Evented","inherit","klassName","options","controlsClass","fullScreen","_construct","repeater","hasControls","that","this","initOptions","container","on","e","hasClass","removeClass","addClass","_create$Item","template","itemData","val","start","end","invalid","search","indexOf","trim","substring","undefined","ctor","constructor","cache","defaults","ctors","unshift","Plugin","superclass","i","length","prototype","hasOwnProperty","mixin","Object","defineProperty","value","selected","infScroll","infiniteScroll","infiniteScrolling","close","getValue","getSelectedItems","cleared","dataOptions","enabled","helpers","addItem","$parent","response","action","item","render","before","addBefore","$dataContainer","find","$container","renderItem","objectAndPropsToRepeatOn","repeat","split","objectToRepeatOn","subset","data","propsToRepeatOn","slice","prop","console","warn","subItemIndex","addSubItem","index","after","addAfter"],"mappings":"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","file":"../../views/view-base.js","sourcesContent":["define([\r\n\t\"skylark-langx/langx\",\r\n\t\"skylark-domx-noder\",\r\n\t\"skylark-domx-query\"\r\n],function(langx,noder,$) {\r\n\r\n\tvar ViewBase = langx.Evented.inherit({\r\n\t    klassName: \"ViewBase\",\r\n\r\n\t    options : {\r\n\t      // The class to add when the gallery controls are visible:\r\n\t      controlsClass: \"skylarkui-repeater-controls\",\r\n\t\t    // Defines if the gallery should open in fullscreen mode:\r\n\t\t    fullScreen: false\r\n\r\n\t    },\r\n      _construct : function (repeater,options) {\r\n          var that = this,\r\n            hasControls;\r\n          this.repeater = repeater;\r\n          this.initOptions(options);\r\n          if (this.options.fullScreen) {\r\n            noder.fullScreen(this.container[0]);\r\n          }\r\n          this.repeater.on(\"item.running\",function(e){\r\n              if (that.container.hasClass(that.options.controlsClass)) {\r\n                hasControls = true\r\n                that.container.removeClass(that.options.controlsClass);\r\n              } else {\r\n                hasControls = false\r\n              }\r\n          });\r\n\r\n          this.repeater.on(\"item.running\",function(e){\r\n              if (hasControls) {\r\n                that.container.addClass(that.options.controlsClass);\r\n              }\r\n          });\r\n      },\r\n\r\n    \t_create$Item : function (template,itemData) {\r\n        \tvar invalid = false;\r\n\r\n        \tfunction replace() {\r\n            \tvar end, start, val;\r\n\r\n            \tstart = template.indexOf('{{');\r\n            \tend = template.indexOf('}}', start + 2);\r\n\r\n            \tif (start > -1 && end > -1) {\r\n                \tval = langx.trim(template.substring(start + 2, end));\r\n                \tval = (itemData[val] !== undefined) ? itemData[val] : '';\r\n                \ttemplate = template.substring(0, start) + val + template.substring(end + 2);\r\n            \t} else {\r\n                \tinvalid = true;\r\n            \t}\r\n       \t\t}\r\n\r\n        \twhile (!invalid && template.search('{{') >= 0) {\r\n            \treplace(template);\r\n        \t}\r\n\r\n        \treturn $(template);\r\n    \t},\t    \r\n\t    \r\n\t    //initOptions: function (options) {\r\n\t    //  // Create a copy of the prototype options:\r\n\t    //  this.options = langx.mixin({}, this.options,options);\r\n\t    //},\r\n\r\n      initOptions : function(options) {\r\n        var ctor = this.constructor,\r\n            cache = ctor.cache = ctor.cache || {},\r\n            defaults = cache.defaults;\r\n        if (!defaults) {\r\n          var  ctors = [];\r\n          do {\r\n            ctors.unshift(ctor);\r\n            if (ctor === Plugin) {\r\n              break;\r\n            }\r\n            ctor = ctor.superclass;\r\n          } while (ctor);\r\n\r\n          defaults = cache.defaults = {};\r\n          for (var i=0;i<ctors.length;i++) {\r\n            ctor = ctors[i];\r\n            if (ctor.prototype.hasOwnProperty(\"options\")) {\r\n              langx.mixin(defaults,ctor.prototype.options,true);\r\n            }\r\n            if (ctor.hasOwnProperty(\"options\")) {\r\n              langx.mixin(defaults,ctor.options,true);\r\n            }\r\n          }\r\n        }\r\n        Object.defineProperty(this,\"options\",{\r\n          value :langx.mixin({},defaults,options,true)\r\n        });\r\n\r\n        //return this.options = langx.mixin({},defaults,options);\r\n        return this.options;\r\n      },\r\n\r\n    selected: function selected () {\r\n        var infScroll = this.options.infiniteScroll;\r\n        var opts;\r\n        if (infScroll) {\r\n            opts = (typeof infScroll === 'object') ? infScroll : {};\r\n            this.repeater.infiniteScrolling(true, opts);\r\n        }\r\n    },\r\n\r\n\t    close: function () {\r\n      \t\tif (noder.fullScreen() === this.container[0]) {\r\n        \t\tnoder.fullScreen(false);\r\n      \t\t}\r\n    \t},\r\n\r\n    \tgetValue : function() {\r\n    \t\treturn this.getSelectedItems();\r\n    \t},\r\n\r\n    \tcleared : function() {\r\n\r\n    \t},\r\n\r\n\t    dataOptions: function (options) {\r\n\t    \treturn options;\r\n\t    },\r\n\r\n\t    enabled : function(helpers){\r\n\t    \t\r\n\t    },\r\n\r\n      addItem : function addItem ($parent, response) {\r\n        var action;\r\n        if (response) {\r\n          action = (response.action) ? response.action : 'append';\r\n          if (action !== 'none' && response.item !== undefined) {\r\n            var $container = (response.container !== undefined) ? $(response.container) : $parent;\r\n            $container[action](response.item);\r\n          }\r\n        }\r\n      },\r\n\r\n      render : function(helpers) {\r\n        if (this.before) {\r\n          var addBefore = this.before(helpers);\r\n          this.addItem(helpers.container, addBefore);\r\n        }\r\n\r\n        var $dataContainer = helpers.container.find('[data-container=\"true\"]:last');\r\n        var $container = ($dataContainer.length > 0) ? $dataContainer : helpers.container;\r\n\r\n        // It appears that the following code would theoretically allow you to pass a deeply\r\n        // nested value to \"repeat on\" to be added to the repeater.\r\n        // eg. `data.foo.bar.items`\r\n        if (this.renderItem) {\r\n          var subset;\r\n          var objectAndPropsToRepeatOnString = this.repeat || 'data.items';\r\n          var objectAndPropsToRepeatOn = objectAndPropsToRepeatOnString.split('.');\r\n          var objectToRepeatOn = objectAndPropsToRepeatOn[0];\r\n\r\n          if (objectToRepeatOn === 'data' || objectToRepeatOn === 'this') {\r\n            subset = (objectToRepeatOn === 'this') ? this : helpers.data;\r\n\r\n            // Extracts subset from object chain (get `items` out of `foo.bar.items`). I think....\r\n            var propsToRepeatOn = objectAndPropsToRepeatOn.slice(1);\r\n            for (var prop = 0; prop < propsToRepeatOn.length; prop++) {\r\n              if (subset[propsToRepeatOn[prop]] !== undefined) {\r\n                subset = subset[propsToRepeatOn[prop]];\r\n              } else {\r\n                subset = [];\r\n                console.warn('WARNING: Repeater unable to find property to iterate renderItem on.');\r\n                break;\r\n              }\r\n            }\r\n\r\n            for (var subItemIndex = 0; subItemIndex < subset.length; subItemIndex++) {\r\n              var addSubItem = this.renderItem({\r\n                container: $container,\r\n                data: helpers.data,\r\n                index: subItemIndex,\r\n                subset: subset\r\n              });\r\n              this.addItem($container, addSubItem);\r\n            }\r\n          } else {\r\n            console.warn('WARNING: Repeater plugin \"repeat\" value must start with either \"data\" or \"this\"');\r\n          }\r\n        }\r\n\r\n        if (this.after) {\r\n          var addAfter = this.after(helpers);\r\n          this.addItem(helpers.container, addAfter);\r\n        }    \r\n      }\r\n\r\n\t});\r\n\r\n\treturn ViewBase;\r\n});\r\n"]}