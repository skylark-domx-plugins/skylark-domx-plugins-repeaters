{"version":3,"sources":["views/linear-view.js"],"names":["define","langx","browser","eventer","noder","geom","$","views","ViewBase","LinearView","inherit","klassName","options","alignment","infiniteScroll","itemRendered","noItemsHTML","selectable","template","item","clearSelectedItems","this","repeater","$canvas","find","removeClass","getSelectedItems","selected","each","push","setSelectedItems","items","force","i","$item","l","n","self","compareItemIndex","index","compareItemSelector","is","selector","selectItem","$itm","select","undefined","thumbnail_clearSelectedItems","addClass","isArray","length","opts","infScroll","infiniteScrolling","before","helpers","$cont","response","data","action","renderItem","_create$Item","subset","on","isDisabled","hasClass","$element","trigger","container","append","$thumbnail","itemData","name","ctor"],"mappings":"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","file":"../../views/linear-view.js","sourcesContent":["define([\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-eventer\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-geom\",\r\n    \"skylark-domx-query\",\r\n    \"../views\",   \r\n    \"./view-base\"\r\n], function(langx, browser, eventer, noder, geom, $, views, ViewBase) {\r\n\r\n\r\n  var LinearView = ViewBase.inherit({\r\n    klassName : \"LinearView\",\r\n\r\n    options: {\r\n        alignment: 'left',\r\n        infiniteScroll: false,\r\n        itemRendered: null,\r\n        noItemsHTML: 'no items found',\r\n        selectable: false,\r\n\r\n        template : '<ul class=\"clearfix repeater-linear\" data-container=\"true\" data-infinite=\"true\" data-preserve=\"shallow\"></ul>',\r\n        item : {\r\n            template: '<li class=\"repeater-item\"><img  src=\"{{ThumbnailImage}}\" class=\"thumb\"/><h4 class=\"title\">{{name}}</h4></div>'\r\n        },\r\n    },\r\n\r\n    //ADDITIONAL METHODS\r\n    clearSelectedItems : function() {\r\n        this.repeater.$canvas.find('.repeater-linear .selectable.selected').removeClass('selected');\r\n    },\r\n\r\n    getSelectedItems : function() {\r\n        var selected = [];\r\n        this.repeater.$canvas.find('.repeater-linear .selectable.selected').each(function() {\r\n            selected.push($(this));\r\n        });\r\n        return selected;\r\n    },\r\n\r\n    setSelectedItems : function(items, force) {\r\n        var selectable = this.options.selectable;\r\n        var self = this;\r\n        var i, $item, l, n;\r\n\r\n        //this function is necessary because lint yells when a function is in a loop\r\n        function compareItemIndex() {\r\n            if (n === items[i].index) {\r\n                $item = $(this);\r\n                return false;\r\n            } else {\r\n                n++;\r\n            }\r\n        }\r\n\r\n        //this function is necessary because lint yells when a function is in a loop\r\n        function compareItemSelector() {\r\n            $item = $(this);\r\n            if ($item.is(items[i].selector)) {\r\n                selectItem($item, items[i].selected);\r\n            }\r\n        }\r\n\r\n        function selectItem($itm, select) {\r\n            select = (select !== undefined) ? select : true;\r\n            if (select) {\r\n                if (!force && selectable !== 'multi') {\r\n                    self.thumbnail_clearSelectedItems();\r\n                }\r\n\r\n                $itm.addClass('selected');\r\n            } else {\r\n                $itm.removeClass('selected');\r\n            }\r\n        }\r\n\r\n        if (!langx.isArray(items)) {\r\n            items = [items];\r\n        }\r\n\r\n        if (force === true || selectable === 'multi') {\r\n            l = items.length;\r\n        } else if (selectable) {\r\n            l = (items.length > 0) ? 1 : 0;\r\n        } else {\r\n            l = 0;\r\n        }\r\n\r\n        for (i = 0; i < l; i++) {\r\n            if (items[i].index !== undefined) {\r\n                $item = $();\r\n                n = 0;\r\n                this.repeater.$canvas.find('.repeater-linear .selectable').each(compareItemIndex);\r\n                if ($item.length > 0) {\r\n                    selectItem($item, items[i].selected);\r\n                }\r\n\r\n            } else if (items[i].selector) {\r\n                this.repeater.$canvas.find('.repeater-linear .selectable').each(compareItemSelector);\r\n            }\r\n        }\r\n    },\r\n\r\n    selected: function() {\r\n        var infScroll = this.options.infiniteScroll;\r\n        var opts;\r\n        if (infScroll) {\r\n            opts = (typeof infScroll === 'object') ? infScroll : {};\r\n            this.infiniteScrolling(true, opts);\r\n        }\r\n    },\r\n    before: function(helpers) {\r\n        var alignment = this.options.alignment;\r\n        var $cont = this.repeater.$canvas.find('.repeater-linear');\r\n        var data = helpers.data;\r\n        var response = {};\r\n        var $empty, validAlignments;\r\n\r\n        if ($cont.length < 1) {\r\n            $cont = $(this.options.template);\r\n\r\n            response.item = $cont;\r\n        } else {\r\n            response.action = 'none';\r\n        }\r\n\r\n        return response;\r\n    },\r\n\r\n    renderItem: function(helpers) {\r\n        var selectable = this.options.selectable;\r\n        var selected = 'selected';\r\n        var self = this;\r\n        var $item = this._create$Item(this.options.item.template,helpers.subset[helpers.index]);\r\n\r\n        $item.data('item_data', helpers.data.items[helpers.index]);\r\n\r\n        if (selectable) {\r\n            $item.addClass('selectable');\r\n            $item.on('click', function() {\r\n                if (self.isDisabled) return;\r\n\r\n                if (!$item.hasClass(selected)) {\r\n                    if (selectable !== 'multi') {\r\n                        self.repeater.$canvas.find('.repeater-linear .selectable.selected').each(function() {\r\n                            var $itm = $(this);\r\n                            $itm.removeClass(selected);\r\n                            self.repeater.$element.trigger('deselected.lark.repeaterList', $itm);\r\n                        });\r\n                    }\r\n\r\n                    $item.addClass(selected);\r\n                    self.repeater.$element.trigger('selected.lark.repeaterList', $item);\r\n                } else {\r\n                    $item.removeClass(selected);\r\n                    self.repeater.$element.trigger('deselected.lark.repeaterList', $item);\r\n                }\r\n            });\r\n        }\r\n\r\n        helpers.container.append($item);\r\n\r\n\r\n        if (this.options.itemRendered) {\r\n            this.options.itemRendered({\r\n                container: helpers.container,\r\n                item: $thumbnail,\r\n                itemData: helpers.subset[helpers.index]\r\n            }, function() {});\r\n        }\r\n\r\n        return false;\r\n    }\r\n    \r\n  });\r\n\r\n\r\n    views[\"linear\"] = {\r\n        name : \"linear\",\r\n        ctor : LinearView\r\n    };\r\n\r\n    return LinearView;\r\n    \r\n});"]}