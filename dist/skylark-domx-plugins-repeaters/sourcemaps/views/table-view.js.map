{"version":3,"sources":["views/table-view.js"],"names":["define","langx","browser","eventer","noder","geom","$","Checkbox","viewTypeRegistry","ViewBase","TableView","inherit","klassName","options","columnRendered","columnSizing","columnSyncing","highlightSortedColumn","infiniteScroll","noItemsHTML","selectable","sortClearing","rowRendered","frozenColumns","actions","viewClass","tableWrapperClass","checkClass","headingClass","actionsPlaceHolderClass","clearSelectedItems","this","repeater","$canvas","find","remove","removeClass","highlightColumn","index","force","tbody","each","filter","parent","hasClass","addClass","getSelectedItems","selected","$item","push","data","element","positionHeadings","$wrapper","offsetLeft","offset","left","scrollLeft","$heading","parents","css","setSelectedItems","itms","i","length","self","items","isArray","checkIfItemMatchesValue","rowIndex","property","value","selectItem","$itm","slct","$frozenCols","undefined","prepend","sizeHeadings","$th","height","outerHeight","outerWidth","setFrozenColumns","frozenTable","$table","repeaterWrapper","numFrozenColumns","$frozenColumnWrapper","insertBefore","$frozenColumn","clone","$frozenThead","$frozenTheadWrapper","append","$checkboxLabel","attr","sizeFrozenColumns","on","click","positionColumns","scrollTop","frozenEnabled","actionsEnabled","canvasWidth","shouldScroll","createItemActions","actionsHtml","$actionsTable","len","action","name","html","$actionsColumnWrapper","width","$actionsColumn","rowNumber","id","exceptActionRows","inArray","actionsDropdown","label","sizeActionsTable","e","isDisabled","actionName","rows","getActionItems","selector","selectorIndex","createItemActions_1","actions_width","selectedObj","actionObj","grep","selectedRowsL","clickedRow","item","rowData","clickAction","$actionsTableHeader","columnWidth","frozenOptionsInitialize","$checkboxes","$headerCheckbox","$everyTable","type","plugin","$rowCheckboxes","$checkAll","revertCheckbox","$checkbox","revertingCheckbox","checkbox","preventDefault","currentTarget","row","parseInt","numSelected","prop","is","trigger","cleared","dataOptions","sortDirection","sortProperty","enabled","helpers","status","removeAttr","toggleActionsHeaderButton","call","initialize","callback","specialBrowserClass","noItems","resize","sizeColumns","opts","infScroll","firstRender","$loader","infiniteScrolling","before","$listContainer","container","count","renderThead","renderTbody","renderItem","renderRow","subset","after","$sorted","renderColumn","$row","columns","columnIndex","className","content","$col","_auto_width","checkBoxMarkup","renderHeader","$tr","$both","sortable","$span","$spans","chevDown","chevUp","$div","checkAllID","$header","add","render","clearInfinite","pageIncrement","$tbody","isMulti","isActions","$repeater","$frozenRow","$actionsRow","$checkBox","keyup","keyCode","colLength","columnAttr","$empty","error","$thead","oldCols","newCols","newColsL","j","hasOwnProperty","areDifferentColumns","splice","actionsColumn","checkboxWidth","column","newWidth","widthTaken","automaticallyGeneratedWidths","col","minWidth","Math","floor","ua","window","navigator","userAgent","msie","indexOf","firefox","substring","selectedSelector","ctor"],"mappings":";;;;;;;AAAAA,QACI,sBACA,uBACA,uBACA,qBACA,oBACA,qBACA,wCACA,wBACA,eACD,SAASC,EAAOC,EAASC,EAASC,EAAOC,EAAMC,EAAGC,EAASC,EAAkBC,GAE9E,IAAIC,EAAYD,EAASE,SACvBC,UAAY,YAEZC,SACIC,eAAgB,KAChBC,cAAc,EACdC,eAAe,EACfC,uBAAuB,EACvBC,gBAAgB,EAChBC,YAAa,iBACbC,YAAY,EACZC,cAAc,EACdC,YAAa,KACbC,cAAe,EACfC,SAAS,EAETC,UAAY,iBACZC,kBAAoB,yBACpBC,WAAa,uBACbC,aAAe,yBACfC,wBAA0B,sCAG9BC,mBAAqB,WACjBC,KAAKC,SAASC,QAAQC,SAASH,KAAKlB,QAAQc,cAAcQ,SAC1DJ,KAAKC,SAASC,QAAQC,SAASH,KAAKlB,QAAQY,qCAAqCW,YAAY,aAGjGC,gBAAkB,SAA8BC,EAAOC,GACnD,IAAIC,EAAQT,KAAKC,SAASC,QAAQC,SAASH,KAAKlB,QAAQa,oCACpDK,KAAKlB,QAAQI,uBAAyBsB,KACtCC,EAAMN,KAAK,aAAaE,YAAY,UACpCI,EAAMN,KAAK,MAAMO,KAAK,WACRnC,EAAEyB,MAAMG,KAAK,iBAAmBI,EAAQ,GAAK,KAAKI,OAAO,WAA6B,OAAQpC,EAAEyB,MAAMY,SAASC,SAAS,WAC9HC,SAAS,cAKzBC,iBAAmB,WACf,IAAIC,KAQJ,OAPAhB,KAAKC,SAASC,QAAQC,SAASH,KAAKlB,QAAQY,cAAcM,KAAKlB,QAAQa,+CAA+Ce,KAAK,WACvH,IAAIO,EAAQ1C,EAAEyB,MACdgB,EAASE,MACLC,KAAMF,EAAME,KAAK,aACjBC,QAASH,MAGVD,GAGXK,iBAAmB,WACf,IAAIC,EAAWtB,KAAKC,SAAS1B,IAAI4B,SAASH,KAAKlB,QAAQa,qBACnD4B,EAAaD,EAASE,SAASC,KAClBH,EAASI,aACT,EACbJ,EAASnB,SAASH,KAAKlB,QAAQe,gBAAgBa,KAAK,WAChD,IAAIiB,EAAWpD,EAAEyB,MACbyB,EAAQE,EAASC,QAAQ,YAAYJ,SAASC,KAAOF,EAAc,KACvEI,EAASb,SAAS,WAAWe,IAAI,OAAQJ,KAG7CH,EAASnB,SAASH,KAAKlB,QAAQe,gBAAgBa,KAAK,WAChDnC,EAAEyB,MAAMK,YAAY,WAAWwB,IAAI,OAAQ,OAKvDC,iBAAmB,SAA+BC,EAAMvB,GACpD,IAGIwB,EACAf,EACAgB,EALA5C,EAAaW,KAAKlB,QAAQO,WAC1B6C,EAAOlC,KAMPmC,EAAQJ,EACPxD,EAAE6D,QAAQD,KACXA,GAASA,IAIb,IAAIE,EAA0B,SAAkCC,GAC5DrB,EAAQ1C,EAAEyB,OAEHiB,EAAME,KAAK,kBACTgB,EAAMH,GAAGO,YAAcJ,EAAMH,GAAGQ,OACrCC,EAAWxB,EAAOkB,EAAMH,GAAGhB,SAAUsB,IAIzCG,EAAa,SAAqBC,EAAMC,EAAMpC,GAC9C,IAAIqC,OAEmBC,IAATF,GAAsBA,GAE3BnC,GAAwB,UAAfnB,GACV6C,EAAKnC,qBAGJ2C,EAAK7B,SAAS,cACf6B,EAAK5B,SAAS,aAEVoB,EAAKpD,QAAQU,eAA6C,UAA5B0C,EAAKpD,QAAQO,eAC3CuD,EAAcV,EAAKjC,SAAS1B,IAAI4B,KAAK,wCAA0CI,EAAQ,GAAK,MAEhFO,SAAS,YACrB8B,EAAYzC,KAAK,6BAA6BW,SAAS,YAGvDoB,EAAKpD,QAAQW,SACbyC,EAAKjC,SAAS1B,IAAI4B,KAAK,yCAA2CI,EAAQ,GAAK,KAAKO,SAAS,YAGjG4B,EAAKvC,KAAK,YAAY2C,uBAAuB9C,KAAKlB,QAAQc,qEAG1DsC,EAAKpD,QAAQU,iBACboD,EAAcV,EAAKjC,SAAS1B,IAAI4B,KAAK,wCAA0CI,EAAQ,GAAK,MAEhFO,SAAS,YACrB8B,EAAYzC,KAAK,6BAA6BE,YAAY,YAG1D6B,EAAKpD,QAAQW,SACbyC,EAAKjC,SAAS1B,IAAI4B,KAAK,yCAA2CI,EAAQ,GAAK,KAAKF,YAAY,YAGpGqC,EAAKvC,SAASH,KAAKlB,QAAQc,cAAcQ,SACzCsC,EAAKrC,YAAY,cAYzB,IAPI4B,GADU,IAAVzB,GAAiC,UAAfnB,EACT8C,EAAMF,OACR5C,GACG8C,EAAMF,OAAS,EAAK,EAErB,EAGRD,EAAI,EAAGA,EAAIC,EAAQD,SACGa,IAAnBV,EAAMH,GAAGzB,OACTU,EAAQjB,KAAKC,SAASC,QAAQC,SAASH,KAAKlB,QAAQY,cAAcM,KAAKlB,QAAQa,iDAAmDwC,EAAMH,GAAGzB,MAAQ,GAAK,MAC9I0B,OAAS,GACfQ,EAAWxB,EAAOkB,EAAMH,GAAGhB,SAAUmB,EAAMH,GAAGzB,YAErBsC,IAAtBV,EAAMH,GAAGO,eAA6CM,IAAnBV,EAAMH,GAAGQ,OACnDxC,KAAKC,SAASC,QAAQC,SAASH,KAAKlB,QAAQY,cAAcM,KAAKlB,QAAQa,sCAAsCe,KAAK2B,IAK9HU,aAAe,WACX,IACIb,EAAOlC,KADEA,KAAKC,SAAS1B,IAAI4B,SAASH,KAAKlB,QAAQY,mBAE9CS,KAAK,YAAYO,KAAK,WACzB,IAAIsC,EAAMzE,EAAEyB,MACR2B,EAAWqB,EAAI7C,SAAS+B,EAAKpD,QAAQe,gBACzC8B,EAASE,KAAMoB,OAAQD,EAAIE,gBAC3BvB,EAASwB,WAAWxB,EAASR,KAAK,iBAAmB6B,EAAIG,iBAIjEC,iBAAmB,WACf,IAAIC,EAAcrD,KAAKC,SAASC,QAAQC,KAAK,iBACzCmB,EAAWtB,KAAKC,SAAS1B,IAAI4B,KAAK,oBAClCmD,EAAStD,KAAKC,SAAS1B,IAAI4B,SAASH,KAAKlB,QAAQY,cAAcM,KAAKlB,QAAQa,6BAC5E4D,EAAkBvD,KAAKC,SAAS1B,IAAI4B,SAASH,KAAKlB,QAAQY,aAC1D8D,EAAmBxD,KAAKlB,QAAQU,cAChC0C,EAAOlC,KAOX,GALgC,UAA5BA,KAAKlB,QAAQO,aACbmE,GAAsC,EACtClC,EAASR,SAAS,yBAGlBuC,EAAYpB,OAAS,EAAG,CAGxB,IAAIwB,EAAuBlF,EAAE,6CAA6CmF,aAAaJ,GACnFK,EAAgBL,EAAOM,QAAQ9C,SAAS,gBAC5C6C,EAAcxD,KAAK,cAAgBqD,EAAmB,MAAMpD,SAC5DuD,EAAcxD,KAAK,uCAAyCqD,EAAmB,MAAMpD,SAGrF,IAAIyD,EAAeF,EAAcC,QAAQvD,YAAY,gBACrDwD,EAAa1D,KAAK,SAASC,SAC3B,IAAI0D,EAAsBvF,EAAE,4CAA4CwF,OAAOF,GAI3EG,EAAiBF,EAAoB3D,KAAK,4CAC9C6D,EAAeC,KAAK,KAAMD,EAAeC,KAAK,MAAQ,WAEtDR,EAAqBM,OAAOJ,GAC5BJ,EAAgBQ,OAAOD,GACvB9D,KAAKC,SAASC,QAAQY,SAAS,kBAGnCd,KAAKkE,oBAEL3F,4BAA4ByB,KAAKlB,QAAQe,gBAAgBsE,GAAG,QAAS,WACjE,IAAI5D,EAAQhC,EAAEyB,MAAMY,OAAO,MAAML,QACjCA,GAAgB,EAChB2B,EAAKjC,SAAS1B,IAAI4B,SAASH,KAAKlB,QAAQa,gDAAkDY,QAAcP,KAAKlB,QAAQe,gBAAgB,GAAGuE,WAIhJC,gBAAkB,WACd,IAAI/C,EAAWtB,KAAKC,SAAS1B,IAAI4B,KAAK,oBAClCmE,EAAYhD,EAASgD,YACrB5C,EAAaJ,EAASI,aACtB6C,EAAgBvE,KAAKlB,QAAQU,eAA6C,UAA5BQ,KAAKlB,QAAQO,WAC3DmF,EAAiBxE,KAAKlB,QAAQW,QAE9BgF,EAAczE,KAAKC,SAAS1B,IAAI4B,KAAK,oBAAoBgD,aAKzDuB,EAJa1E,KAAKC,SAAS1B,IAAI4B,SAASH,KAAKlB,QAAQY,cAAcM,KAAKlB,QAAQa,6BAA6BwD,cAI/EsB,GAFfzE,KAAKC,SAAS1B,IAAI4B,KAAK,kBAAoBH,KAAKC,SAAS1B,IAAI4B,KAAK,kBAAkBgD,aAAe,KAEpDzB,EAG9D4C,EAAY,EACZhD,EAASnB,SAASH,KAAKlB,QAAQe,gBAAgBgC,IAAI,MAAOyC,GAE1DhD,EAASnB,SAASH,KAAKlB,QAAQe,gBAAgBgC,IAAI,MAAO,KAG1DH,EAAa,GACT6C,IACAjD,EAASnB,KAAK,yBAAyB0B,IAAI,OAAQH,GACnDJ,EAASnB,KAAK,0BAA0B0B,IAAI,OAAQH,IAEpD8C,GAAkBE,IAClBpD,EAASnB,KAAK,0BAA0B0B,IAAI,SAAUH,GACtDJ,EAASnB,KAAK,2BAA2B0B,IAAI,SAAUH,MAGvD6C,IACAjD,EAASnB,KAAK,yBAAyB0B,IAAI,OAAQ,KACnDP,EAASnB,KAAK,0BAA0B0B,IAAI,OAAQ,MAEpD2C,IACAlD,EAASnB,KAAK,0BAA0B0B,IAAI,QAAS,KACrDP,EAASnB,KAAK,2BAA2B0B,IAAI,QAAS,QAKlE8C,kBAAoB,WAChB,IAEI3C,EAFA4C,EAAc,GACd1C,EAAOlC,KAEPsD,EAAStD,KAAKC,SAAS1B,IAAI4B,SAASH,KAAKlB,QAAQY,cAAcM,KAAKlB,QAAQa,6BAC5EkF,EAAgB7E,KAAKC,SAASC,QAAQC,KAAK,kBAC3C2E,EAAM9E,KAAKlB,QAAQW,QAAQ0C,MAAMF,OACrC,GAAW,GAAP6C,EAAU,CACV,IAAIC,EAAS/E,KAAKlB,QAAQW,QAAQ0C,MAAM,GAExC,GADAyC,EAAc,6CAA+CG,EAAOC,KAAO,0BAA4BD,EAAOE,KAAO,OACjHJ,EAAc5C,OAAS,EAAG,CAC1B,IAAIiD,EAAwB3G,EAAE,qDAAuDyB,KAAKlB,QAAQW,QAAQ0F,MAAQ,cAAczB,aAAaJ,IACzI8B,EAAiB9B,EAAOM,QAAQ9C,SAAS,kBAC9BX,KAAK,uBAAuBC,SAC3CgF,EAAejF,KAAK,0BAA0BC,SAE1BgF,EAAejF,KAAK,MAE1BO,KAAK,SAAU2E,GACzB,IAAIC,EAAK/G,EAAEyB,MAAMY,SAASqD,KAAK,MAC3B9C,EAAO5C,EAAE,IAAM+G,GAAInE,KAAK,aACxBe,EAAKpD,QAAQyG,kBAAoBpE,GAAQjD,EAAMsH,QAAQtD,EAAKpD,QAAQyG,iBAAkBpE,EAAK6D,MAC3FzG,EAAEyB,MAAMiF,KAAK,KAEb1G,EAAEyB,MAAMiF,KAAKL,GAEjBrG,EAAEyB,MAAMG,KAAK,KAAK8D,KAAK,WAAYoB,EAAY,UAGpD,CACH,IAAKrD,EAAI,EAAGA,EAAI8C,EAAK9C,IAAK,CACtB,IACIiD,GADAF,EAAS/E,KAAKlB,QAAQW,QAAQ0C,MAAMH,IACtBiD,KAElBL,GAAe,cAAgBG,EAAOC,KAAO,+CAAiDD,EAAOC,KAAO,0BAA4BC,EAAO,YAEnJ,IAAIQ,EAAkB,mEAClBb,EAAc,QAClB,GAAIC,EAAc5C,OAAS,EAAG,CAC1B,IACImD,EADAF,EAAwB3G,EAAE,qDAAuDyB,KAAKlB,QAAQW,QAAQ0F,MAAQ,cAAczB,aAAaJ,GAM7I,IALI8B,EAAiB9B,EAAOM,QAAQ9C,SAAS,kBAC9BX,KAAK,uBAAuBC,SAC3CgF,EAAejF,KAAK,0BAA0BC,SAGd,UAA5BJ,KAAKlB,QAAQO,YAAsD,WAA5BW,KAAKlB,QAAQO,WACpD+F,EAAejF,KAAK,YAAY8E,KAAK,0CAA4CQ,EAAkB,eAEnE,WAA5BzF,KAAKlB,QAAQO,YAEb+F,EAAejF,KAAK,cAAc8D,KAAK,WAAY,gBAEpD,CACH,IAAIyB,EAAQ1F,KAAKlB,QAAQW,QAAQiG,OAAS,wCAC1CN,EAAejF,KAAK,YAAYW,SAAS,iBAAiBmE,KAAK,OAASS,EAAQ,sCAAwCA,EAAQ,eAIhHN,EAAejF,KAAK,MAE1BO,KAAK,SAA4B2E,GAC3C9G,EAAEyB,MAAMiF,KAAKQ,GAAiB3E,SAAS,iBACvCvC,EAAEyB,MAAMG,KAAK,KAAK8D,KAAK,WAAYoB,EAAY,MAK3DH,EAAsBnB,OAAOqB,GAE7BpF,KAAKC,SAASC,QAAQY,SAAS,mBAC/Bd,KAAK2F,mBAGL3F,KAAKC,SAAS1B,IAAI4B,KAAK,qCAAqCgE,GAAG,QAAS,SAA+ByB,GACnG,IAAK1D,EAAK2D,WAAY,CAClB,IAEI7E,GACA8E,WAHavH,EAAEyB,MAAMmB,KAAK,UAI1B4E,MAHMxH,EAAEyB,MAAMmB,KAAK,SAKvBe,EAAK8D,eAAehF,EAAU4E,MAItC5F,KAAKC,SAAS1B,IAAI4B,KAAK,qCAAqCgE,GAAG,QAAS,SAA+ByB,GACnG,IAAK1D,EAAK2D,WAAY,CAClB,IACI7E,GACA8E,WAFavH,EAAEyB,MAAMmB,KAAK,UAG1B4E,SAGAE,MAAejG,KAAKlB,QAAQa,sCAEC,WAA5BuC,EAAKpD,QAAQO,aACd4G,MAAejG,KAAKlB,QAAQa,gCAGhCuC,EAAKjC,SAAS1B,IAAI4B,KAAK8F,GAAUvF,KAAK,SAAsBwF,GACxDlF,EAAS+E,KAAK7E,KAAKgF,EAAgB,KAGvChE,EAAK8D,eAAehF,EAAU4E,OAI1CO,oBAAqB,WAEjB,IAEInE,EACAC,EAHA2C,EAAc,GACd1C,EAAOlC,KAGPsD,EAAStD,KAAKC,SAAS1B,IAAI4B,SAASH,KAAKlB,QAAQY,cAAcM,KAAKlB,QAAQa,6BAC5EkF,EAAgB7E,KAAKC,SAASC,QAAQC,KAAK,kBAE/C,IAAK6B,EAAI,EAAGC,EAASjC,KAAKlB,QAAQW,QAAQ0C,MAAMF,OAAQD,EAAIC,EAAQD,IAAK,CACrE,IAAI+C,EAAS/E,KAAKlB,QAAQW,QAAQ0C,MAAMH,GACpCiD,EAAOF,EAAOE,KAElBL,GAAe,gCAAkCG,EAAOC,KAAO,0BAA4BC,EAAO,YAGtG,IAAIQ,EAAkB,mRAKlBb,EACA,cAEJ,GAAIC,EAAc5C,OAAS,EAAG,CAC1B,IAAIiD,EAAwB3G,EAAE,qDAAuDyB,KAAKoG,cAAgB,cAAc1C,aAAaJ,GACjI8B,EAAiB9B,EAAOM,QAAQ9C,SAAS,iBAK7C,GAJAsE,EAAejF,KAAK,uBAAuBC,SAC3CgF,EAAejF,KAAK,0BAA0BC,SAGd,UAA5BJ,KAAKlB,QAAQO,YAAsD,WAA5BW,KAAKlB,QAAQO,WACpD+F,EAAejF,KAAK,YAAY8E,wBAAwBjF,KAAKlB,QAAQe,iBAAmB4F,EAAkB,eAE1E,WAA5BzF,KAAKlB,QAAQO,YAEb+F,EAAejF,KAAK,cAAc8D,KAAK,WAAY,gBAEpD,CACH,IAAIyB,EAAQ1F,KAAKlB,QAAQW,QAAQiG,OAAS,wCAC1CN,EAAejF,KAAK,YAAYW,SAAS,iBAAiBmE,KAAK,OAASS,iBAAuB1F,KAAKlB,QAAQe,iBAAmB6F,EAAQ,eAIvHN,EAAejF,KAAK,MAE1BO,KAAK,SAA6B2E,GAC5C9G,EAAEyB,MAAMiF,KAAKQ,GACblH,EAAEyB,MAAMG,KAAK,KAAK8D,KAAK,WAAYoB,EAAY,KAGnDH,EAAsBnB,OAAOqB,GAE7BpF,KAAKC,SAASC,QAAQY,SAAS,mBAGnCd,KAAK2F,mBAGL3F,KAAKC,SAAS1B,IAAI4B,KAAK,qCAAqCgE,GAAG,QAAS,SAAgCyB,GACpG,IAAK1D,EAAK2D,WAAY,CAClB,IAEI7E,GACA8E,WAHavH,EAAEyB,MAAMmB,KAAK,UAI1B4E,MAHMxH,EAAEyB,MAAMmB,KAAK,SAKvBe,EAAK8D,eAAehF,EAAU4E,MAItC5F,KAAKC,SAAS1B,IAAI4B,KAAK,qCAAqCgE,GAAG,QAAS,SAAgCyB,GACpG,IAAK1D,EAAK2D,WAAY,CAClB,IACI7E,GACA8E,WAFavH,EAAEyB,MAAMmB,KAAK,UAG1B4E,SAEAE,MAAejG,KAAKlB,QAAQa,sCAEC,WAA5BuC,EAAKpD,QAAQO,aACd4G,MAAejG,KAAKlB,QAAQa,gCAEhCuC,EAAKjC,SAAS1B,IAAI4B,KAAK8F,GAAUvF,KAAK,SAAuBwF,GACzDlF,EAAS+E,KAAK7E,KAAKgF,EAAgB,KAGvChE,EAAK8D,eAAehF,EAAU4E,OAK1CI,eAAiB,SAA6BhF,EAAU4E,GAKpD,IAJA,IAAIS,KACAC,EAAY/H,EAAEgI,KAAKvG,KAAKlB,QAAQW,QAAQ0C,MAAO,SAAyB1C,GACxE,OAAOA,EAAQuF,OAAShE,EAAS8E,aAClC,GACM9D,EAAI,EAAGwE,EAAgBxF,EAAS+E,KAAK9D,OAAQD,EAAIwE,EAAexE,IAAK,CAC1E,IAAIyE,EAAazG,KAAKC,SAASC,QAAQC,SAASH,KAAKlB,QAAQa,gDAAkDqB,EAAS+E,KAAK/D,GAAK,KAClIqE,EAAYnF,MACRwF,KAAMD,EACNE,QAASF,EAAWtF,KAAK,eAOjC,GAJ2B,IAAvBkF,EAAYpE,SACZoE,EAAcA,EAAY,IAG1BC,EAAUM,YAAa,CAEvBN,EAAUM,YAAYP,EADP,aAC8BT,KAIrDD,iBAAmB,WACf,IAAId,EAAgB7E,KAAKC,SAAS1B,IAAI4B,SAASH,KAAKlB,QAAQY,iCACxDmH,EAAsBhC,EAAc1E,KAAK,eACzCmD,EAAStD,KAAKC,SAAS1B,IAAI4B,SAASH,KAAKlB,QAAQa,6BAErDkH,EAAoB3D,YAAYI,EAAOnD,KAAK,eAAe+C,eAC3D2D,EAAoB1G,SAASH,KAAKlB,QAAQe,gBAAgBqD,YAAY2D,EAAoB3D,eAC1F2B,EAAc1E,KAAK,2BAA2BO,KAAK,SAAyBsB,GACxEzD,EAAEyB,MAAMkD,YAAYI,EAAOnD,KAAK,eAAiB6B,EAAI,QAAQkB,kBAIrEgB,kBAAoB,WAChB,IAAIZ,EAAStD,KAAKC,SAAS1B,IAAI4B,SAASH,KAAKlB,QAAQY,cAAcM,KAAKlB,QAAQa,6BAEhFK,KAAKC,SAAS1B,IAAI4B,SAASH,KAAKlB,QAAQY,mCAAmCgB,KAAK,SAAiBsB,GAC7FzD,EAAEyB,MAAMiD,OAAOK,EAAOnD,KAAK,SAAW6B,EAAI,KAAKiB,YAGnD,IAAI6D,EAAcxD,EAAOnD,KAAK,YAAYgD,aAC1CnD,KAAKC,SAAS1B,IAAI4B,KAAK,iDAAiDgF,MAAM2B,IAGlFC,wBAA0B,WACtB,IAAIC,EAAchH,KAAKC,SAAS1B,IAAI4B,KAAK,2CACrC8G,EAAkBjH,KAAKC,SAAS1B,IAAI4B,KAAK,qCACzC+G,EAAclH,KAAKC,SAAS1B,IAAI4B,SAASH,KAAKlB,QAAQY,mBACtDwC,EAAOlC,KAGXA,KAAKC,SAAS1B,IAAI4B,KAAK,iBAAiBgE,GAAG,uBAAwB,SAAwByB,GACvF,IAAIrF,EAAQhC,EAAEyB,MAAMO,QACpBA,GAAgB,EACD,cAAXqF,EAAEuB,KACFD,EAAY/G,KAAK,sBAAwBI,EAAQ,KAAKO,SAAS,WAE/DoG,EAAY/G,KAAK,sBAAwBI,EAAQ,KAAKF,YAAY,aAI1E4G,EAAgBG,OAAO,yBACvBJ,EAAYI,OAAO,yBAGnB,IAAIC,EAAiBrH,KAAKC,SAAS1B,IAAI4B,KAAK,wCACxCmH,EAAYtH,KAAKC,SAAS1B,IAAI4B,KAAK,sDA0CvC,SAASoH,EAAgBC,GACrBtF,EAAKuF,mBAAoB,EACzBD,EAAUE,SAAS,iBACZxF,EAAKuF,kBA5ChBJ,EAAelD,GAAG,SAAU,SAAgCyB,GAGxD,GAFAA,EAAE+B,kBAEGzF,EAAKuF,kBACN,GAAIvF,EAAK2D,WACL0B,EAAehJ,EAAEqH,EAAEgC,oBAChB,CACH,IAAIC,EAAMtJ,EAAEyB,MAAMiE,KAAK,YACvB4D,EAAMC,SAASD,EAAK,IAAM,EAC1B3F,EAAKjC,SAAS1B,IAAI4B,SAASH,KAAKlB,QAAQa,gDAAkDkI,EAAM,KAAKzD,QAErG,IAAI2D,EAAc7F,EAAKjC,SAAS1B,IAAI4B,KAAK,gDAAgD8B,OACrE,IAAhB8F,GACAT,EAAUU,KAAK,WAAW,GAC1BV,EAAUU,KAAK,iBAAiB,IACzBD,IAAgBV,EAAepF,QACtCqF,EAAUU,KAAK,WAAW,GAC1BV,EAAUU,KAAK,iBAAiB,KAEhCV,EAAUU,KAAK,WAAW,GAC1BV,EAAUU,KAAK,iBAAiB,OAOhDV,EAAUnD,GAAG,SAAU,SAA2ByB,GACzC1D,EAAKuF,oBACFvF,EAAK2D,WACL0B,EAAehJ,EAAEqH,EAAEgC,gBACZrJ,EAAEyB,MAAMiI,GAAG,aAClB/F,EAAKjC,SAAS1B,IAAI4B,SAASH,KAAKlB,QAAQa,qDAAqDyE,QAC7FlC,EAAKjC,SAAS1B,IAAI2J,QAAQ,WAAYlB,KAEtC9E,EAAKjC,SAAS1B,IAAI4B,SAASH,KAAKlB,QAAQa,+CAA+CyE,QACvFlC,EAAKjC,SAAS1B,IAAI2J,QAAQ,aAAclB,QAYxDmB,QAAS,WACDnI,KAAKlB,QAAQG,eACbe,KAAK+C,gBAGbqF,YAAa,SAAsBtJ,GAO/B,OANIkB,KAAKqI,gBACLvJ,EAAQuJ,cAAgBrI,KAAKqI,eAE7BrI,KAAKsI,eACLxJ,EAAQwJ,aAAetI,KAAKsI,cAEzBxJ,GAEXyJ,QAAS,SAAkBC,GACnBxI,KAAKlB,QAAQW,UACR+I,EAAQC,QAGTzI,KAAKC,SAASC,QAAQC,KAAK,4BAA4BuI,WAAW,YAClEC,EAA0BC,KAAK5I,OAH/BA,KAAKC,SAASC,QAAQC,KAAK,4BAA4B8D,KAAK,WAAY,cAOpF4E,WAAY,SAAqBL,EAASM,GACtC9I,KAAKqI,cAAgB,KACrBrI,KAAKsI,aAAe,KACpBtI,KAAK+I,oBAAsBA,IAC3B/I,KAAKoG,mBAAgDvD,IAA/B7C,KAAKlB,QAAQW,QAAQ0F,MAAuBnF,KAAKlB,QAAQW,QAAQ0F,MAAQ,GAC/FnF,KAAKgJ,SAAU,EACfF,KAEJG,OAAQ,WACJC,EAAYN,KAAK5I,KAAMA,KAAKC,SAAS1B,IAAI4B,SAASH,KAAKlB,QAAQa,uCAC3DK,KAAKlB,QAAQW,SACbO,KAAK2F,oBAEL3F,KAAKlB,QAAQU,eAA6C,UAA5BQ,KAAKlB,QAAQO,aAC3CW,KAAKkE,oBAELlE,KAAKlB,QAAQG,eACbe,KAAK+C,gBAGb/B,SAAU,WACN,IACImI,EADAC,EAAYpJ,KAAKlB,QAAQK,eAG7Ba,KAAKqJ,aAAc,EACnBrJ,KAAKC,SAASqJ,QAAQxI,SAAS,YAE3BsI,IACAD,EAA6B,iBAAdC,EAA0BA,KACzCpJ,KAAKC,SAASsJ,mBAAkB,EAAMJ,KAG9CK,OAAQ,SAAiBhB,GACrB,IAEIlF,EAFAmG,EAAiBjB,EAAQkB,UAAUvJ,SAASH,KAAKlB,QAAQY,aACzDwC,EAAOlC,KA+BX,OA3BIwI,EAAQrH,KAAKwI,MAAQ,EACrB3J,KAAKgJ,SAAU,EAEfhJ,KAAKgJ,SAAU,EAGfS,EAAexH,OAAS,KACxBwH,EAAiBlL,iBAAiByB,KAAKlB,QAAQY,aAAeM,KAAK+I,6DAA+D/I,KAAKlB,QAAQa,uKAChIQ,SAASH,KAAKlB,QAAQa,qBAAqBwE,GAAG,2BAA4B,WACjFjC,EAAKpD,QAAQG,eACbiD,EAAKb,sBAGTa,EAAKpD,QAAQU,eAAiB0C,EAAKpD,QAAQW,SAAuC,UAA5ByC,EAAKpD,QAAQO,aACnEmJ,EAAQkB,UAAUvF,GAAG,2BAA4B,WAC7CjC,EAAKmC,oBAIbmE,EAAQkB,UAAU3F,OAAO0F,IAE7BjB,EAAQkB,UAAUrJ,YAAY,wDAE9BiD,EAASmG,EAAetJ,KAAK,SAC7ByJ,EAAYhB,KAAK5I,KAAMsD,EAAQkF,EAAQrH,MACvC0I,EAAYjB,KAAK5I,KAAMsD,EAAQkF,EAAQrH,OAEhC,GAEX2I,WAAY,SAAqBtB,GAE7B,OADAuB,EAAUnB,KAAK5I,KAAMwI,EAAQkB,UAAWlB,EAAQwB,OAAQxB,EAAQjI,QACzD,GAEX0J,MAAO,WACH,IAAIC,EA0BJ,OAxBKlK,KAAKlB,QAAQU,eAA6C,UAA5BQ,KAAKlB,QAAQO,YAA4BW,KAAKgJ,SAC7EhJ,KAAKoD,mBAGLpD,KAAKlB,QAAQW,UAAYO,KAAKgJ,UAC9BhJ,KAAK2E,oBACL3E,KAAK2F,qBAGJ3F,KAAKlB,QAAQU,gBAAiBQ,KAAKlB,QAAQW,SAAuC,UAA5BO,KAAKlB,QAAQO,YAA4BW,KAAKgJ,UACrGhJ,KAAKqE,kBACLrE,KAAK+G,2BAGL/G,KAAKlB,QAAQG,gBACbe,KAAK+C,eACL/C,KAAKqB,qBAGT6I,EAAUlK,KAAKC,SAASC,QAAQC,SAASH,KAAKlB,QAAQa,8BAA8BK,KAAKlB,QAAQe,wBACrFoC,OAAS,GACjBjC,KAAKM,gBAAgB4J,EAAQ/I,KAAK,mBAG/B,KA8BPgJ,EAAe,SAAuBC,EAAMrE,EAAMzD,EAAU+H,EAASC,GACrE,IAAIC,EAAYF,EAAQC,GAAaC,UACjCC,EAAUzE,EAAKzD,GAAU+H,EAAQC,GAAa/H,UAC9CkI,EAAOlM,EAAE,aACT4G,EAAQkF,EAAQC,GAAaI,YAE7BnI,EAAW8H,EAAQC,GAAa/H,SAcpC,IAb6B,IAAzBvC,KAAKlB,QAAQW,SAAkC,gBAAb8C,IAClCiI,iBAAyBxK,KAAKlB,QAAQgB,0CAA4CE,KAAKoG,cAAiB,cAG5GoE,OAAuB3H,IAAZ2H,EAAyBA,EAAU,GAE9CC,EAAK3J,cAAyB+B,IAAd0H,EAA2BA,EAAY,IAAKxG,OAAOyG,QACrD3H,IAAVsC,GACAsF,EAAKtH,WAAWgC,GAGpBiF,EAAKrG,OAAO0G,GAEoB,UAA5BzK,KAAKlB,QAAQO,YAA4D,iBAAlCgL,EAAQC,GAAa/H,SAA6B,CACzF,IAAIoI,EAAiB,oBAAsBrI,EAAW,mIAGtDmI,EAAKxF,KAAK0F,GAGd,OAAOF,GAGPG,EAAe,SAAuBC,EAAKR,EAAS9J,GACpD,IAeIuK,EACAP,EACAQ,EACAC,EACAC,EAnBAC,EAAW,yBAEXC,EAAS,uBACTC,EAAO7M,iBAAiByB,KAAKlB,QAAQe,2DACrCwL,GAAcrL,KAAKC,SAAS1B,IAAI0F,KAAK,MAAQ,KAAO,IAAM,WAE1D0G,iBAAgC3K,KAAKlB,QAAQe,iCACzC,cAAgBwL,EAAa,qJAMjCC,EAAU/M,EAAE,aACZ2D,EAAOlC,KAqBX,GAdAoL,EAAKjK,KAAK,gBAAiBZ,GAC3B6K,EAAKtI,QAAQuH,EAAQ9J,GAAOmF,OAC5B4F,EAAQrG,KAAKmG,EAAKnG,QAAQ9E,KAAK,QAAQuI,WAAW,MAElB,iBAA5B2B,EAAQ9J,GAAOgC,SACf+I,EAAQvH,OAAOqH,GAEfE,EAAQvH,OAAO4G,GAGnBG,EAAQQ,EAAQC,IAAIH,GACpBJ,EAAQI,EAAKjL,KA/BC,wBAgCd8K,EAASD,EAAMO,IAAID,EAAQnL,KAhCb,yBAkCVH,KAAKlB,QAAQW,SAAuC,gBAA5B4K,EAAQ9J,GAAOgC,SAA4B,CACnE,IAAI4C,EAAQnF,KAAKoG,cACjBkF,EAAQzJ,IAAI,QAASsD,GACrBiG,EAAKvJ,IAAI,QAASsD,QAIJtC,KADlB0H,EAAYF,EAAQ9J,GAAOgK,YAEvBO,EAAMhK,SAASyJ,IAInBQ,EAAWV,EAAQ9J,GAAOwK,YAEtBD,EAAMhK,SAAS,YACfsK,EAAKjH,GAAG,0BAA2B,WAC1BjC,EAAK2D,aACN3D,EAAKoG,aAAoC,iBAAbyC,EAAyBA,EAAWV,EAAQ9J,GAAOgC,SAC3E6I,EAAKvK,SAAS,UACVmK,EAAMnK,SAASsK,IACfF,EAAO5K,YAAY8K,GAAQrK,SAASoK,GACpChJ,EAAKmG,cAAgB,QACbnG,EAAKpD,QAAQQ,cAIrBwL,EAAMzK,YAAY,UAClB4K,EAAO5K,YAAY6K,GACnBhJ,EAAKmG,cAAgB,KACrBnG,EAAKoG,aAAe,OANpB2C,EAAO5K,YAAY6K,GAAUpK,SAASqK,GACtCjJ,EAAKmG,cAAgB,QAQzBwC,EAAI1K,aAAa+B,EAAKpD,QAAQe,gBAAgBQ,YAAY,UAC1D4K,EAAO5K,YAAY6K,GAAUpK,SAASqK,GACtCjJ,EAAKmG,cAAgB,MACrByC,EAAMhK,SAAS,WAGnBoB,EAAKjC,SAASuL,QACVC,eAAe,EACfC,cAAe,WAMM,QAAjCrB,EAAQ9J,GAAO8H,eAA4D,SAAjCgC,EAAQ9J,GAAO8H,gBACzDwC,EAAI1K,aAAaH,KAAKlB,QAAQe,gBAAgBQ,YAAY,UAC1DyK,EAAMhK,SAAS,mBACsB,QAAjCuJ,EAAQ9J,GAAO8H,eACf4C,EAAOnK,SAASqK,GAChBnL,KAAKqI,cAAgB,QAErB4C,EAAOnK,SAASoK,GAChBlL,KAAKqI,cAAgB,QAGzBrI,KAAKsI,aAAoC,iBAAbyC,EAAyBA,EAAWV,EAAQ9J,GAAOgC,UAGnFsI,EAAI9G,OAAOuH,IAqDXvB,EAAY,SAAoB4B,EAAQ5F,EAAMxF,GAC9C,IAAI6J,EAAO7L,EAAE,aAEb,GAAIyB,KAAKlB,QAAQO,aACb+K,EAAKjJ,KAAK,YAAa4E,EAAKxF,IAEI,WAA5BP,KAAKlB,QAAQO,YAAyB,CACtC+K,EAAKtJ,SAAS,cACdsJ,EAAKnG,KAAK,WAAY,GAEtB,IAAIhE,EAAWD,KACfoK,EAAKjG,GAAG,0BAA2B,YA7DlB,SAAiClE,GAC1D,IAAI2L,EAA0C,UAAhC3L,EAASnB,QAAQO,WAC3BwM,EAAY5L,EAASnB,QAAQW,QAC7BqM,EAAY7L,EAAS1B,IAEzB,IAAK0B,EAAS4F,WAAY,CACtB,IAAI5E,EAAQ1C,EAAEyB,MACVO,EAAQhC,EAAEyB,MAAMO,QAAU,EAC1BwL,EAAaD,EAAU3L,KAAK,uCAAyCI,EAAQ,KAC7EyL,EAAcF,EAAU3L,KAAK,wCAA0CI,EAAQ,KAC/E0L,EAAYH,EAAU3L,KAAK,uCAAyCI,EAAQ,sBAE5EU,EAAMgH,GAAG,cACThH,EAAMZ,YAAY,YACduL,GACAK,EAAU7H,QACV2H,EAAW1L,YAAY,YACnBwL,GACAG,EAAY3L,YAAY,aAG5BY,EAAMd,SAASH,KAAKlB,QAAQc,cAAcQ,SAG9C0L,EAAU5D,QAAQ,+BAAgCjH,KAE7C2K,GAUDK,EAAU7H,QACVnD,EAAMH,SAAS,YACfiL,EAAWjL,SAAS,YAChB+K,GACAG,EAAYlL,SAAS,cAbzBb,EAASC,QAAQC,SAASH,KAAKlB,QAAQc,cAAcQ,SACrDH,EAASC,QAAQC,SAASH,KAAKlB,QAAQY,+BAA+BgB,KAAK,WACvEnC,EAAEyB,MAAMK,YAAY,YACpByL,EAAU5D,QAAQ,+BAAgC3J,EAAEyB,SAExDiB,EAAMd,KAAK,YAAY2C,uBAAuB9C,KAAKlB,QAAQc,kEAC3DqB,EAAMH,SAAS,YACfiL,EAAWjL,SAAS,aASxBgL,EAAU5D,QAAQ,6BAA8BjH,IAGpD0H,EAA0BC,KAAK3I,MAgBA2I,KAAK5I,KAAMC,KAItCmK,EAAK8B,MAAM,SAAqBtG,GACV,KAAdA,EAAEuG,SAEF/B,EAAKlC,QAAQ,6BAMzBlI,KAAKlB,QAAQW,UAAYO,KAAKlB,QAAQO,YACtC+K,EAAKjJ,KAAK,YAAa4E,EAAKxF,IAIhC,IADA,IAAI8J,KACKrI,EAAI,EAAGC,EAASjC,KAAKqK,QAAQpI,OAAQD,EAAIC,EAAQD,IACtDqI,EAAQnJ,KAAKiJ,EAAavB,KAAK5I,KAAMoK,EAAMrE,EAAMxF,EAAOP,KAAKqK,QAASrI,IAK1E,GAFA2J,EAAO5H,OAAOqG,GAEVpK,KAAKlB,QAAQC,eACb,IAAK,IAAIuL,EAAc,EAAG8B,EAAY/B,EAAQpI,OAAQqI,EAAc8B,EAAW9B,IAC9B,iBAAvCtK,KAAKqK,QAAQC,GAAa/H,UAAsE,gBAAvCvC,KAAKqK,QAAQC,GAAa/H,UACrFvC,KAAKlB,QAAQC,gBACT2K,UAAWU,EACXiC,WAAYrM,KAAKqK,QAAQC,GAAa/H,SACtCmE,KAAM2D,EAAQC,GACd3D,QAASZ,EAAKxF,IACf,cAKXP,KAAKlB,QAAQS,aACbS,KAAKlB,QAAQS,aACTmK,UAAWiC,EACXjF,KAAM0D,EACNzD,QAASZ,EAAKxF,IACf,eAIPsJ,EAAc,SAAsBvG,EAAQnC,GAC5C,IACImL,EADAX,EAASrI,EAAOnD,KAAK,SAGrBwL,EAAO1J,OAAS,IAChB0J,EAASpN,EAAE,yCACX+E,EAAOS,OAAO4H,IAGQ,iBAAfxK,EAAKoL,OAAsBpL,EAAKoL,MAAMtK,OAAS,IACtDqK,EAAS/N,EAAE,8CAAgDyB,KAAKqK,QAAQpI,OAAS,iBAC1E9B,KAAK,MAAM4D,OAAO5C,EAAKoL,OAC9BZ,EAAO5H,OAAOuI,IACPnL,EAAKgB,OAAShB,EAAKgB,MAAMF,OAAS,KACzCqK,EAAS/N,EAAE,kCAAoCyB,KAAKqK,QAAQpI,OAAS,iBAC9D9B,KAAK,MAAM4D,OAAO/D,KAAKlB,QAAQM,aACtCuM,EAAO5H,OAAOuI,KAIlB1C,EAAc,SAAsBtG,EAAQnC,GAC5C,IAEIa,EACAC,EACA4I,EAJAR,EAAUlJ,EAAKkJ,YACfmC,EAASlJ,EAAOnD,KAAK,SAKzB,GAAIH,KAAKqJ,aA7Ra,SAA8BoD,EAASC,GAC7D,IAAKA,EACD,OAAO,EAEX,IAAKD,GAAYC,EAAQzK,SAAWwK,EAAQxK,OACxC,OAAO,EAEX,IAAK,IAAID,EAAI,EAAG2K,EAAWD,EAAQzK,OAAQD,EAAI2K,EAAU3K,IAAK,CAC1D,IAAKyK,EAAQzK,GACT,OAAO,EAGX,IAAK,IAAI4K,KAAKF,EAAQ1K,GAClB,GAAI0K,EAAQ1K,GAAG6K,eAAeD,IAAMH,EAAQzK,GAAG4K,KAAOF,EAAQ1K,GAAG4K,GAC7D,OAAO,EAInB,OAAO,EA2QiBE,CAAoB9M,KAAKqK,QAASA,IAA8B,IAAlBmC,EAAOvK,OAAc,CAKvF,GAJAuK,EAAOpM,SAIyB,UAA5BJ,KAAKlB,QAAQO,aAA2BW,KAAKgJ,QAAS,CAMtDqB,EAAQ0C,OAAO,EAAG,GAJdrH,MAAO,IACPnD,SAAU,eACVwI,UAAU,IAUlB,GALA/K,KAAKqK,QAAUA,EACfrK,KAAKqJ,aAAc,EACnBrJ,KAAKC,SAASqJ,QAAQjJ,YAAY,YAG9BL,KAAKlB,QAAQW,QAAS,CACtB,IAAIuN,GACAtH,MAAO1F,KAAKlB,QAAQW,QAAQiG,OAAS,wCACrCnD,SAAU,cACVwI,UAAU,EACV5F,MAAOnF,KAAKoG,eAEhBiE,EAAQnJ,KAAK8L,GAMjB,IADAnC,GADA2B,EAASjO,EAAE,kDACE4B,KAAK,MACb6B,EAAI,EAAGC,EAASoI,EAAQpI,OAAQD,EAAIC,EAAQD,IAC7C4I,EAAahC,KAAK5I,KAAM6K,EAAKR,EAASrI,GAI1C,GAFAsB,EAAOR,QAAQ0J,GAEiB,UAA5BxM,KAAKlB,QAAQO,aAA2BW,KAAKgJ,QAAS,CAGtD,IAAIiE,EAAgBjN,KAAKC,SAAS1B,IAAI4B,SAASH,KAAKlB,QAAQa,sCAAsCwD,aAC/E5E,EAAEgI,KAAK8D,EAAS,SAAqB6C,GACpD,MAA2B,iBAApBA,EAAO3K,WACf,GACU4C,MAAQ8H,EAEzB/D,EAAYN,KAAK5I,KAAM6K,KAI3B3B,EAAc,SAAsB2B,GACpC,IAEI7I,EACAC,EACAkL,EACAC,EALAC,KACAnL,EAAOlC,KAMX,GAAIA,KAAKlB,QAAQE,eACbgD,EAAI,EACJoL,EAAa,EACbvC,EAAI1K,KAAK,MAAMO,KAAK,WAChB,IACIyE,EADAnC,EAAMzE,EAAEyB,MAEZ,QAA8B6C,IAA1BX,EAAKmI,QAAQrI,GAAGmD,MAChBA,EAAQjD,EAAKmI,QAAQrI,GAAGmD,MACxBnC,EAAIG,WAAWgC,GACfiI,GAAcpK,EAAIG,aAClBjB,EAAKmI,QAAQrI,GAAG0I,YAAcvF,MAC3B,CACH,IAAIhC,EAAaH,EAAI7C,SAAS+B,EAAKpD,QAAQe,gBAAgBsD,aAC3DkK,EAA6BnM,MACzBoM,IAAKtK,EACLzC,MAAOyB,EACPuL,SAAUpK,IAIlBnB,OAGJC,EAASoL,EAA6BpL,QACzB,GAAG,CACZ,IAAIwC,EAAczE,KAAKC,SAASC,QAAQC,SAASH,KAAKlB,QAAQa,qBAAqBwD,aAEnF,IADAgK,EAAWK,KAAKC,OAAOhJ,EAAc2I,GAAcnL,GAC9CD,EAAI,EAAGA,EAAIC,EAAQD,IAChBqL,EAA6BrL,GAAGuL,SAAWJ,IAC3CA,EAAWE,EAA6BrL,GAAGuL,UAE/CF,EAA6BrL,GAAGsL,IAAInK,WAAWgK,GAC/CnN,KAAKqK,QAAQgD,EAA6BrL,GAAGzB,OAAOmK,YAAcyC,IAM9EpE,EAAsB,WACtB,IAAI2E,EAAKC,OAAOC,UAAUC,UACtBC,EAAOJ,EAAGK,QAAQ,SAClBC,EAAUN,EAAGK,QAAQ,WAEzB,OAAID,EAAO,EACA,MAAQhG,SAAS4F,EAAGO,UAAUH,EAAO,EAAGJ,EAAGK,QAAQ,IAAKD,IAAQ,IAChEE,EAAU,EACV,UAGJ,IAGPrF,EAA4B,WAC5B,IAAIuF,MAAuBlO,KAAKlB,QAAQa,sCACpCyF,EAAiBpF,KAAKC,SAAS1B,IAAI4B,KAAK,kBAGZ,WAA5BH,KAAKlB,QAAQO,aACb6O,MAAuBlO,KAAKlB,QAAQa,gCAG5BK,KAAKC,SAASC,QAAQC,KAAM+N,GAE1BjM,OAAS,EACnBmD,EAAejF,KAAK,cAAcuI,WAAW,YAE7CtD,EAAejF,KAAK,cAAc8D,KAAK,WAAY,aAU3D,OALCxF,EAAwB,OACrBuG,KAAO,QACPmJ,KAAOxP,GAGJA","file":"../../views/table-view.js","sourcesContent":["define([\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-eventer\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-geom\",\r\n    \"skylark-domx-query\",\r\n    \"skylark-domx-plugins-toggles/checkbox\",\r\n    \"../view-type-registry\",   \r\n    \"./view-base\"\r\n], function(langx, browser, eventer, noder, geom, $, Checkbox,viewTypeRegistry, ViewBase) {\r\n\r\n  var TableView = ViewBase.inherit({\r\n    klassName : \"TableView\",\r\n\r\n    options: {\r\n        columnRendered: null,\r\n        columnSizing: true,\r\n        columnSyncing: true,\r\n        highlightSortedColumn: true,\r\n        infiniteScroll: true,\r\n        noItemsHTML: 'no items found',\r\n        selectable: true,\r\n        sortClearing: false,\r\n        rowRendered: null,\r\n        frozenColumns: 0,\r\n        actions: false,\r\n\r\n        viewClass : \"repeater-table\",\r\n        tableWrapperClass : \"repeater-table-wrapper\",\r\n        checkClass : \"repeater-table-check\",\r\n        headingClass : \"repeater-table-heading\",\r\n        actionsPlaceHolderClass : \"repeater-table-actions-placeholder\"\r\n    },\r\n\r\n    clearSelectedItems : function listClearSelectedItems () {\r\n        this.repeater.$canvas.find(`.${this.options.checkClass}`).remove();\r\n        this.repeater.$canvas.find(`.${this.options.viewClass} table tbody tr.selected`).removeClass('selected');\r\n    },\r\n\r\n    highlightColumn : function listHighlightColumn (index, force) {\r\n        var tbody = this.repeater.$canvas.find(`.${this.options.tableWrapperClass} > table tbody`);\r\n        if (this.options.highlightSortedColumn || force) {\r\n            tbody.find('td.sorted').removeClass('sorted');\r\n            tbody.find('tr').each(function eachTR () {\r\n                var col = $(this).find('td:nth-child(' + (index + 1) + ')').filter(function filterChildren () { return !$(this).parent().hasClass('empty'); });\r\n                col.addClass('sorted');\r\n            });\r\n        }\r\n    },\r\n\r\n    getSelectedItems : function listGetSelectedItems () {\r\n        var selected = [];\r\n        this.repeater.$canvas.find(`.${this.options.viewClass} .${this.options.tableWrapperClass} > table tbody tr.selected`).each(function eachSelectedTR () {\r\n            var $item = $(this);\r\n            selected.push({\r\n                data: $item.data('item_data'),\r\n                element: $item\r\n            });\r\n        });\r\n        return selected;\r\n    },\r\n\r\n    positionHeadings : function listPositionHeadings () {\r\n        var $wrapper = this.repeater.$().find(`.${this.options.tableWrapperClass}`);\r\n        var offsetLeft = $wrapper.offset().left;\r\n        var scrollLeft = $wrapper.scrollLeft();\r\n        if (scrollLeft > 0) {\r\n            $wrapper.find(`.${this.options.headingClass}`).each(function eachListHeading () {\r\n                var $heading = $(this);\r\n                var left = ($heading.parents('th:first').offset().left - offsetLeft) + 'px';\r\n                $heading.addClass('shifted').css('left', left);\r\n            });\r\n        } else {\r\n            $wrapper.find(`.${this.options.headingClass}`).each(function eachListHeading () {\r\n                $(this).removeClass('shifted').css('left', '');\r\n            });\r\n        }\r\n    },\r\n\r\n    setSelectedItems : function listSetSelectedItems (itms, force) {\r\n        var selectable = this.options.selectable;\r\n        var self = this;\r\n        var data;\r\n        var i;\r\n        var $item;\r\n        var length;\r\n\r\n        var items = itms;\r\n        if (!$.isArray(items)) {\r\n            items = [items];\r\n        }\r\n\r\n        // this function is necessary because lint yells when a function is in a loop\r\n        var checkIfItemMatchesValue = function checkIfItemMatchesValue (rowIndex) {\r\n            $item = $(this);\r\n\r\n            data = $item.data('item_data') || {};\r\n            if (data[items[i].property] === items[i].value) {\r\n                selectItem($item, items[i].selected, rowIndex);\r\n            }\r\n        };\r\n\r\n        var selectItem = function selectItem ($itm, slct, index) {\r\n            var $frozenCols;\r\n\r\n            var select = (slct !== undefined) ? slct : true;\r\n            if (select) {\r\n                if (!force && selectable !== 'multi') {\r\n                    self.clearSelectedItems();\r\n                }\r\n\r\n                if (!$itm.hasClass('selected')) {\r\n                    $itm.addClass('selected');\r\n\r\n                    if (self.options.frozenColumns || self.options.selectable === 'multi') {\r\n                        $frozenCols = self.repeater.$().find('.frozen-column-wrapper tr:nth-child(' + (index + 1) + ')');\r\n\r\n                        $frozenCols.addClass('selected');\r\n                        $frozenCols.find('.repeater-select-checkbox').addClass('checked');\r\n                    }\r\n\r\n                    if (self.options.actions) {\r\n                        self.repeater.$().find('.actions-column-wrapper tr:nth-child(' + (index + 1) + ')').addClass('selected');\r\n                    }\r\n\r\n                    $itm.find('td:first').prepend(`<div class=\"${this.options.checkClass}\"><span class=\"glyphicon glyphicon-ok\"></span></div>`);\r\n                }\r\n            } else {\r\n                if (self.options.frozenColumns) {\r\n                    $frozenCols = self.repeater.$().find('.frozen-column-wrapper tr:nth-child(' + (index + 1) + ')');\r\n\r\n                    $frozenCols.addClass('selected');\r\n                    $frozenCols.find('.repeater-select-checkbox').removeClass('checked');\r\n                }\r\n\r\n                if (self.options.actions) {\r\n                    self.repeater.$().find('.actions-column-wrapper tr:nth-child(' + (index + 1) + ')').removeClass('selected');\r\n                }\r\n\r\n                $itm.find(`.${this.options.checkClass}`).remove();\r\n                $itm.removeClass('selected');\r\n            }\r\n        };\r\n\r\n        if (force === true || selectable === 'multi') {\r\n            length = items.length;\r\n        } else if (selectable) {\r\n            length = (items.length > 0) ? 1 : 0;\r\n        } else {\r\n            length = 0;\r\n        }\r\n\r\n        for (i = 0; i < length; i++) {\r\n            if (items[i].index !== undefined) {\r\n                $item = this.repeater.$canvas.find(`.${this.options.viewClass} .${this.options.tableWrapperClass} > table tbody tr:nth-child(` + (items[i].index + 1) + ')');\r\n                if ($item.length > 0) {\r\n                    selectItem($item, items[i].selected, items[i].index);\r\n                }\r\n            } else if (items[i].property !== undefined && items[i].value !== undefined) {\r\n                this.repeater.$canvas.find(`.${this.options.viewClass} .${this.options.tableWrapperClass} > table tbody tr`).each(checkIfItemMatchesValue);\r\n            }\r\n        }\r\n    },\r\n\r\n    sizeHeadings : function listSizeHeadings () {\r\n        var $table = this.repeater.$().find(`.${this.options.viewClass} table`);\r\n        var self = this;\r\n        $table.find('thead th').each(function eachTH () {\r\n            var $th = $(this);\r\n            var $heading = $th.find(`.${self.options.headingClass}`);\r\n            $heading.css({ height: $th.outerHeight() });\r\n            $heading.outerWidth($heading.data('forced-width') || $th.outerWidth());\r\n        });\r\n    },\r\n\r\n    setFrozenColumns : function listSetFrozenColumns () {\r\n        var frozenTable = this.repeater.$canvas.find('.table-frozen');\r\n        var $wrapper = this.repeater.$().find('.repeater-canvas');\r\n        var $table = this.repeater.$().find(`.${this.options.viewClass} .${this.options.tableWrapperClass} > table`);\r\n        var repeaterWrapper = this.repeater.$().find(`.${this.options.viewClass}`);\r\n        var numFrozenColumns = this.options.frozenColumns;\r\n        var self = this;\r\n\r\n        if (this.options.selectable === 'multi') {\r\n            numFrozenColumns = numFrozenColumns + 1;\r\n            $wrapper.addClass('multi-select-enabled');\r\n        }\r\n\r\n        if (frozenTable.length < 1) {\r\n            // setup frozen column markup\r\n            // main wrapper and remove unneeded columns\r\n            var $frozenColumnWrapper = $('<div class=\"frozen-column-wrapper\"></div>').insertBefore($table);\r\n            var $frozenColumn = $table.clone().addClass('table-frozen');\r\n            $frozenColumn.find('th:not(:lt(' + numFrozenColumns + '))').remove();\r\n            $frozenColumn.find('td:not(:nth-child(n+0):nth-child(-n+' + numFrozenColumns + '))').remove();\r\n\r\n            // need to set absolute heading for vertical scrolling\r\n            var $frozenThead = $frozenColumn.clone().removeClass('table-frozen');\r\n            $frozenThead.find('tbody').remove();\r\n            var $frozenTheadWrapper = $('<div class=\"frozen-thead-wrapper\"></div>').append($frozenThead);\r\n\r\n            // this gets a little messy with all the cloning. We need to make sure the ID and FOR\r\n            // attribs are unique for the 'top most' cloned checkbox\r\n            var $checkboxLabel = $frozenTheadWrapper.find('th label.checkbox-custom.checkbox-inline');\r\n            $checkboxLabel.attr('id', $checkboxLabel.attr('id') + '_cloned');\r\n\r\n            $frozenColumnWrapper.append($frozenColumn);\r\n            repeaterWrapper.append($frozenTheadWrapper);\r\n            this.repeater.$canvas.addClass('frozen-enabled');\r\n        }\r\n\r\n        this.sizeFrozenColumns();\r\n\r\n        $(`.frozen-thead-wrapper .${this.options.headingClass}`).on('click', function onClickHeading () {\r\n            var index = $(this).parent('th').index();\r\n            index = index + 1;\r\n            self.repeater.$().find(`.${this.options.tableWrapperClass} > table thead th:nth-child(` + index + `) .${this.options.headingClass}`)[0].click();\r\n        });\r\n    },\r\n\r\n    positionColumns : function listPositionColumns () {\r\n        var $wrapper = this.repeater.$().find('.repeater-canvas');\r\n        var scrollTop = $wrapper.scrollTop();\r\n        var scrollLeft = $wrapper.scrollLeft();\r\n        var frozenEnabled = this.options.frozenColumns || this.options.selectable === 'multi';\r\n        var actionsEnabled = this.options.actions;\r\n\r\n        var canvasWidth = this.repeater.$().find('.repeater-canvas').outerWidth();\r\n        var tableWidth = this.repeater.$().find(`.${this.options.viewClass} .${this.options.tableWrapperClass} > table`).outerWidth();\r\n\r\n        var actionsWidth = this.repeater.$().find('.table-actions') ? this.repeater.$().find('.table-actions').outerWidth() : 0;\r\n\r\n        var shouldScroll = (tableWidth - (canvasWidth - actionsWidth)) >= scrollLeft;\r\n\r\n\r\n        if (scrollTop > 0) {\r\n            $wrapper.find(`.${this.options.headingClass}`).css('top', scrollTop);\r\n        } else {\r\n            $wrapper.find(`.${this.options.headingClass}`).css('top', '0');\r\n        }\r\n\r\n        if (scrollLeft > 0) {\r\n            if (frozenEnabled) {\r\n                $wrapper.find('.frozen-thead-wrapper').css('left', scrollLeft);\r\n                $wrapper.find('.frozen-column-wrapper').css('left', scrollLeft);\r\n            }\r\n            if (actionsEnabled && shouldScroll) {\r\n                $wrapper.find('.actions-thead-wrapper').css('right', -scrollLeft);\r\n                $wrapper.find('.actions-column-wrapper').css('right', -scrollLeft);\r\n            }\r\n        } else {\r\n            if (frozenEnabled) {\r\n                $wrapper.find('.frozen-thead-wrapper').css('left', '0');\r\n                $wrapper.find('.frozen-column-wrapper').css('left', '0');\r\n            }\r\n            if (actionsEnabled) {\r\n                $wrapper.find('.actions-thead-wrapper').css('right', '0');\r\n                $wrapper.find('.actions-column-wrapper').css('right', '0');\r\n            }\r\n        }\r\n    },\r\n\r\n    createItemActions : function () {\r\n        var actionsHtml = '';\r\n        var self = this;\r\n        var i;\r\n        var $table = this.repeater.$().find(`.${this.options.viewClass} .${this.options.tableWrapperClass} > table`);\r\n        var $actionsTable = this.repeater.$canvas.find('.table-actions');\r\n        var len = this.options.actions.items.length;\r\n        if (len == 1) {\r\n            var action = this.options.actions.items[0];\r\n            actionsHtml = '<a href=\"javascript:void(0)\" data-action=\"' + action.name + '\" class=\"action-item\"> ' + action.html + '</a>'\r\n            if ($actionsTable.length < 1) {\r\n                var $actionsColumnWrapper = $('<div class=\"actions-column-wrapper\" style=\"width: ' + this.options.actions.width + 'px\"></div>').insertBefore($table);\r\n                var $actionsColumn = $table.clone().addClass('table-actions');\r\n                $actionsColumn.find('th:not(:last-child)').remove();\r\n                $actionsColumn.find('tr td:not(:last-child)').remove();\r\n\r\n                var $actionsCells = $actionsColumn.find('td');\r\n\r\n                $actionsCells.each(function (rowNumber) {\r\n                    var id = $(this).parent().attr(\"id\");\r\n                    var data = $(\"#\" + id).data(\"item_data\")\r\n                    if (self.options.exceptActionRows && data && langx.inArray(self.options.exceptActionRows, data.name)) {\r\n                        $(this).html(\"-\");\r\n                    } else {\r\n                        $(this).html(actionsHtml);\r\n                    }\r\n                    $(this).find('a').attr('data-row', rowNumber + 1);\r\n                });\r\n            }\r\n        } else {\r\n            for (i = 0; i < len; i++) {\r\n                var action = this.options.actions.items[i];\r\n                var html = action.html;\r\n\r\n                actionsHtml += '<li class=\"' + action.name + '\"><a href=\"javascript:void(0)\" data-action=\"' + action.name + '\" class=\"action-item\"> ' + html + '</a></li>';\r\n            }\r\n            var actionsDropdown = '<ul class=\"ul-inline list-unstyled ul-horizontally\" role=\"menu\">' +\r\n                actionsHtml + '</ul>';\r\n            if ($actionsTable.length < 1) {\r\n                var $actionsColumnWrapper = $('<div class=\"actions-column-wrapper\" style=\"width: ' + this.options.actions.width + 'px\"></div>').insertBefore($table);\r\n                var $actionsColumn = $table.clone().addClass('table-actions');\r\n                $actionsColumn.find('th:not(:last-child)').remove();\r\n                $actionsColumn.find('tr td:not(:last-child)').remove();\r\n\r\n                // Dont show actions dropdown in header if not multi select\r\n                if (this.options.selectable === 'multi' || this.options.selectable === 'action') {\r\n                    $actionsColumn.find('thead tr').html('<th><div class=\"repeater-list-heading\">' + actionsDropdown + '</div></th>');\r\n\r\n                    if (this.options.selectable !== 'action') {\r\n                        // disable the header dropdown until an item is selected\r\n                        $actionsColumn.find('thead .btn').attr('disabled', 'disabled');\r\n                    }\r\n                } else {\r\n                    var label = this.options.actions.label || '<span class=\"actions-hidden\">a</span>';\r\n                    $actionsColumn.find('thead tr').addClass('empty-heading').html('<th>' + label + '<div class=\"repeater-list-heading\">' + label + '</div></th>');\r\n                }\r\n\r\n                // Create Actions dropdown for each cell in actions table\r\n                var $actionsCells = $actionsColumn.find('td');\r\n\r\n                $actionsCells.each(function addActionsDropdown(rowNumber) {\r\n                    $(this).html(actionsDropdown).addClass(\"r-list-action\");\r\n                    $(this).find('a').attr('data-row', rowNumber + 1);\r\n                });\r\n            }\r\n        }\r\n\r\n        $actionsColumnWrapper.append($actionsColumn);\r\n\r\n        this.repeater.$canvas.addClass('actions-enabled');\r\n        this.sizeActionsTable();\r\n\r\n        // row level actions click\r\n        this.repeater.$().find('.table-actions tbody .action-item').on('click', function onBodyActionItemClick(e) {\r\n            if (!self.isDisabled) {\r\n                var actionName = $(this).data('action');\r\n                var row = $(this).data('row');\r\n                var selected = {\r\n                    actionName: actionName,\r\n                    rows: [row]\r\n                };\r\n                self.getActionItems(selected, e);\r\n            }\r\n        });\r\n        // bulk actions click\r\n        this.repeater.$().find('.table-actions thead .action-item').on('click', function onHeadActionItemClick(e) {\r\n            if (!self.isDisabled) {\r\n                var actionName = $(this).data('action');\r\n                var selected = {\r\n                    actionName: actionName,\r\n                    rows: []\r\n                };\r\n\r\n                var selector = `.${this.options.tableWrapperClass} > table .selected`;\r\n\r\n                if ( self.options.selectable === 'action' ) {\r\n                    selector = `.${this.options.tableWrapperClass} > table tr`;\r\n                }\r\n\r\n                self.repeater.$().find(selector).each(function eachSelector(selectorIndex) {\r\n                    selected.rows.push(selectorIndex + 1);\r\n                });\r\n\r\n                self.getActionItems(selected, e);\r\n            }\r\n        });\r\n    },\r\n    createItemActions_1: function  () {\r\n\r\n        var actionsHtml = '';\r\n        var self = this;\r\n        var i;\r\n        var length;\r\n        var $table = this.repeater.$().find(`.${this.options.viewClass} .${this.options.tableWrapperClass} > table`);\r\n        var $actionsTable = this.repeater.$canvas.find('.table-actions');\r\n\r\n        for (i = 0, length = this.options.actions.items.length; i < length; i++) {\r\n            var action = this.options.actions.items[i];\r\n            var html = action.html;\r\n\r\n            actionsHtml += '<li><a href=\"#\" data-action=\"' + action.name + '\" class=\"action-item\"> ' + html + '</a></li>';\r\n        }\r\n\r\n        var actionsDropdown = '<div class=\"btn-group\">' +\r\n            '<button type=\"button\" class=\"btn btn-xs btn-default dropdown-toggle repeater-actions-button\" data-toggle=\"dropdown\" data-flip=\"auto\" aria-expanded=\"false\">' +\r\n            '<span class=\"caret\"></span>' +\r\n            '</button>' +\r\n            '<ul class=\"dropdown-menu dropdown-menu-right\" role=\"menu\">' +\r\n            actionsHtml +\r\n            '</ul></div>';\r\n\r\n        if ($actionsTable.length < 1) {\r\n            var $actionsColumnWrapper = $('<div class=\"actions-column-wrapper\" style=\"width: ' + this.actions_width + 'px\"></div>').insertBefore($table);\r\n            var $actionsColumn = $table.clone().addClass('table-actions');\r\n            $actionsColumn.find('th:not(:last-child)').remove();\r\n            $actionsColumn.find('tr td:not(:last-child)').remove();\r\n\r\n            // Dont show actions dropdown in header if not multi select\r\n            if (this.options.selectable === 'multi' || this.options.selectable === 'action') {\r\n                $actionsColumn.find('thead tr').html(`<th><div class=\"${this.options.headingClass}\">` + actionsDropdown + '</div></th>');\r\n\r\n                if (this.options.selectable !== 'action') {\r\n                    // disable the header dropdown until an item is selected\r\n                    $actionsColumn.find('thead .btn').attr('disabled', 'disabled');\r\n                }\r\n            } else {\r\n                var label = this.options.actions.label || '<span class=\"actions-hidden\">a</span>';\r\n                $actionsColumn.find('thead tr').addClass('empty-heading').html('<th>' + label + `<div class=\"${this.options.headingClass}\">` + label + '</div></th>');\r\n            }\r\n\r\n            // Create Actions dropdown for each cell in actions table\r\n            var $actionsCells = $actionsColumn.find('td');\r\n\r\n            $actionsCells.each(function addActionsDropdown (rowNumber) {\r\n                $(this).html(actionsDropdown);\r\n                $(this).find('a').attr('data-row', rowNumber + 1);\r\n            });\r\n\r\n            $actionsColumnWrapper.append($actionsColumn);\r\n\r\n            this.repeater.$canvas.addClass('actions-enabled');\r\n        }\r\n\r\n        this.sizeActionsTable();\r\n\r\n        // row level actions click\r\n        this.repeater.$().find('.table-actions tbody .action-item').on('click', function onBodyActionItemClick (e) {\r\n            if (!self.isDisabled) {\r\n                var actionName = $(this).data('action');\r\n                var row = $(this).data('row');\r\n                var selected = {\r\n                    actionName: actionName,\r\n                    rows: [row]\r\n                };\r\n                self.getActionItems(selected, e);\r\n            }\r\n        });\r\n        // bulk actions click\r\n        this.repeater.$().find('.table-actions thead .action-item').on('click', function onHeadActionItemClick (e) {\r\n            if (!self.isDisabled) {\r\n                var actionName = $(this).data('action');\r\n                var selected = {\r\n                    actionName: actionName,\r\n                    rows: []\r\n                };\r\n                var selector = `.${this.options.tableWrapperClass} > table .selected`;\r\n\r\n                if ( self.options.selectable === 'action' ) {\r\n                    selector = `.${this.options.tableWrapperClass} > table tr`;\r\n                }\r\n                self.repeater.$().find(selector).each(function eachSelector (selectorIndex) {\r\n                    selected.rows.push(selectorIndex + 1);\r\n                });\r\n\r\n                self.getActionItems(selected, e);\r\n            }\r\n        });\r\n    },\r\n\r\n    getActionItems : function listGetActionItems (selected, e) {\r\n        var selectedObj = [];\r\n        var actionObj = $.grep(this.options.actions.items, function matchedActions (actions) {\r\n            return actions.name === selected.actionName;\r\n        })[0];\r\n        for (var i = 0, selectedRowsL = selected.rows.length; i < selectedRowsL; i++) {\r\n            var clickedRow = this.repeater.$canvas.find(`.${this.options.tableWrapperClass} > table tbody tr:nth-child(` + selected.rows[i] + ')');\r\n            selectedObj.push({\r\n                item: clickedRow,\r\n                rowData: clickedRow.data('item_data')\r\n            });\r\n        }\r\n        if (selectedObj.length === 1) {\r\n            selectedObj = selectedObj[0];\r\n        }\r\n\r\n        if (actionObj.clickAction) {\r\n            var callback = function noop () {};// for backwards compatibility. No idea why this was originally here...\r\n            actionObj.clickAction(selectedObj, callback, e);\r\n        }\r\n    },\r\n\r\n    sizeActionsTable : function listSizeActionsTable () {\r\n        var $actionsTable = this.repeater.$().find(`.${this.options.viewClass} table.table-actions`);\r\n        var $actionsTableHeader = $actionsTable.find('thead tr th');\r\n        var $table = this.repeater.$().find(`.${this.options.tableWrapperClass} > table`);\r\n\r\n        $actionsTableHeader.outerHeight($table.find('thead tr th').outerHeight());\r\n        $actionsTableHeader.find(`.${this.options.headingClass}`).outerHeight($actionsTableHeader.outerHeight());\r\n        $actionsTable.find('tbody tr td:first-child').each(function eachFirstChild (i) {\r\n            $(this).outerHeight($table.find('tbody tr:eq(' + i + ') td').outerHeight());\r\n        });\r\n    },\r\n\r\n    sizeFrozenColumns : function listSizeFrozenColumns () {\r\n        var $table = this.repeater.$().find(`.${this.options.viewClass} .${this.options.tableWrapperClass} > table`);\r\n\r\n        this.repeater.$().find(`.${this.options.viewClass} table.table-frozen tr`).each(function eachTR (i) {\r\n            $(this).height($table.find('tr:eq(' + i + ')').height());\r\n        });\r\n\r\n        var columnWidth = $table.find('td:eq(0)').outerWidth();\r\n        this.repeater.$().find('.frozen-column-wrapper, .frozen-thead-wrapper').width(columnWidth);\r\n    },\r\n\r\n    frozenOptionsInitialize : function listFrozenOptionsInitialize () {\r\n        var $checkboxes = this.repeater.$().find('.frozen-column-wrapper .checkbox-inline');\r\n        var $headerCheckbox = this.repeater.$().find('.header-checkbox .checkbox-custom');\r\n        var $everyTable = this.repeater.$().find(`.${this.options.viewClass} table`);\r\n        var self = this;\r\n\r\n        // Make sure if row is hovered that it is shown in frozen column as well\r\n        this.repeater.$().find('tr.selectable').on('mouseover mouseleave', function onMouseEvents (e) {\r\n            var index = $(this).index();\r\n            index = index + 1;\r\n            if (e.type === 'mouseover') {\r\n                $everyTable.find('tbody tr:nth-child(' + index + ')').addClass('hovered');\r\n            } else {\r\n                $everyTable.find('tbody tr:nth-child(' + index + ')').removeClass('hovered');\r\n            }\r\n        });\r\n\r\n        $headerCheckbox.plugin(\"lark.toggles.checkbox\");\r\n        $checkboxes.plugin(\"lark.toggles.checkbox\");\r\n\r\n        // Row checkboxes\r\n        var $rowCheckboxes = this.repeater.$().find('.table-frozen tbody .checkbox-inline');\r\n        var $checkAll = this.repeater.$().find('.frozen-thead-wrapper thead .checkbox-inline input');\r\n        $rowCheckboxes.on('change', function onChangeRowCheckboxes (e) {\r\n            e.preventDefault();\r\n\r\n            if (!self.revertingCheckbox) {\r\n                if (self.isDisabled) {\r\n                    revertCheckbox($(e.currentTarget));\r\n                } else {\r\n                    var row = $(this).attr('data-row');\r\n                    row = parseInt(row, 10) + 1;\r\n                    self.repeater.$().find(`.${this.options.tableWrapperClass} > table tbody tr:nth-child(` + row + ')').click();\r\n\r\n                    var numSelected = self.repeater.$().find('.table-frozen tbody .checkbox-inline.checked').length;\r\n                    if (numSelected === 0) {\r\n                        $checkAll.prop('checked', false);\r\n                        $checkAll.prop('indeterminate', false);\r\n                    } else if (numSelected === $rowCheckboxes.length) {\r\n                        $checkAll.prop('checked', true);\r\n                        $checkAll.prop('indeterminate', false);\r\n                    } else {\r\n                        $checkAll.prop('checked', false);\r\n                        $checkAll.prop('indeterminate', true);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        // \"Check All\" checkbox\r\n        $checkAll.on('change', function onChangeCheckAll (e) {\r\n            if (!self.revertingCheckbox) {\r\n                if (self.isDisabled) {\r\n                    revertCheckbox($(e.currentTarget));\r\n                } else if ($(this).is(':checked')) {\r\n                    self.repeater.$().find(`.${this.options.tableWrapperClass} > table tbody tr:not(.selected)`).click();\r\n                    self.repeater.$().trigger('selected', $checkboxes);\r\n                } else {\r\n                    self.repeater.$().find(`.${this.options.tableWrapperClass} > table tbody tr.selected`).click();\r\n                    self.repeater.$().trigger('deselected', $checkboxes);\r\n                }\r\n            }\r\n        });\r\n\r\n        function revertCheckbox ($checkbox) {\r\n            self.revertingCheckbox = true;\r\n            $checkbox.checkbox('toggle');\r\n            delete self.revertingCheckbox;\r\n        }\r\n    },\r\n\r\n    cleared: function cleared () {\r\n        if (this.options.columnSyncing) {\r\n            this.sizeHeadings();\r\n        }\r\n    },\r\n    dataOptions: function dataOptions (options) {\r\n        if (this.sortDirection) {\r\n            options.sortDirection = this.sortDirection;\r\n        }\r\n        if (this.sortProperty) {\r\n            options.sortProperty = this.sortProperty;\r\n        }\r\n        return options;\r\n    },\r\n    enabled: function enabled (helpers) {\r\n        if (this.options.actions) {\r\n            if (!helpers.status) {\r\n                this.repeater.$canvas.find('.repeater-actions-button').attr('disabled', 'disabled');\r\n            } else {\r\n                this.repeater.$canvas.find('.repeater-actions-button').removeAttr('disabled');\r\n                toggleActionsHeaderButton.call(this);\r\n            }\r\n        }\r\n    },\r\n    initialize: function initialize (helpers, callback) {\r\n        this.sortDirection = null;\r\n        this.sortProperty = null;\r\n        this.specialBrowserClass = specialBrowserClass();\r\n        this.actions_width = (this.options.actions.width !== undefined) ? this.options.actions.width : 37;\r\n        this.noItems = false;\r\n        callback();\r\n    },\r\n    resize: function resize () {\r\n        sizeColumns.call(this, this.repeater.$().find(`.${this.options.tableWrapperClass} > table thead tr`));\r\n        if (this.options.actions) {\r\n            this.sizeActionsTable();\r\n        }\r\n        if (this.options.frozenColumns || this.options.selectable === 'multi') {\r\n            this.sizeFrozenColumns();\r\n        }\r\n        if (this.options.columnSyncing) {\r\n            this.sizeHeadings();\r\n        }\r\n    },\r\n    selected: function selected () {\r\n        var infScroll = this.options.infiniteScroll;\r\n        var opts;\r\n\r\n        this.firstRender = true;\r\n        this.repeater.$loader.addClass('noHeader');\r\n\r\n        if (infScroll) {\r\n            opts = (typeof infScroll === 'object') ? infScroll : {};\r\n            this.repeater.infiniteScrolling(true, opts);\r\n        }\r\n    },\r\n    before: function before (helpers) {\r\n        var $listContainer = helpers.container.find(`.${this.options.viewClass}`);\r\n        var self = this;\r\n        var $table;\r\n\r\n        // this is a patch, it was pulled out of `renderThead`\r\n        if (helpers.data.count > 0) {\r\n            this.noItems = false;\r\n        } else {\r\n            this.noItems = true;\r\n        }\r\n\r\n        if ($listContainer.length < 1) {\r\n            $listContainer = $(`<div class=\"${this.options.viewClass} ` + this.specialBrowserClass + `\" data-preserve=\"shallow\"><div class=\"${this.options.tableWrapperClass}\" data-infinite=\"true\" data-preserve=\"shallow\"><table aria-readonly=\"true\" class=\"table\" data-preserve=\"shallow\" role=\"grid\"></table></div></div>`);\r\n            $listContainer.find(`.${this.options.tableWrapperClass}`).on('scroll.lark.repeaterList', function onScrollRepeaterList () {\r\n                if (self.options.columnSyncing) {\r\n                    self.positionHeadings();\r\n                }\r\n            });\r\n            if (self.options.frozenColumns || self.options.actions || self.options.selectable === 'multi') {\r\n                helpers.container.on('scroll.lark.repeaterList', function onScrollRepeaterList () {\r\n                    self.positionColumns();\r\n                });\r\n            }\r\n\r\n            helpers.container.append($listContainer);\r\n        }\r\n        helpers.container.removeClass('actions-enabled actions-enabled multi-select-enabled');\r\n\r\n        $table = $listContainer.find('table');\r\n        renderThead.call(this, $table, helpers.data);\r\n        renderTbody.call(this, $table, helpers.data);\r\n\r\n        return false;\r\n    },\r\n    renderItem: function renderItem (helpers) {\r\n        renderRow.call(this, helpers.container, helpers.subset, helpers.index);\r\n        return false;\r\n    },\r\n    after: function after () {\r\n        var $sorted;\r\n\r\n        if ((this.options.frozenColumns || this.options.selectable === 'multi') && !this.noItems) {\r\n            this.setFrozenColumns();\r\n        }\r\n\r\n        if (this.options.actions && !this.noItems) {\r\n            this.createItemActions();\r\n            this.sizeActionsTable();\r\n        }\r\n\r\n        if ((this.options.frozenColumns || this.options.actions || this.options.selectable === 'multi') && !this.noItems) {\r\n            this.positionColumns();\r\n            this.frozenOptionsInitialize();\r\n        }\r\n\r\n        if (this.options.columnSyncing) {\r\n            this.sizeHeadings();\r\n            this.positionHeadings();\r\n        }\r\n\r\n        $sorted = this.repeater.$canvas.find(`.${this.options.tableWrapperClass} > table .${this.options.headingClass}.sorted`);\r\n        if ($sorted.length > 0) {\r\n            this.highlightColumn($sorted.data('fu_item_index'));\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n\r\n  });\r\n\r\n\r\n\r\n    // ADDITIONAL METHODS\r\n    var areDifferentColumns = function areDifferentColumns (oldCols, newCols) {\r\n        if (!newCols) {\r\n            return false;\r\n        }\r\n        if (!oldCols || (newCols.length !== oldCols.length)) {\r\n            return true;\r\n        }\r\n        for (var i = 0, newColsL = newCols.length; i < newColsL; i++) {\r\n            if (!oldCols[i]) {\r\n                return true;\r\n            }\r\n\r\n            for (var j in newCols[i]) {\r\n                if (newCols[i].hasOwnProperty(j) && oldCols[i][j] !== newCols[i][j]) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    var renderColumn = function renderColumn ($row, rows, rowIndex, columns, columnIndex) {\r\n        var className = columns[columnIndex].className;\r\n        var content = rows[rowIndex][columns[columnIndex].property];\r\n        var $col = $('<td></td>');\r\n        var width = columns[columnIndex]._auto_width;\r\n\r\n        var property = columns[columnIndex].property;\r\n        if (this.options.actions !== false && property === '@_ACTIONS_@') {\r\n            content = `<div class=\"${this.options.actionsPlaceHolderClass}\" style=\"width: ` + this.actions_width  + 'px\"></div>';\r\n        }\r\n\r\n        content = (content !== undefined) ? content : '';\r\n\r\n        $col.addClass(((className !== undefined) ? className : '')).append(content);\r\n        if (width !== undefined) {\r\n            $col.outerWidth(width);\r\n        }\r\n\r\n        $row.append($col);\r\n\r\n        if (this.options.selectable === 'multi' && columns[columnIndex].property === '@_CHECKBOX_@') {\r\n            var checkBoxMarkup = '<label data-row=\"' + rowIndex + '\" class=\"checkbox-custom checkbox-inline body-checkbox repeater-select-checkbox\">' +\r\n                '<input class=\"sr-only\" type=\"checkbox\"></label>';\r\n\r\n            $col.html(checkBoxMarkup);\r\n        }\r\n\r\n        return $col;\r\n    };\r\n\r\n    var renderHeader = function renderHeader ($tr, columns, index) {\r\n        var chevDown = 'glyphicon-chevron-down';\r\n        var chevron = '.glyphicon.rlc:first';\r\n        var chevUp = 'glyphicon-chevron-up';\r\n        var $div = $(`<div class=\"${this.options.headingClass}\"><span class=\"glyphicon rlc\"></span></div>`);\r\n        var checkAllID = (this.repeater.$().attr('id') + '_' || '') + 'checkall';\r\n\r\n        var checkBoxMarkup = `<div class=\"${this.options.headingClass} header-checkbox\">` +\r\n                '<label id=\"' + checkAllID + '\" class=\"checkbox-custom checkbox-inline\">' +\r\n                    '<input class=\"sr-only\" type=\"checkbox\" value=\"\">' +\r\n                    '<span class=\"checkbox-label\">&nbsp;</span>' +\r\n                '</label>' +\r\n            '</div>';\r\n\r\n        var $header = $('<th></th>');\r\n        var self = this;\r\n        var $both;\r\n        var className;\r\n        var sortable;\r\n        var $span;\r\n        var $spans;\r\n\r\n        $div.data('fu_item_index', index);\r\n        $div.prepend(columns[index].label);\r\n        $header.html($div.html()).find('[id]').removeAttr('id');\r\n\r\n        if (columns[index].property !== '@_CHECKBOX_@') {\r\n            $header.append($div);\r\n        } else {\r\n            $header.append(checkBoxMarkup);\r\n        }\r\n\r\n        $both = $header.add($div);\r\n        $span = $div.find(chevron);\r\n        $spans = $span.add($header.find(chevron));\r\n\r\n        if (this.options.actions && columns[index].property === '@_ACTIONS_@') {\r\n            var width = this.actions_width;\r\n            $header.css('width', width);\r\n            $div.css('width', width);\r\n        }\r\n\r\n        className = columns[index].className;\r\n        if (className !== undefined) {\r\n            $both.addClass(className);\r\n        }\r\n\r\n\r\n        sortable = columns[index].sortable;\r\n        if (sortable) {\r\n            $both.addClass('sortable');\r\n            $div.on('click.lark.repeaterList', function onClickRepeaterList () {\r\n                if (!self.isDisabled) {\r\n                    self.sortProperty = (typeof sortable === 'string') ? sortable : columns[index].property;\r\n                    if ($div.hasClass('sorted')) {\r\n                        if ($span.hasClass(chevUp)) {\r\n                            $spans.removeClass(chevUp).addClass(chevDown);\r\n                            self.sortDirection = 'desc';\r\n                        } else if (!self.options.sortClearing) {\r\n                            $spans.removeClass(chevDown).addClass(chevUp);\r\n                            self.sortDirection = 'asc';\r\n                        } else {\r\n                            $both.removeClass('sorted');\r\n                            $spans.removeClass(chevDown);\r\n                            self.sortDirection = null;\r\n                            self.sortProperty = null;\r\n                        }\r\n                    } else {\r\n                        $tr.find(`th, .${self.options.headingClass}`).removeClass('sorted');\r\n                        $spans.removeClass(chevDown).addClass(chevUp);\r\n                        self.sortDirection = 'asc';\r\n                        $both.addClass('sorted');\r\n                    }\r\n\r\n                    self.repeater.render({\r\n                        clearInfinite: true,\r\n                        pageIncrement: null\r\n                    });\r\n                }\r\n            });\r\n        }\r\n\r\n        if (columns[index].sortDirection === 'asc' || columns[index].sortDirection === 'desc') {\r\n            $tr.find(`th, .${this.options.headingClass}`).removeClass('sorted');\r\n            $both.addClass('sortable sorted');\r\n            if (columns[index].sortDirection === 'asc') {\r\n                $spans.addClass(chevUp);\r\n                this.sortDirection = 'asc';\r\n            } else {\r\n                $spans.addClass(chevDown);\r\n                this.sortDirection = 'desc';\r\n            }\r\n\r\n            this.sortProperty = (typeof sortable === 'string') ? sortable : columns[index].property;\r\n        }\r\n\r\n        $tr.append($header);\r\n    };\r\n\r\n    var onClickRowRepeaterList = function onClickRowRepeaterList (repeater) {\r\n        var isMulti = repeater.options.selectable === 'multi';\r\n        var isActions = repeater.options.actions;\r\n        var $repeater = repeater.$();\r\n\r\n        if (!repeater.isDisabled) {\r\n            var $item = $(this);\r\n            var index = $(this).index() + 1;\r\n            var $frozenRow = $repeater.find('.frozen-column-wrapper tr:nth-child(' + index + ')');\r\n            var $actionsRow = $repeater.find('.actions-column-wrapper tr:nth-child(' + index + ')');\r\n            var $checkBox = $repeater.find('.frozen-column-wrapper tr:nth-child(' + index + ') .checkbox-inline');\r\n\r\n            if ($item.is('.selected')) {\r\n                $item.removeClass('selected');\r\n                if (isMulti) {\r\n                    $checkBox.click();\r\n                    $frozenRow.removeClass('selected');\r\n                    if (isActions) {\r\n                        $actionsRow.removeClass('selected');\r\n                    }\r\n                } else {\r\n                    $item.find(`.${this.options.checkClass}`).remove();\r\n                }\r\n\r\n                $repeater.trigger('deselected.lark.repeaterList', $item);\r\n            } else {\r\n                if (!isMulti) {\r\n                    repeater.$canvas.find(`.${this.options.checkClass}`).remove();\r\n                    repeater.$canvas.find(`.${this.options.viewClass} tbody tr.selected`).each(function deslectRow () {\r\n                        $(this).removeClass('selected');\r\n                        $repeater.trigger('deselected.lark.repeaterList', $(this));\r\n                    });\r\n                    $item.find('td:first').prepend(`<div class=\"${this.options.checkClass}\"><span class=\"glyphicon glyphicon-ok\"></span></div>`);\r\n                    $item.addClass('selected');\r\n                    $frozenRow.addClass('selected');\r\n                } else {\r\n                    $checkBox.click();\r\n                    $item.addClass('selected');\r\n                    $frozenRow.addClass('selected');\r\n                    if (isActions) {\r\n                        $actionsRow.addClass('selected');\r\n                    }\r\n                }\r\n                $repeater.trigger('selected.lark.repeaterList', $item);\r\n            }\r\n\r\n            toggleActionsHeaderButton.call(repeater);\r\n        }\r\n    };\r\n\r\n    var renderRow = function renderRow ($tbody, rows, index) {\r\n        var $row = $('<tr></tr>');\r\n\r\n        if (this.options.selectable) {\r\n            $row.data('item_data', rows[index]);\r\n\r\n            if (this.options.selectable !== 'action') {\r\n                $row.addClass('selectable');\r\n                $row.attr('tabindex', 0);   // allow items to be tabbed to / focused on\r\n\r\n                var repeater = this;\r\n                $row.on('click.lark.repeaterList', function callOnClickRowRepeaterList() {\r\n                    onClickRowRepeaterList.call(this, repeater);\r\n                });\r\n\r\n                // allow selection via enter key\r\n                $row.keyup(function onRowKeyup (e) {\r\n                    if (e.keyCode === 13) {\r\n                        // triggering a standard click event to be caught by the row click handler above\r\n                        $row.trigger('click.lark.repeaterList');\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        if (this.options.actions && !this.options.selectable) {\r\n            $row.data('item_data', rows[index]);\r\n        }\r\n\r\n        var columns = [];\r\n        for (var i = 0, length = this.columns.length; i < length; i++) {\r\n            columns.push(renderColumn.call(this, $row, rows, index, this.columns, i));\r\n        }\r\n\r\n        $tbody.append($row);\r\n\r\n        if (this.options.columnRendered) {\r\n            for (var columnIndex = 0, colLength = columns.length; columnIndex < colLength; columnIndex++) {\r\n                if (!(this.columns[columnIndex].property === '@_CHECKBOX_@' || this.columns[columnIndex].property === '@_ACTIONS_@')) {\r\n                    this.options.columnRendered({\r\n                        container: $row,\r\n                        columnAttr: this.columns[columnIndex].property,\r\n                        item: columns[columnIndex],\r\n                        rowData: rows[index]\r\n                    }, function noop () {});\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.options.rowRendered) {\r\n            this.options.rowRendered({\r\n                container: $tbody,\r\n                item: $row,\r\n                rowData: rows[index]\r\n            }, function noop () {});\r\n        }\r\n    };\r\n\r\n    var renderTbody = function renderTbody ($table, data) {\r\n        var $tbody = $table.find('tbody');\r\n        var $empty;\r\n\r\n        if ($tbody.length < 1) {\r\n            $tbody = $('<tbody data-container=\"true\"></tbody>');\r\n            $table.append($tbody);\r\n        }\r\n\r\n        if (typeof data.error === 'string' && data.error.length > 0) {\r\n            $empty = $('<tr class=\"empty text-danger\"><td colspan=\"' + this.columns.length + '\"></td></tr>');\r\n            $empty.find('td').append(data.error);\r\n            $tbody.append($empty);\r\n        } else if (data.items && data.items.length < 1) {\r\n            $empty = $('<tr class=\"empty\"><td colspan=\"' + this.columns.length + '\"></td></tr>');\r\n            $empty.find('td').append(this.options.noItemsHTML);\r\n            $tbody.append($empty);\r\n        }\r\n    };\r\n\r\n    var renderThead = function renderThead ($table, data) {\r\n        var columns = data.columns || [];\r\n        var $thead = $table.find('thead');\r\n        var i;\r\n        var length;\r\n        var $tr;\r\n\r\n        if (this.firstRender || areDifferentColumns(this.columns, columns) || $thead.length === 0) {\r\n            $thead.remove();\r\n\r\n            // noItems is set in `before` method\r\n\r\n            if (this.options.selectable === 'multi' && !this.noItems) {\r\n                var checkboxColumn = {\r\n                    label: 'c',\r\n                    property: '@_CHECKBOX_@',\r\n                    sortable: false\r\n                };\r\n                columns.splice(0, 0, checkboxColumn);\r\n            }\r\n\r\n            this.columns = columns;\r\n            this.firstRender = false;\r\n            this.repeater.$loader.removeClass('noHeader');\r\n\r\n            // keep action column header even when empty, you'll need it later....\r\n            if (this.options.actions) {\r\n                var actionsColumn = {\r\n                    label: this.options.actions.label || '<span class=\"actions-hidden\">a</span>',\r\n                    property: '@_ACTIONS_@',\r\n                    sortable: false,\r\n                    width: this.actions_width\r\n                };\r\n                columns.push(actionsColumn);\r\n            }\r\n\r\n\r\n            $thead = $('<thead data-preserve=\"deep\"><tr></tr></thead>');\r\n            $tr = $thead.find('tr');\r\n            for (i = 0, length = columns.length; i < length; i++) {\r\n                renderHeader.call(this, $tr, columns, i);\r\n            }\r\n            $table.prepend($thead);\r\n\r\n            if (this.options.selectable === 'multi' && !this.noItems) {\r\n                // after checkbox column is created need to get width of checkbox column from\r\n                // its css class\r\n                var checkboxWidth = this.repeater.$().find(`.${this.options.tableWrapperClass} .header-checkbox`).outerWidth();\r\n                var selectColumn = $.grep(columns, function grepColumn (column) {\r\n                    return column.property === '@_CHECKBOX_@';\r\n                })[0];\r\n                selectColumn.width = checkboxWidth;\r\n            }\r\n            sizeColumns.call(this, $tr);\r\n        }\r\n    };\r\n\r\n    var sizeColumns = function sizeColumns ($tr) {\r\n        var automaticallyGeneratedWidths = [];\r\n        var self = this;\r\n        var i;\r\n        var length;\r\n        var newWidth;\r\n        var widthTaken;\r\n\r\n        if (this.options.columnSizing) {\r\n            i = 0;\r\n            widthTaken = 0;\r\n            $tr.find('th').each(function eachTH () {\r\n                var $th = $(this);\r\n                var width;\r\n                if (self.columns[i].width !== undefined) {\r\n                    width = self.columns[i].width;\r\n                    $th.outerWidth(width);\r\n                    widthTaken += $th.outerWidth();\r\n                    self.columns[i]._auto_width = width;\r\n                } else {\r\n                    var outerWidth = $th.find(`.${self.options.headingClass}`).outerWidth();\r\n                    automaticallyGeneratedWidths.push({\r\n                        col: $th,\r\n                        index: i,\r\n                        minWidth: outerWidth\r\n                    });\r\n                }\r\n\r\n                i++;\r\n            });\r\n\r\n            length = automaticallyGeneratedWidths.length;\r\n            if (length > 0) {\r\n                var canvasWidth = this.repeater.$canvas.find(`.${this.options.tableWrapperClass}`).outerWidth();\r\n                newWidth = Math.floor((canvasWidth - widthTaken) / length);\r\n                for (i = 0; i < length; i++) {\r\n                    if (automaticallyGeneratedWidths[i].minWidth > newWidth) {\r\n                        newWidth = automaticallyGeneratedWidths[i].minWidth;\r\n                    }\r\n                    automaticallyGeneratedWidths[i].col.outerWidth(newWidth);\r\n                    this.columns[automaticallyGeneratedWidths[i].index]._auto_width = newWidth;\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    var specialBrowserClass = function specialBrowserClass () {\r\n        var ua = window.navigator.userAgent;\r\n        var msie = ua.indexOf('MSIE ');\r\n        var firefox = ua.indexOf('Firefox');\r\n\r\n        if (msie > 0 ) {\r\n            return 'ie-' + parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);\r\n        } else if (firefox > 0) {\r\n            return 'firefox';\r\n        }\r\n\r\n        return '';\r\n    };\r\n\r\n    var toggleActionsHeaderButton = function toggleActionsHeaderButton () {\r\n        var selectedSelector = `.${this.options.tableWrapperClass} > table .selected`;\r\n        var $actionsColumn = this.repeater.$().find('.table-actions');\r\n        var $selected;\r\n\r\n        if (this.options.selectable === 'action') {\r\n            selectedSelector = `.${this.options.tableWrapperClass} > table tr`;\r\n        }\r\n\r\n        $selected = this.repeater.$canvas.find( selectedSelector );\r\n\r\n        if ($selected.length > 0) {\r\n            $actionsColumn.find('thead .btn').removeAttr('disabled');\r\n        } else {\r\n            $actionsColumn.find('thead .btn').attr('disabled', 'disabled');\r\n        }\r\n    };\r\n\r\n\r\n     viewTypeRegistry[\"table\"] = {\r\n        name : \"table\",\r\n        ctor : TableView\r\n    }; \r\n\r\n    return TableView;\r\n\r\n});"]}