{"version":3,"sources":["skylark-domx-plugins-repeaters.js"],"names":["define","plugins","repeaters","langx","browser","eventer","noder","geom","$","popups","Dropdown","ComboBox","Plugin","inherit","klassName","pluginName","options","autoResizeMenu","filterOnKeypress","showOptionsOnKeypress","filter","list","predicate","self","visible","$dropMenu","find","remove","each","i","$li","this","text","trim","removeClass","addClass","substr","length","append","_construct","elm","overrided","$element","$input","$button","plugin","$inputGroupBtn","on","proxy","itemclicked","inputchanged","menuShown","keypress","setDefaultSelection","items","children","val","_destroy","attr","outerHTML","doSelect","$item","$selectedItem","clearSelection","resizeMenu","width","outerWidth","selectedItem","item","data","txt","mixin","notFound","selectByText","textContent","innerText","toLowerCase","selectByValue","value","selector","selectBySelector","selectByIndex","index","removeData","removeAttr","enable","disable","e","target","parent","trigger","synthetic","preventDefault","focus","IS_NAVIGATIONAL","which","hasClass","toggle","selected","$selected","next","prev","previousKeyPress","extra","prototype","getValue","register","SearchBox","clearOnEmpty","searchOnKeyPress","allowCancel","_elm","$repeater","closest","$icon","buttonclicked","clearPending","activeSearch","search","searchText","clear","action","currentTarget","is","viewTypeRegistry","skylark","elmx","fx","SelectList","Searchbox","Repeater","dataSource","callback","count","end","page","pages","start","defaultView","dropPagingCap","staticHeight","views","addons","throb","params","$btn","currentView","$el","$canvas","$count","$end","$filters","$loader","$pageSize","$nextBtn","$pages","$prevBtn","$primaryPaging","$search","$secondaryPaging","$start","$viewport","$views","currentPage","isDisabled","infiniteScrollingCallback","infiniteScrollingCont","infiniteScrollingEnabled","infiniteScrollingEnd","infiniteScrollingOptions","lastPageInput","pageIncrement","resizeTimeout","stamp","Date","getTime","Math","floor","random","storedDataSourceOpts","syncingViewButtonState","viewType","render","clearInfinite","previous","evt","pageInputChange","keyCode","viewChanged","window","clearTimeout","setTimeout","resize","initViewTypes","changeView","opts","preserve","scan","empty","undefined","_view","cleared","clearPreservedDataSourceOptions","destroy","markup","scall","infinitescroll","off","enabled","status","parseInt","html","getDataOptions","dataSourceOptions","preserveDataSourceOptions","returnOptions","view","pageIndex","pageSize","searchValue","dataOptions","infiniteScrolling","footer","viewport","css","height","outerHeight","hide","cont","show","infiniteScrollPaging","NaN","initInfiniteScrolling","helpers","_views","viewTypes","isArray","setting","Error","ctor","push","isPlainObject","name","itemization","dataFromCombobox","pageInc","pagination","totalPages","currenPageOutput","dropMenu","l","prevView","split","syncViewButtonState","_throbber","className","beforeRender","viewTypeObj","dataSourceReturnedData","doRender","viewportMargins","currentHiddenElement","scrubbedElements","previousProperties","$hiddenElements","parentsUntil","currentElementIndex","style","bottom","top","staticHeightValue","headerHeight","footerHeight","bottomMargin","topMargin","forEach","element","renderItems","container","parents","$itemToCheck","prop","getNestedProperty","obj","property","replace","str","singleQuoteProp","doubleQuoteProp","arrayIndex","dotProp","getDataProperty","key","dataset","_","b","toUpperCase","getAttribute","test","parseJSON","ignore","getItemProperty","state","d","afterRender","callNextInit","currentViewType","nextViewType","initViewType","currentViewtype","initialize","call","renderOptions","keep","pres","detach","ViewBase","Evented","controlsClass","fullScreen","_create$Item","template","itemData","invalid","indexOf","substring","init","repeater","hasControls","that","initOptions","constructor","cache","defaults","ctors","unshift","superclass","hasOwnProperty","Object","defineProperty","close","getSelectedItems","addItem","$parent","response","$container","before","addBefore","$dataContainer","renderItem","subset","objectAndPropsToRepeatOnString","repeat","objectAndPropsToRepeatOn","objectToRepeatOn","propsToRepeatOn","slice","console","warn","subItemIndex","addSubItem","after","addAfter","LinearView","alignment","infiniteScroll","itemRendered","noItemsHTML","selectable","clearSelectedItems","setSelectedItems","force","n","compareItemIndex","compareItemSelector","selectItem","$itm","select","thumbnail_clearSelectedItems","infScroll","$cont","$thumbnail","SliderView","slidesContainer","titleElement","displayClass","singleClass","leftEdgeClass","rightEdgeClass","playingClass","slideClass","slideLoadingClass","slideErrorClass","slideContentClass","toggleClass","prevClass","nextClass","closeClass","playPauseClass","displayTransition","clearSlides","toggleControlsOnReturn","toggleControlsOnSlideClick","toggleSlideshowOnSpace","enableKeyboardNavigation","closeOnEscape","closeOnSlideClick","closeOnSwipeUpOrDown","emulateTouchEvents","stopTouchEventsPropagation","hidePageScrollbars","disableScroll","carousel","continuous","unloadElements","startSlideshow","slideshowInterval","preloadRange","transitionSpeed","slideshowTransitionSpeed","event","onslide","onslideend","onslidecomplete","indicatorContainer","activeIndicatorClass","thumbnailProperty","thumbnailIndicators","indicators","support","touch","ontouchstart","DocumentTouch","document","transitions","webkitTransition","prefix","MozTransition","OTransition","transition","elementTests","translateZ","body","appendChild","getComputedStyle","getPropertyValue","transform","translate","backgroundSize","contain","cover","removeChild","createElement","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","cancelAnimationFrame","webkitCancelRequestAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","helper","num","initStartIndex","initView","initEventListeners","ontransitionend","play","slide","to","speed","timeout","direction","naturalDirection","diff","circle","abs","positions","slideWidth","move","animate","getIndex","getNumber","dist","translateX","x","y","slides","translateY","from","timer","setInterval","timeElap","left","clearInterval","time","interval","animationFrameId","pause","add","concat","Array","addSlide","positionSlide","initSlides","resetSlides","unloadAllSlides","returnValue","stopPropagation","cancelBubble","onresize","onmousedown","nodeName","originalEvent","touches","pageX","pageY","onmousemove","touchStart","ontouchmove","onmouseup","ontouchend","onmouseout","related","relatedTarget","contains","now","isScrolling","touchDelta","touchDeltaX","indices","scale","pop","indexForward","indexBackward","distanceForward","distanceBackward","isShortDuration","Number","isValidSlide","isPastBounds","slideHeight","ontouchcancel","onkeydown","toggleControls","toggleSlideshow","handleClick","srcElement","parentNode","getNodeIndex","isTarget","onclick","updateEdgeClasses","handleSlide","loadElements","setTitle","setActiveIndicator","firstChild","title","alt","createTextNode","func","args","wait","apply","loadElement","elements","proxyListener","limit","min","j","unloadSlide","createIndicator","thumbnailUrl","thumbnail","indicator","indicatorPrototype","cloneNode","getElementsByTagName","src","backgroundImage","addIndicator","setAttribute","activeIndicator","slidePrototype","reload","imagePrototype","elementPrototype","clientWidth","clientHeight","len","getItemUrl","type","destroyEventListeners","first","log","bodyOverflowStyle","overflow","display","TableView","columnRendered","columnSizing","columnSyncing","highlightSortedColumn","sortClearing","rowRendered","frozenColumns","actions","viewClass","tableWrapperClass","checkClass","headingClass","actionsPlaceHolderClass","highlightColumn","tbody","col","positionHeadings","$wrapper","offsetLeft","offset","scrollLeft","$heading","itms","checkIfItemMatchesValue","rowIndex","slct","$frozenCols","prepend","sizeHeadings","$table","$th","setFrozenColumns","frozenTable","repeaterWrapper","numFrozenColumns","$frozenColumnWrapper","insertBefore","$frozenColumn","clone","$frozenThead","$frozenTheadWrapper","$checkboxLabel","sizeFrozenColumns","click","positionColumns","scrollTop","frozenEnabled","actionsEnabled","canvasWidth","tableWidth","actionsWidth","shouldScroll","createItemActions","actionsHtml","$actionsTable","$actionsColumnWrapper","$actionsColumn","$actionsCells","rowNumber","id","exceptActionRows","inArray","actionsDropdown","label","sizeActionsTable","actionName","row","rows","getActionItems","selectorIndex","createItemActions_1","actions_width","selectedObj","actionObj","grep","selectedRowsL","clickedRow","rowData","clickAction","$actionsTableHeader","columnWidth","frozenOptionsInitialize","$checkboxes","$headerCheckbox","$everyTable","checkbox","$rowCheckboxes","$checkAll","revertCheckbox","$checkbox","revertingCheckbox","numSelected","sortDirection","sortProperty","toggleActionsHeaderButton","specialBrowserClass","noItems","sizeColumns","firstRender","$listContainer","renderThead","renderTbody","renderRow","$sorted","renderColumn","$row","columns","columnIndex","content","$col","_auto_width","checkBoxMarkup","renderHeader","$tr","$both","sortable","$span","$spans","chevDown","chevUp","$div","checkAllID","$header","$tbody","isMulti","isActions","$frozenRow","$actionsRow","$checkBox","keyup","colLength","columnAttr","$empty","error","$thead","oldCols","newCols","newColsL","areDifferentColumns","splice","actionsColumn","checkboxWidth","selectColumn","column","newWidth","widthTaken","automaticallyGeneratedWidths","minWidth","ua","navigator","userAgent","msie","firefox","selectedSelector","TileView","center","justify","right","thumbnail_injectSpacers","main"],"mappings":"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","file":"../skylark-domx-plugins-repeaters.js","sourcesContent":["define('skylark-domx-plugins-repeaters/repeaters',[\r\n\t\"skylark-domx-plugins-base\"\r\n],function(plugins){\r\n\treturn plugins.repeaters = {};\r\n});\ndefine('skylark-domx-plugins-popups/combobox',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-domx-plugins-base\",\r\n  \"./popups\",\r\n  \"./dropdown\"\r\n],function(langx,browser,eventer,noder,geom,$,plugins,popups,Dropdown){\r\n\r\n\r\n\t// COMBOBOX CONSTRUCTOR AND PROTOTYPE\r\n\r\n\tvar ComboBox = plugins.Plugin.inherit({\r\n\t\tklassName: \"ComboBox\",\r\n\r\n\t\tpluginName : \"lark.popups.combobox\",\r\n\r\n\t\toptions : {\r\n\r\n\t\t\tautoResizeMenu: true,\r\n\t\t\tfilterOnKeypress: false,\r\n\t\t\tshowOptionsOnKeypress: false,\r\n\t\t\tfilter: function filter (list, predicate, self) {\r\n\t\t\t\tvar visible = 0;\r\n\t\t\t\tself.$dropMenu.find('.empty-indicator').remove();\r\n\r\n\t\t\t\tlist.each(function (i) {\r\n\t\t\t\t\tvar $li = $(this);\r\n\t\t\t\t\tvar text = $(this).text().trim();\r\n\r\n\t\t\t\t\t$li.removeClass();\r\n\r\n\t\t\t\t\tif (text === predicate) {\r\n\t\t\t\t\t\t$li.addClass('text-success');\r\n\t\t\t\t\t\tvisible++;\r\n\t\t\t\t\t} else if (text.substr(0, predicate.length) === predicate) {\r\n\t\t\t\t\t\t$li.addClass('text-info');\r\n\t\t\t\t\t\tvisible++;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t$li.addClass('hidden');\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif (visible === 0) {\r\n\t\t\t\t\tself.$dropMenu.append('<li class=\"empty-indicator text-muted\"><em>No Matches</em></li>');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n    \t_construct : function(elm,options) {\r\n      \t\tthis.overrided(elm,options);\r\n      \t\tthis.$element = this.$();\r\n\r\n\t\t\tthis.$dropMenu = this.$element.find('.dropdown-menu');\r\n\t\t\tthis.$input = this.$element.find('input');\r\n\t\t\tthis.$button = this.$element.find('.btn');\r\n\t\t\tthis.$button.plugin(\"lark.popups.dropdown\");\r\n\t\t\tthis.$inputGroupBtn = this.$element.find('.input-group-btn');\r\n\r\n\t\t\tthis.$element.on('click.lark', 'a', langx.proxy(this.itemclicked, this));\r\n\t\t\tthis.$element.on('change.lark', 'input', langx.proxy(this.inputchanged, this));\r\n\t\t\tthis.$element.on('shown.bs.dropdown', langx.proxy(this.menuShown, this));\r\n\t\t\tthis.$input.on('keyup.lark', langx.proxy(this.keypress, this));\r\n\r\n\t\t\t// set default selection\r\n\t\t\tthis.setDefaultSelection();\r\n\r\n\t\t\t// if dropdown is empty, disable it\r\n\t\t\tvar items = this.$dropMenu.children('li');\r\n\t\t\tif( items.length === 0) {\r\n\t\t\t\tthis.$button.addClass('disabled');\r\n\t\t\t}\r\n\r\n\t\t\t// filter on load in case the first thing they do is press navigational key to pop open the menu\r\n\t\t\tif (this.options.filterOnKeypress) {\r\n\t\t\t\tthis.options.filter(this.$dropMenu.find('li'), this.$input.val(), this);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_destroy: function () {\r\n\t\t\tthis.$element.remove();\r\n\t\t\t// remove any external bindings\r\n\t\t\t// [none]\r\n\r\n\t\t\t// set input value attrbute in markup\r\n\t\t\tthis.$element.find('input').each(function () {\r\n\t\t\t\t$(this).attr('value', $(this).val());\r\n\t\t\t});\r\n\r\n\t\t\t// empty elements to return to original markup\r\n\t\t\t// [none]\r\n\r\n\t\t\treturn this.$element[0].outerHTML;\r\n\t\t},\r\n\r\n\t\tdoSelect: function ($item) {\r\n\r\n\t\t\tif (typeof $item[0] !== 'undefined') {\r\n\t\t\t\t// remove selection from old item, may result in remove and\r\n\t\t\t\t// re-addition of class if item is the same\r\n\t\t\t\tthis.$element.find('li.selected:first').removeClass('selected');\r\n\r\n\t\t\t\t// add selection to new item\r\n\t\t\t\tthis.$selectedItem = $item;\r\n\t\t\t\tthis.$selectedItem.addClass('selected');\r\n\r\n\t\t\t\t// update input\r\n\t\t\t\tthis.$input.val(this.$selectedItem.text().trim());\r\n\t\t\t} else {\r\n\t\t\t\t// this is a custom input, not in the menu\r\n\t\t\t\tthis.$selectedItem = null;\r\n\t\t\t\tthis.$element.find('li.selected:first').removeClass('selected');\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tclearSelection: function () {\r\n\t\t\tthis.$selectedItem = null;\r\n\t\t\tthis.$input.val('');\r\n\t\t\tthis.$dropMenu.find('li').removeClass('selected');\r\n\t\t},\r\n\r\n\t\tmenuShown: function () {\r\n\t\t\tif (this.options.autoResizeMenu) {\r\n\t\t\t\tthis.resizeMenu();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tresizeMenu: function () {\r\n\t\t\tvar width = this.$element.outerWidth();\r\n\t\t\tthis.$dropMenu.outerWidth(width);\r\n\t\t},\r\n\r\n\t\tselectedItem: function () {\r\n\t\t\tvar item = this.$selectedItem;\r\n\t\t\tvar data = {};\r\n\r\n\t\t\tif (item) {\r\n\t\t\t\tvar txt = this.$selectedItem.text().trim();\r\n\t\t\t\tdata = langx.mixin({\r\n\t\t\t\t\ttext: txt\r\n\t\t\t\t}, this.$selectedItem.data());\r\n\t\t\t} else {\r\n\t\t\t\tdata = {\r\n\t\t\t\t\ttext: this.$input.val().trim(),\r\n\t\t\t\t\tnotFound: true\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\t\t},\r\n\r\n\t\tselectByText: function (text) {\r\n\t\t\tvar $item = $([]);\r\n\t\t\tthis.$element.find('li').each(function () {\r\n\t\t\t\tif ((this.textContent || this.innerText || $(this).text() || '').trim().toLowerCase() === (text || '').trim().toLowerCase()) {\r\n\t\t\t\t\t$item = $(this);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tthis.doSelect($item);\r\n\t\t},\r\n\r\n\t\tselectByValue: function (value) {\r\n\t\t\tvar selector = 'li[data-value=\"' + value + '\"]';\r\n\t\t\tthis.selectBySelector(selector);\r\n\t\t},\r\n\r\n\t\tselectByIndex: function (index) {\r\n\t\t\t// zero-based index\r\n\t\t\tvar selector = 'li:eq(' + index + ')';\r\n\t\t\tthis.selectBySelector(selector);\r\n\t\t},\r\n\r\n\t\tselectBySelector: function (selector) {\r\n\t\t\tvar $item = this.$element.find(selector);\r\n\t\t\tthis.doSelect($item);\r\n\t\t},\r\n\r\n\t\tsetDefaultSelection: function () {\r\n\t\t\tvar selector = 'li[data-selected=true]:first';\r\n\t\t\tvar item = this.$element.find(selector);\r\n\r\n\t\t\tif (item.length > 0) {\r\n\t\t\t\t// select by data-attribute\r\n\t\t\t\tthis.selectBySelector(selector);\r\n\t\t\t\titem.removeData('selected');\r\n\t\t\t\titem.removeAttr('data-selected');\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tenable: function () {\r\n\t\t\tthis.$element.removeClass('disabled');\r\n\t\t\tthis.$input.removeAttr('disabled');\r\n\t\t\tthis.$button.removeClass('disabled');\r\n\t\t},\r\n\r\n\t\tdisable: function () {\r\n\t\t\tthis.$element.addClass('disabled');\r\n\t\t\tthis.$input.attr('disabled', true);\r\n\t\t\tthis.$button.addClass('disabled');\r\n\t\t},\r\n\r\n\t\titemclicked: function (e) {\r\n\t\t\tthis.$selectedItem = $(e.target).parent();\r\n\r\n\t\t\t// set input text and trigger input change event marked as synthetic\r\n\t\t\tthis.$input.val(this.$selectedItem.text().trim()).trigger('change', {\r\n\t\t\t\tsynthetic: true\r\n\t\t\t});\r\n\r\n\t\t\t// pass object including text and any data-attributes\r\n\t\t\t// to onchange event\r\n\t\t\tvar data = this.selectedItem();\r\n\r\n\t\t\t// trigger changed event\r\n\t\t\tthis.$element.trigger('changed.lark', data);\r\n\r\n\t\t\te.preventDefault();\r\n\r\n\t\t\t// return focus to control after selecting an option\r\n\t\t\tthis.$element.find('.dropdown-toggle').focus();\r\n\t\t},\r\n\r\n\t\tkeypress: function (e) {\r\n\t\t\tvar ENTER = 13;\r\n\t\t\t//var TAB = 9;\r\n\t\t\tvar ESC = 27;\r\n\t\t\tvar LEFT = 37;\r\n\t\t\tvar UP = 38;\r\n\t\t\tvar RIGHT = 39;\r\n\t\t\tvar DOWN = 40;\r\n\r\n\t\t\tvar IS_NAVIGATIONAL = (\r\n\t\t\t\te.which === UP ||\r\n\t\t\t\te.which === DOWN ||\r\n\t\t\t\te.which === LEFT ||\r\n\t\t\t\te.which === RIGHT\r\n\t\t\t);\r\n\r\n\t\t\tif(this.options.showOptionsOnKeypress && !this.$inputGroupBtn.hasClass('open')){\r\n\t\t\t\tthis.$button.plugin(\"lark.popups.dropdown\").toggle();\r\n\t\t\t\tthis.$input.focus();\r\n\t\t\t}\r\n\r\n\t\t\tif (e.which === ENTER) {\r\n\t\t\t\te.preventDefault();\r\n\r\n\t\t\t\tvar selected = this.$dropMenu.find('li.selected').text().trim();\r\n\t\t\t\tif(selected.length > 0){\r\n\t\t\t\t\tthis.selectByText(selected);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.selectByText(this.$input.val());\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.$inputGroupBtn.removeClass('open');\r\n\t\t\t} else if (e.which === ESC) {\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\tthis.clearSelection();\r\n\t\t\t\tthis.$inputGroupBtn.removeClass('open');\r\n\t\t\t} else if (this.options.showOptionsOnKeypress) {\r\n\t\t\t\tif (e.which === DOWN || e.which === UP) {\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\tvar $selected = this.$dropMenu.find('li.selected');\r\n\t\t\t\t\tif ($selected.length > 0) {\r\n\t\t\t\t\t\tif (e.which === DOWN) {\r\n\t\t\t\t\t\t\t$selected = $selected.next(':not(.hidden)');\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t$selected = $selected.prev(':not(.hidden)');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ($selected.length === 0){\r\n\t\t\t\t\t\tif (e.which === DOWN) {\r\n\t\t\t\t\t\t\t$selected = this.$dropMenu.find('li:not(.hidden):first');\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t$selected = this.$dropMenu.find('li:not(.hidden):last');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.doSelect($selected);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Avoid filtering on navigation key presses\r\n\t\t\tif (this.options.filterOnKeypress && !IS_NAVIGATIONAL) {\r\n\t\t\t\tthis.options.filter(this.$dropMenu.find('li'), this.$input.val(), this);\r\n\t\t\t}\r\n\r\n\t\t\tthis.previousKeyPress = e.which;\r\n\t\t},\r\n\r\n\t\tinputchanged: function (e, extra) {\r\n\t\t\tvar val = $(e.target).val();\r\n\t\t\t// skip processing for internally-generated synthetic event\r\n\t\t\t// to avoid double processing\r\n\t\t\tif (extra && extra.synthetic) {\r\n\t\t\t\tthis.selectByText(val);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.selectByText(val);\r\n\r\n\t\t\t// find match based on input\r\n\t\t\t// if no match, pass the input value\r\n\t\t\tvar data = this.selectedItem();\r\n\t\t\tif (data.text.length === 0) {\r\n\t\t\t\tdata = {\r\n\t\t\t\t\ttext: val\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\t// trigger changed event\r\n\t\t\tthis.$element.trigger('changed.lark', data);\r\n\t\t}\r\n\r\n\t});\r\n\r\n\r\n\r\n\tComboBox.prototype.getValue = ComboBox.prototype.selectedItem;\r\n\r\n    plugins.register(ComboBox);\r\n\r\n\treturn popups.ComboBox = ComboBox;\r\n});\r\n\ndefine('skylark-domx-plugins-repeaters/searchbox',[\n  \"skylark-langx/langx\",\n  \"skylark-domx-browser\",\n  \"skylark-domx-eventer\",\n  \"skylark-domx-noder\",\n  \"skylark-domx-geom\",\n  \"skylark-domx-query\",\n  \"skylark-domx-plugins-base\",\n  \"./repeaters\"\n],function(langx,browser,eventer,noder,geom,$,plugins,repeaters){\n\n\n\t// SEARCH CONSTRUCTOR AND PROTOTYPE\n\n\tvar SearchBox = plugins.Plugin.inherit({\n\t\tklassName: \"SearchBox\",\n\n\t\tpluginName: \"lark.repeaters.searchbox\",\n\n\t\toptions : {\n\t\t\tclearOnEmpty: false,\n\t\t\tsearchOnKeyPress: false,\n\t\t\tallowCancel: false\n\t\t},\n\t\n    \t_construct : function(elm,options) {\n      \t\tthis.overrided(elm,options);\n      \t\t\n      \t\tthis.$element = $(this._elm);\n\t\t\tthis.$repeater = this.$element.closest('.repeater');\n\n\t\t\tif (this.$element.attr('data-searchOnKeyPress') === 'true'){\n\t\t\t\tthis.options.searchOnKeyPress = true;\n\t\t\t}\n\n\t\t\tthis.$button = this.$element.find('button');\n\t\t\tthis.$input = this.$element.find('input');\n\t\t\tthis.$icon = this.$element.find('.glyphicon, .fuelux-icon');\n\n\t\t\tthis.$button.on('click.lark.search', langx.proxy(this.buttonclicked, this));\n\t\t\tthis.$input.on('keyup.lark.search', langx.proxy(this.keypress, this));\n\n\t\t\tif (this.$repeater.length > 0) {\n\t\t\t\tthis.$repeater.on('rendered.lark.repeater', langx.proxy(this.clearPending, this));\n\t\t\t}\n\n\t\t\tthis.activeSearch = '';\n\t\t},\n\n\t\t_destroy: function () {\n\t\t\tthis.$element.remove();\n\t\t\t// any external bindings\n\t\t\t// [none]\n\t\t\t// set input value attrbute\n\t\t\tthis.$element.find('input').each(function () {\n\t\t\t\t$(this).attr('value', $(this).val());\n\t\t\t});\n\t\t\t// empty elements to return to original markup\n\t\t\t// [none]\n\t\t\t// returns string of markup\n\t\t\treturn this.$element[0].outerHTML;\n\t\t},\n\n\t\tsearch: function (searchText) {\n\t\t\tif (this.$icon.hasClass('glyphicon')) {\n\t\t\t\tthis.$icon.removeClass('glyphicon-search').addClass('glyphicon-remove');\n\t\t\t}\n\t\t\tif (this.$icon.hasClass('fuelux-icon')) {\n\t\t\t\tthis.$icon.removeClass('fuelux-icon-search').addClass('fuelux-icon-remove');\n\t\t\t}\n\n\t\t\tthis.activeSearch = searchText;\n\t\t\tthis.$element.addClass('searched pending');\n\t\t\tthis.$element.trigger('searched.lark.search', searchText);\n\t\t},\n\n\t\tclear: function () {\n\t\t\tif (this.$icon.hasClass('glyphicon')) {\n\t\t\t\tthis.$icon.removeClass('glyphicon-remove').addClass('glyphicon-search');\n\t\t\t}\n\t\t\tif (this.$icon.hasClass('fuelux-icon')) {\n\t\t\t\tthis.$icon.removeClass('fuelux-icon-remove').addClass('fuelux-icon-search');\n\t\t\t}\n\n\t\t\tif (this.$element.hasClass('pending')) {\n\t\t\t\tthis.$element.trigger('canceled.lark.search');\n\t\t\t}\n\n\t\t\tthis.activeSearch = '';\n\t\t\tthis.$input.val('');\n\t\t\tthis.$element.trigger('cleared.lark.search');\n\t\t\tthis.$element.removeClass('searched pending');\n\t\t},\n\n\t\tclearPending: function () {\n\t\t\tthis.$element.removeClass('pending');\n\t\t},\n\n\t\taction: function () {\n\t\t\tvar val = this.$input.val();\n\n\t\t\tif (val && val.length > 0) {\n\t\t\t\tthis.search(val);\n\t\t\t} else {\n\t\t\t\tthis.clear();\n\t\t\t}\n\t\t},\n\n\t\tbuttonclicked: function (e) {\n\t\t\te.preventDefault();\n\t\t\tif ($(e.currentTarget).is('.disabled, :disabled')) return;\n\n\t\t\tif (this.$element.hasClass('pending') || this.$element.hasClass('searched')) {\n\t\t\t\tthis.clear();\n\t\t\t} else {\n\t\t\t\tthis.action();\n\t\t\t}\n\t\t},\n\n\t\tkeypress: function (e) {\n\t\t\tvar ENTER_KEY_CODE = 13;\n\t\t\tvar TAB_KEY_CODE = 9;\n\t\t\tvar ESC_KEY_CODE = 27;\n\n\t\t\tif (e.which === ENTER_KEY_CODE) {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.action();\n\t\t\t} else if (e.which === TAB_KEY_CODE) {\n\t\t\t\te.preventDefault();\n\t\t\t} else if (e.which === ESC_KEY_CODE) {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.clear();\n\t\t\t} else if (this.options.searchOnKeyPress) {\n\t\t\t\t// search on other keypress\n\t\t\t\tthis.action();\n\t\t\t}\n\t\t},\n\n\t\tdisable: function () {\n\t\t\tthis.$element.addClass('disabled');\n\t\t\tthis.$input.attr('disabled', 'disabled');\n\n\t\t\tif (!this.options.allowCancel) {\n\t\t\t\tthis.$button.addClass('disabled');\n\t\t\t}\n\t\t},\n\n\t\tenable: function () {\n\t\t\tthis.$element.removeClass('disabled');\n\t\t\tthis.$input.removeAttr('disabled');\n\t\t\tthis.$button.removeClass('disabled');\n\t\t}\n\t});\n\n    plugins.register(SearchBox);\n\n\treturn \trepeaters.SearchBox = SearchBox;\n});\n\ndefine('skylark-domx-plugins-repeaters/view-type-registry',[\r\n\t\"./repeaters\"\r\n],function(repeaters){\r\n\treturn repeaters.viewTypeRegistry = {};\r\n});\ndefine('skylark-domx-plugins-repeaters/repeater',[\r\n  \"skylark-langx/skylark\",\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-velm\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-domx-fx\",\r\n  \"skylark-domx-plugins-base\",\r\n  \"skylark-domx-plugins-popups/select-list\",\r\n  \"skylark-domx-plugins-popups/combobox\",\r\n  \"./repeaters\",\r\n  \"./searchbox\",\r\n  \"./view-type-registry\"\r\n],function(skylark,langx,browser,eventer,noder,geom,elmx,$,fx,plugins,SelectList,ComboBox,repeaters,Searchbox,viewTypeRegistry){\r\n\r\n\t// REPEATER CONSTRUCTOR AND PROTOTYPE\r\n\r\n\tvar Repeater = plugins.Plugin.inherit({\r\n\t\tklassName: \"Repeater\",\r\n\r\n\t\tpluginName: \"lark.repeaters.repeater\",\r\n\r\n\t\toptions : {\r\n\t\t\tdataSource: function dataSource (options, callback) {\r\n\t\t\t\tcallback({ count: 0, end: 0, items: [], page: 0, pages: 1, start: 0 });\r\n\t\t\t},\r\n\t\t\tdefaultView: -1, // should be a string value. -1 means it will grab the active view from the view controls\r\n\t\t\tdropPagingCap: 10,\r\n\t\t\tstaticHeight: -1, // normally true or false. -1 means it will look for data-staticheight on the element\r\n\t\t\tviews: null, // can be set to an object to configure multiple views of the same type,\r\n\t\t\tsearchOnKeyPress: false,\r\n\t\t\tallowCancel: true,\r\n\r\n\t\t\taddons : {\r\n\t\t\t\tviews : [\"table\",\"tile\"]\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t    throb: function(params) {\r\n\t      return fx.throb(this._elm,params);\r\n\t    },\r\n\r\n//\t\t_init : function(element,options) {\r\n\t    _construct : function(elm,options) {\r\n\t\t    this.overrided(elm,options);\r\n\t\t\tvar self = this;\r\n\t\t\tvar $btn;\r\n\t\t\tvar currentView;\r\n\r\n\t\t\tvar $el = this.$();\r\n\r\n\t\t\tthis.$canvas = $el.find('.repeater-canvas');\r\n\t\t\tthis.$count = $el.find('.repeater-count');\r\n\t\t\tthis.$end = $el.find('.repeater-end');\r\n\t\t\tthis.$filters = $el.find('.repeater-filters');\r\n\t\t\tthis.$loader = $el.find('.repeater-loader');\r\n\t\t\tthis.$pageSize = $el.find('.repeater-itemization .selectlist');\r\n\t\t\tthis.$nextBtn = $el.find('.repeater-next');\r\n\t\t\tthis.$pages = $el.find('.repeater-pages');\r\n\t\t\tthis.$prevBtn = $el.find('.repeater-prev');\r\n\t\t\tthis.$primaryPaging = $el.find('.repeater-primaryPaging');\r\n\t\t\tthis.$search = $el.find('.repeater-search').find('.search');\r\n\t\t\tthis.$secondaryPaging = $el.find('.repeater-secondaryPaging');\r\n\t\t\tthis.$start = $el.find('.repeater-start');\r\n\t\t\tthis.$viewport = $el.find('.repeater-viewport');\r\n\t\t\tthis.$views = $el.find('.repeater-views');\r\n\r\n\t\t\t$el.on('mousedown.bs.dropdown.data-api', '[data-toggle=\"dropdown\"]',function(e) {\r\n\t\t\t\t$(this).plugin(\"lark.popups.dropdown\");\r\n\t\t\t}); \r\n\r\n\t\t\tthis.currentPage = 0;\r\n\t\t\tthis.currentView = null;\r\n\t\t\tthis.isDisabled = false;\r\n\t\t\tthis.infiniteScrollingCallback = function noop () {};\r\n\t\t\tthis.infiniteScrollingCont = null;\r\n\t\t\tthis.infiniteScrollingEnabled = false;\r\n\t\t\tthis.infiniteScrollingEnd = null;\r\n\t\t\tthis.infiniteScrollingOptions = {};\r\n\t\t\tthis.lastPageInput = 0;\r\n\t\t\t//this.options = langx.mixin({}, $.fn.repeater.defaults, options);\r\n\t\t\tthis.pageIncrement = 0;// store direction navigated\r\n\t\t\tthis.resizeTimeout = {};\r\n\t\t\tthis.stamp = new Date().getTime() + (Math.floor(Math.random() * 100) + 1);\r\n\t\t\tthis.storedDataSourceOpts = null;\r\n\t\t\tthis.syncingViewButtonState = false;\r\n\t\t\tthis.viewType = null;\r\n\r\n\t\t\tthis.$filters.plugin(\"lark.popups.selectlist\");\r\n\t\t\tthis.$pageSize.plugin(\"lark.popups.selectlist\");\r\n\t\t\tthis.$primaryPaging.find('.combobox').plugin(\"lark.popups.combobox\");\r\n\t\t\tthis.$search.plugin(\"lark.repeaters.searchbox\",{\r\n\t\t\t\tsearchOnKeyPress: this.options.searchOnKeyPress,\r\n\t\t\t\tallowCancel: this.options.allowCancel\r\n\t\t\t});\r\n\r\n\t\t\tthis.$filters.on('changed.lark.selectlist', function onFiltersChanged (e, value) {\r\n\t\t\t\tself.$().trigger('filtered', value);\r\n\t\t\t\tself.render({\r\n\t\t\t\t\tclearInfinite: true,\r\n\t\t\t\t\tpageIncrement: null\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\tthis.$nextBtn.on('click.lark.repeater', langx.proxy(this.next, this));\r\n\t\t\tthis.$pageSize.on('changed.lark.selectlist', function onPageSizeChanged (e, value) {\r\n\t\t\t\tself.$().trigger('pageSizeChanged', value);\r\n\t\t\t\tself.render({\r\n\t\t\t\t\tpageIncrement: null\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\tthis.$prevBtn.on('click.lark.repeater', langx.proxy(this.previous, this));\r\n\t\t\tthis.$primaryPaging.find('.combobox').on('changed.lark.combobox', function onPrimaryPagingChanged (evt, data) {\r\n\t\t\t\tself.pageInputChange(data.text, data);\r\n\t\t\t});\r\n\t\t\tthis.$search.on('searched.lark.search cleared.lark.search', function onSearched (e, value) {\r\n\t\t\t\tself.$().trigger('searchChanged', value);\r\n\t\t\t\tself.render({\r\n\t\t\t\t\tclearInfinite: true,\r\n\t\t\t\t\tpageIncrement: null\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\tthis.$search.on('canceled.lark.search', function onSearchCanceled (e, value) {\r\n\t\t\t\tself.$().trigger('canceled', value);\r\n\t\t\t\tself.render({\r\n\t\t\t\t\tclearInfinite: true,\r\n\t\t\t\t\tpageIncrement: null\r\n\t\t\t\t});\r\n\t\t\t});\r\n\r\n\t\t\tthis.$secondaryPaging.on('blur.lark.repeater', function onSecondaryPagingBlur () {\r\n\t\t\t\tself.pageInputChange(self.$secondaryPaging.val());\r\n\t\t\t});\r\n\t\t\tthis.$secondaryPaging.on('keyup', function onSecondaryPagingKeyup (e) {\r\n\t\t\t\tif (e.keyCode === 13) {\r\n\t\t\t\t\tself.pageInputChange(self.$secondaryPaging.val());\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tthis.$views.find('input').on('change.lark.repeater', langx.proxy(this.viewChanged, this));\r\n\r\n\t\t\t$(window).on('resize.lark.repeater.' + this.stamp, function onResizeRepeater () {\r\n\t\t\t\tclearTimeout(self.resizeTimeout);\r\n\t\t\t\tself.resizeTimeout = setTimeout(function resizeTimeout () {\r\n\t\t\t\t\tself.resize();\r\n\t\t\t\t\tself.$().trigger('resized');\r\n\t\t\t\t}, 75);\r\n\t\t\t});\r\n\r\n\t\t\t//this.$loader.loader();\r\n\t\t\t//this.$loader.loader('pause');\r\n\t\t\tif (this.options.defaultView !== -1) {\r\n\t\t\t\tcurrentView = this.options.defaultView;\r\n\t\t\t} else {\r\n\t\t\t\t$btn = this.$views.find('label.active input');\r\n\t\t\t\tcurrentView = ($btn.length > 0) ? $btn.val() : 'table';\r\n\t\t\t}\r\n\r\n\t\t\t//this.setViewOptions(currentView); // by lwf\r\n\r\n\t\t\tthis.initViewTypes(function initViewTypes () {\r\n\t\t\t\tself.resize();\r\n\t\t\t\tself.$().trigger('resized');\r\n\t\t\t\tself.render({\r\n\t\t\t\t\tchangeView: currentView\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tclear: function clear (opts) {\r\n\t\t\tvar options = opts || {};\r\n\r\n\t\t\tif (!options.preserve) {\r\n\t\t\t\t// Just trash everything because preserve is false\r\n\t\t\t\tthis.$canvas.empty();\r\n\t\t\t} else if (!this.infiniteScrollingEnabled || options.clearInfinite) {\r\n\t\t\t\t// Preserve clear only if infiniteScrolling is disabled or if specifically told to do so\r\n\t\t\t\tscan(this.$canvas);\r\n\t\t\t} // Otherwise don't clear because infiniteScrolling is enabled\r\n\r\n\t\t\t// If viewChanged and current viewTypeObj has a cleared function, call it\r\n\t\t\tvar viewChanged = (options.viewChanged !== undefined) ? options.viewChanged : false;\r\n\t\t\t/* lwf\r\n\t\t\tvar viewTypeObj = $.fn.repeater.viewTypes[this.viewType] || {};\r\n\t\t\tif (!viewChanged && viewTypeObj.cleared) {\r\n\t\t\t\tviewTypeObj.cleared.call(this, {\r\n\t\t\t\t\toptions: options\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t*/\r\n\t\t\tif (this._view) {\r\n\t\t\t\tthis._view.cleared({\r\n\t\t\t\t\toptions: options\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tclearPreservedDataSourceOptions: function clearPreservedDataSourceOptions () {\r\n\t\t\tthis.storedDataSourceOpts = null;\r\n\t\t},\r\n\r\n\t\tdestroy: function destroy () {\r\n\t\t\tvar markup,\r\n\t\t\t\t$el = this.$();\r\n\t\t\t// set input value attrbute in markup\r\n\t\t\t$el.find('input').each(function eachInput () {\r\n\t\t\t\t$(this).attr('value', $(this).val());\r\n\t\t\t});\r\n\r\n\t\t\t// empty elements to return to original markup\r\n\t\t\tthis.$canvas.empty();\r\n\t\t\tmarkup = this._elm.outerHTML;\r\n\r\n\t\t\t// destroy components and remove leftover\r\n\t\t\tlangx.scall($el.find('.combobox').plugin(\"lark.popups.combobox\"),\"destroy\");\r\n\t\t\tlangx.scall($el.find('.selectlist').plugin(\"lark.popups.selectlist\"),\"destroy\");\r\n\t\t\tlangx.scall($el.find('.search').plugin(\"lark.repeaters.searchbox\"),\"destroy\");\r\n\t\t\tif (this.infiniteScrollingEnabled) {\r\n\t\t\t\t$(this.infiniteScrollingCont).infinitescroll('destroy');\r\n\t\t\t}\r\n\r\n\t\t\t$el.remove();\r\n\r\n\t\t\t// any external events\r\n\t\t\t$(window).off('resize.lark.repeater.' + this.stamp);\r\n\r\n\t\t\treturn markup;\r\n\t\t},\r\n\r\n\t\tdisable: function disable () {\r\n\t\t\tlangx.scall(this.$search.plugin(\"lark.repeaters.searchbox\"),\"disable\");\r\n\t\t\tlangx.scall(this.$filters.plugin(\"lark.popups.selectlist\"),\"disable\");\r\n\t\t\tthis.$views.find('label, input').addClass('disabled').attr('disabled', 'disabled');\r\n\t\t\tlangx.scall(this.$pageSize.plugin(\"lark.popups.selectlist\"),\"disable\");\r\n\t\t\tlangx.scall(this.$primaryPaging.find('.combobox').plugin(\"lark.popups.combobox\"),\"disable\");\r\n\t\t\tthis.$secondaryPaging.attr('disabled', 'disabled');\r\n\t\t\tthis.$prevBtn.attr('disabled', 'disabled');\r\n\t\t\tthis.$nextBtn.attr('disabled', 'disabled');\r\n\r\n\t\t\tif (this._view) {\r\n\t\t\t\tthis._view.enabled({\r\n\t\t\t\t\tstatus: false\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tthis.isDisabled = true;\r\n\t\t\tthis.$().addClass('disabled');\r\n\t\t\tthis.$().trigger('disabled');\r\n\t\t},\r\n\r\n\t\tenable: function enable () {\r\n\t\t\tlangx.scall(this.$search.plugin(\"lark.repeaters.searchbox\"),\"enable\");\r\n\t\t\tlangx.scall(this.$filters.plugin(\"lark.popups.selectlist\"),\"enable\")\r\n\t\t\tthis.$views.find('label, input').removeClass('disabled').removeAttr('disabled');\r\n\t\t\tlangx.scall(this.$pageSize.plugin(\"lark.popups.selectlist\"),\"enable\")\r\n\t\t\tlangx.scall(this.$primaryPaging.find('.combobox').plugin(\"lark.popups.combobox\"),\"enable\");\r\n\t\t\tthis.$secondaryPaging.removeAttr('disabled');\r\n\r\n\t\t\tif (!this.$prevBtn.hasClass('page-end')) {\r\n\t\t\t\tthis.$prevBtn.removeAttr('disabled');\r\n\t\t\t}\r\n\t\t\tif (!this.$nextBtn.hasClass('page-end')) {\r\n\t\t\t\tthis.$nextBtn.removeAttr('disabled');\r\n\t\t\t}\r\n\r\n\t\t\t// is 0 or 1 pages, if using $primaryPaging (combobox)\r\n\t\t\t// if using selectlist allow user to use selectlist to select 0 or 1\r\n\t\t\tif (this.$prevBtn.hasClass('page-end') && this.$nextBtn.hasClass('page-end')) {\r\n\t\t\t\tlangx.scall(this.$primaryPaging.plugin(\"lark.popups.combobox\"),\"disable\");\r\n\t\t\t}\r\n\r\n\t\t\t// if there are no items\r\n\t\t\tif (parseInt(this.$count.html(), 10) !== 0) {\r\n\t\t\t\tlangx.scall(this.$pageSize.plugin(\"lark.popups.selectlist\"),\"enable\");\r\n\t\t\t} else {\r\n\t\t\t\tlangx.scall(this.$pageSize.plugin(\"lark.popups.selectlist\"),\"disable\");\r\n\t\t\t}\r\n\r\n\t\t\tif (this._view) {\r\n\t\t\t\tthis._view.enabled({\r\n\t\t\t\t\tstatus: true\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tthis.isDisabled = false;\r\n\t\t\tthis.$().removeClass('disabled');\r\n\t\t\tthis.$().trigger('enabled');\r\n\t\t},\r\n\r\n\t\tgetDataOptions: function getDataOptions (opts) {\r\n\t\t\tvar options = opts || {};\r\n\t\t\tif (options.pageIncrement !== undefined) {\r\n\t\t\t\tif (options.pageIncrement === null) {\r\n\t\t\t\t\tthis.currentPage = 0;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.currentPage += options.pageIncrement;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar dataSourceOptions = {};\r\n\t\t\tif (options.dataSourceOptions) {\r\n\t\t\t\tdataSourceOptions = options.dataSourceOptions;\r\n\r\n\t\t\t\tif (options.preserveDataSourceOptions) {\r\n\t\t\t\t\tif (this.storedDataSourceOpts) {\r\n\t\t\t\t\t\tthis.storedDataSourceOpts = langx.mixin(this.storedDataSourceOpts, dataSourceOptions);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.storedDataSourceOpts = dataSourceOptions;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this.storedDataSourceOpts) {\r\n\t\t\t\tdataSourceOptions = langx.mixin(this.storedDataSourceOpts, dataSourceOptions);\r\n\t\t\t}\r\n\r\n\t\t\tvar returnOptions = {\r\n\t\t\t\tview: this.currentView,\r\n\t\t\t\tpageIndex: this.currentPage,\r\n\t\t\t\tfilter: {\r\n\t\t\t\t\ttext: 'All',\r\n\t\t\t\t\tvalue: 'all'\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tif (this.$filters.length > 0) {\r\n\t\t\t\treturnOptions.filter = this.$filters.plugin(\"lark.popups.selectlist\").selectedItem();\r\n\t\t\t}\r\n\r\n\t\t\tif (!this.infiniteScrollingEnabled) {\r\n\t\t\t\treturnOptions.pageSize = 25;\r\n\r\n\t\t\t\tif (this.$pageSize.length > 0) {\r\n\t\t\t\t\treturnOptions.pageSize = parseInt(this.$pageSize.plugin(\"lark.popups.selectlist\").selectedItem().value, 10);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar searchValue = this.$search && this.$search.find('input') && this.$search.find('input').val();\r\n\t\t\tif (searchValue !== '') {\r\n\t\t\t\treturnOptions.search = searchValue;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (this._view) {\r\n\t\t\t\treturnOptions = this._view.dataOptions(returnOptions);\r\n\t\t\t}\r\n\r\n\r\n\t\t\treturnOptions = langx.mixin(returnOptions, dataSourceOptions);\r\n\r\n\t\t\treturn returnOptions;\r\n\t\t},\r\n\r\n\t\tinfiniteScrolling: function infiniteScrolling (enable, opts) {\r\n\t\t\tvar footer = this.$().find('.repeater-footer');\r\n\t\t\tvar viewport = this.$().find('.repeater-viewport');\r\n\t\t\tvar options = opts || {};\r\n\r\n\t\t\tif (enable) {\r\n\t\t\t\tthis.infiniteScrollingEnabled = true;\r\n\t\t\t\tthis.infiniteScrollingEnd = options.end;\r\n\t\t\t\tdelete options.dataSource;\r\n\t\t\t\tdelete options.end;\r\n\t\t\t\tthis.infiniteScrollingOptions = options;\r\n\t\t\t\tviewport.css({\r\n\t\t\t\t\theight: viewport.height() + footer.outerHeight()\r\n\t\t\t\t});\r\n\t\t\t\tfooter.hide();\r\n\t\t\t} else {\r\n\t\t\t\tvar cont = this.infiniteScrollingCont;\r\n\t\t\t\tvar data = cont.data();\r\n\t\t\t\tdelete data.infinitescroll;\r\n\t\t\t\tcont.off('scroll');\r\n\t\t\t\tcont.removeClass('infinitescroll');\r\n\r\n\t\t\t\tthis.infiniteScrollingCont = null;\r\n\t\t\t\tthis.infiniteScrollingEnabled = false;\r\n\t\t\t\tthis.infiniteScrollingEnd = null;\r\n\t\t\t\tthis.infiniteScrollingOptions = {};\r\n\t\t\t\tviewport.css({\r\n\t\t\t\t\theight: viewport.height() - footer.outerHeight()\r\n\t\t\t\t});\r\n\t\t\t\tfooter.show();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tinfiniteScrollPaging: function infiniteScrollPaging (data) {\r\n\t\t\tvar end = (this.infiniteScrollingEnd !== true) ? this.infiniteScrollingEnd : undefined;\r\n\t\t\tvar page = data.page;\r\n\t\t\tvar pages = data.pages;\r\n\r\n\t\t\tthis.currentPage = (page !== undefined) ? page : NaN;\r\n\r\n\t\t\tif (data.end === true || (this.currentPage + 1) >= pages) {\r\n\t\t\t\tthis.infiniteScrollingCont.infinitescroll('end', end);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tinitInfiniteScrolling: function initInfiniteScrolling () {\r\n\t\t\tvar cont = this.$canvas.find('[data-infinite=\"true\"]:first');\r\n\r\n\t\t\tcont = (cont.length < 1) ? this.$canvas : cont;\r\n\t\t\tif (cont.data('lark.infinitescroll')) {\r\n\t\t\t\tcont.infinitescroll('enable');\r\n\t\t\t} else {\r\n\t\t\t\tvar self = this;\r\n\t\t\t\tvar opts = langx.mixin({}, this.infiniteScrollingOptions);\r\n\t\t\t\topts.dataSource = function dataSource (helpers, callback) {\r\n\t\t\t\t\tself.infiniteScrollingCallback = callback;\r\n\t\t\t\t\tself.render({\r\n\t\t\t\t\t\tpageIncrement: 1\r\n\t\t\t\t\t});\r\n\t\t\t\t};\r\n\t\t\t\tcont.infinitescroll(opts);\r\n\t\t\t\tthis.infiniteScrollingCont = cont;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tinitViewTypes: function initViewTypes (callback) {\r\n\r\n\t\t\tvar views = this._views = [];\r\n\t\t\tvar viewTypes = this.options.addons.views;\r\n\t\t\tif (langx.isArray(viewTypes)) {\r\n\t\t\t\tfor (var i = 0; i< viewTypes.length; i++) {\r\n\t\t\t\t\tvar setting = viewTypeRegistry[viewTypes[i]];\r\n\t\t\t\t\tif (!setting) {\r\n\t\t\t\t\t\tthrow new Error(\"The view type \" + viewTypes[i] + \" is not defined!\");\r\n\t\t\t\t\t} \r\n\t\t\t\t\tvar ctor = setting.ctor;\r\n\t\t\t\t\tthis._views.push(this._views[viewTypes[i]] = new ctor(this));\r\n\r\n\t\t\t\t}\t\t\t\t\r\n\t\t\t} else if (langx.isPlainObject(viewTypes)) {\r\n\t\t\t\tfor (var name in viewTypes) {\r\n\t\t\t\t\tvar setting = viewTypeRegistry[name];\r\n\t\t\t\t\tif (!setting) {\r\n\t\t\t\t\t\tthrow new Error(\"The view type \" + viewTypes[i] + \" is not defined!\");\r\n\t\t\t\t\t} \r\n\t\t\t\t\tvar ctor = setting.ctor;\r\n\t\t\t\t\tthis._views.push(this._views[name] = new ctor(this,viewTypes[name]));\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tcallback();\t\t\t\r\n\t\t},\r\n\r\n\t\titemization: function itemization (data) {\r\n\t\t\tthis.$count.html((data.count !== undefined) ? data.count : '?');\r\n\t\t\tthis.$end.html((data.end !== undefined) ? data.end : '?');\r\n\t\t\tthis.$start.html((data.start !== undefined) ? data.start : '?');\r\n\t\t},\r\n\r\n\t\tnext: function next () {\r\n\t\t\tthis.$nextBtn.attr('disabled', 'disabled');\r\n\t\t\tthis.$prevBtn.attr('disabled', 'disabled');\r\n\t\t\tthis.pageIncrement = 1;\r\n\t\t\tthis.$().trigger('nextClicked');\r\n\t\t\tthis.render({\r\n\t\t\t\tpageIncrement: this.pageIncrement\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tpageInputChange: function pageInputChange (val, dataFromCombobox) {\r\n\t\t\t// dataFromCombobox is a proxy for data from combobox's changed event,\r\n\t\t\t// if no combobox is present data will be undefined\r\n\t\t\tvar pageInc;\r\n\t\t\tif (val !== this.lastPageInput) {\r\n\t\t\t\tthis.lastPageInput = val;\r\n\t\t\t\tvar value = parseInt(val, 10) - 1;\r\n\t\t\t\tpageInc = value - this.currentPage;\r\n\t\t\t\tthis.$().trigger('pageChanged', [value, dataFromCombobox]);\r\n\t\t\t\tthis.render({\r\n\t\t\t\t\tpageIncrement: pageInc\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tpagination: function pagination (data) {\r\n\t\t\tthis.$primaryPaging.removeClass('active');\r\n\t\t\tthis.$secondaryPaging.removeClass('active');\r\n\r\n\t\t\tvar totalPages = data.pages;\r\n\t\t\tthis.currentPage = (data.page !== undefined) ? data.page : NaN;\r\n\t\t\t// set paging to 0 if total pages is 0, otherwise use one-based index\r\n\t\t\tvar currenPageOutput = totalPages === 0 ? 0 : this.currentPage + 1;\r\n\r\n\t\t\tif (totalPages <= this.options.dropPagingCap) {\r\n\t\t\t\tthis.$primaryPaging.addClass('active');\r\n\t\t\t\tvar dropMenu = this.$primaryPaging.find('.dropdown-menu');\r\n\t\t\t\tdropMenu.empty();\r\n\t\t\t\tfor (var i = 0; i < totalPages; i++) {\r\n\t\t\t\t\tvar l = i + 1;\r\n\t\t\t\t\tdropMenu.append('<li data-value=\"' + l + '\"><a href=\"#\">' + l + '</a></li>');\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.$primaryPaging.find('input.form-control').val(currenPageOutput);\r\n\t\t\t} else {\r\n\t\t\t\tthis.$secondaryPaging.addClass('active');\r\n\t\t\t\tthis.$secondaryPaging.val(currenPageOutput);\r\n\t\t\t}\r\n\r\n\t\t\tthis.lastPageInput = this.currentPage + 1 + '';\r\n\r\n\t\t\tthis.$pages.html('' + totalPages);\r\n\r\n\t\t\t// this is not the last page\r\n\t\t\tif ((this.currentPage + 1) < totalPages) {\r\n\t\t\t\tthis.$nextBtn.removeAttr('disabled');\r\n\t\t\t\tthis.$nextBtn.removeClass('page-end');\r\n\t\t\t} else {\r\n\t\t\t\tthis.$nextBtn.attr('disabled', 'disabled');\r\n\t\t\t\tthis.$nextBtn.addClass('page-end');\r\n\t\t\t}\r\n\r\n\t\t\t// this is not the first page\r\n\t\t\tif ((this.currentPage - 1) >= 0) {\r\n\t\t\t\tthis.$prevBtn.removeAttr('disabled');\r\n\t\t\t\tthis.$prevBtn.removeClass('page-end');\r\n\t\t\t} else {\r\n\t\t\t\tthis.$prevBtn.attr('disabled', 'disabled');\r\n\t\t\t\tthis.$prevBtn.addClass('page-end');\r\n\t\t\t}\r\n\r\n\t\t\t// return focus to next/previous buttons after navigating\r\n\t\t\tif (this.pageIncrement !== 0) {\r\n\t\t\t\tif (this.pageIncrement > 0) {\r\n\t\t\t\t\tif (this.$nextBtn.is(':disabled')) {\r\n\t\t\t\t\t\t// if you can't focus, go the other way\r\n\t\t\t\t\t\tthis.$prevBtn.focus();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.$nextBtn.focus();\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (this.$prevBtn.is(':disabled')) {\r\n\t\t\t\t\t// if you can't focus, go the other way\r\n\t\t\t\t\tthis.$nextBtn.focus();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.$prevBtn.focus();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tprevious: function previous () {\r\n\t\t\tthis.$nextBtn.attr('disabled', 'disabled');\r\n\t\t\tthis.$prevBtn.attr('disabled', 'disabled');\r\n\t\t\tthis.pageIncrement = -1;\r\n\t\t\tthis.$().trigger('previousClicked');\r\n\t\t\tthis.render({\r\n\t\t\t\tpageIncrement: this.pageIncrement\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t// This functions more as a \"pre-render\" than a true \"render\"\r\n\t\trender: function render (opts) {\r\n\t\t\tthis.disable();\r\n\r\n\t\t\tvar viewChanged = false;\r\n\t\t\t//var viewTypeObj = $.fn.repeater.viewTypes[this.viewType] || {};\r\n\t\t\tvar options = opts || {};\r\n\r\n\t\t\tif (options.changeView && (this.currentView !== options.changeView)) {\r\n\t\t\t\tvar prevView = this.currentView;\r\n\t\t\t\tthis.currentView = options.changeView;\r\n\t\t\t\tthis.viewType = this.currentView.split('.')[0];\r\n\r\n\t\t\t\tthis._view = this._views[this.viewType];\r\n\r\n\t\t\t\t//this.setViewOptions(this.currentView);\r\n\r\n\t\t\t\tthis.$().attr('data-currentview', this.currentView);\r\n\t\t\t\tthis.$().attr('data-viewtype', this.viewType);\r\n\t\t\t\tviewChanged = true;\r\n\t\t\t\toptions.viewChanged = viewChanged;\r\n\r\n\t\t\t\tthis.$().trigger('viewChanged', this.currentView);\r\n\r\n\t\t\t\tif (this.infiniteScrollingEnabled) {\r\n\t\t\t\t\tthis.infiniteScrolling(false);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._view.selected({\r\n\t\t\t\t\tprevView: prevView\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t\tthis.syncViewButtonState();\r\n\r\n\t\t\toptions.preserve = (options.preserve !== undefined) ? options.preserve : !viewChanged;\r\n\t\t\tthis.clear(options);\r\n\r\n\t\t\tif (!this.infiniteScrollingEnabled || (this.infiniteScrollingEnabled && viewChanged)) {\r\n\t\t\t\t//this.$loader.show().loader('play');\r\n\t\t\t\tthis._throbber = this.throb({\r\n\t\t\t\t\tclassName : \"throbWrap\"\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tvar dataOptions = this.getDataOptions(options);\r\n\r\n\t\t\tvar beforeRender = this.options.dataSource;\r\n\t\t\tvar self = this;\r\n\t\t\tvar viewTypeObj = this._view;\r\n\t\t\tbeforeRender(\r\n\t\t\t\tdataOptions,\r\n\t\t\t\t// this serves as a bridge function to pass all required data through to the actual function\r\n\t\t\t\t// that does the rendering for us.\r\n\t\t\t\tfunction callDoRender (dataSourceReturnedData) {\r\n\t\t\t\t\tself.doRender({\r\n\t\t\t\t\t\tdata: dataSourceReturnedData,\r\n\t\t\t\t\t\tdataOptions: dataOptions,\r\n\t\t\t\t\t\toptions: options,\r\n\t\t\t\t\t\tviewChanged: viewChanged,\r\n\t\t\t\t\t\tviewTypeObj: viewTypeObj\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t},\r\n\r\n\t\tresize: function resize () {\r\n\t\t\tvar staticHeight = (this.options.staticHeight === -1) ? this.$().attr('data-staticheight') : this.options.staticHeight;\r\n\t\t\tvar viewTypeObj = {};\r\n\t\t\tvar height;\r\n\t\t\tvar viewportMargins;\r\n\t\t\tvar scrubbedElements = [];\r\n\t\t\tvar previousProperties = [];\r\n\t\t\t//var $hiddenElements = this.$().parentsUntil(':visible').addBack(); // del addBack() not supported by skyalrk\r\n\t\t\tvar $hiddenElements = this.$().parentsUntil(':visible');\r\n\t\t\tvar currentHiddenElement;\r\n\t\t\tvar currentElementIndex = 0;\r\n\r\n\t\t\t// Set parents to 'display:block' until repeater is visible again\r\n\t\t\twhile (currentElementIndex < $hiddenElements.length && this.$().is(':hidden')) {\r\n\t\t\t\tcurrentHiddenElement = $hiddenElements[currentElementIndex];\r\n\t\t\t\t// Only set display property on elements that are explicitly hidden (i.e. do not inherit it from their parent)\r\n\t\t\t\tif ($(currentHiddenElement).is(':hidden')) {\r\n\t\t\t\t\tpreviousProperties.push(currentHiddenElement.style['display']);\r\n\t\t\t\t\tcurrentHiddenElement.style['display'] = 'block';\r\n\t\t\t\t\tscrubbedElements.push(currentHiddenElement);\r\n\t\t\t\t}\r\n\t\t\t\tcurrentElementIndex++;\r\n\t\t\t}\r\n\r\n\t\t\t//if (this.viewType) {\r\n\t\t\t//\tviewTypeObj = $.fn.repeater.viewTypes[this.viewType] || {};\r\n\t\t\t//}\r\n\r\n\t\t\tif (staticHeight !== undefined && staticHeight !== false && staticHeight !== 'false') {\r\n\t\t\t\tthis.$canvas.addClass('scrolling');\r\n\t\t\t\tviewportMargins = {\r\n\t\t\t\t\tbottom: this.$viewport.css('margin-bottom'),\r\n\t\t\t\t\ttop: this.$viewport.css('margin-top')\r\n\t\t\t\t};\r\n\r\n\t\t\t\tvar staticHeightValue = (staticHeight === 'true' || staticHeight === true) ? this.$().height() : parseInt(staticHeight, 10);\r\n\t\t\t\tvar headerHeight = this.$().find('.repeater-header').outerHeight();\r\n\t\t\t\tvar footerHeight = this.$().find('.repeater-footer').outerHeight();\r\n\t\t\t\tvar bottomMargin = (viewportMargins.bottom === 'auto') ? 0 : parseInt(viewportMargins.bottom, 10);\r\n\t\t\t\tvar topMargin = (viewportMargins.top === 'auto') ? 0 : parseInt(viewportMargins.top, 10);\r\n\r\n\t\t\t\theight = staticHeightValue - headerHeight - footerHeight - bottomMargin - topMargin;\r\n\t\t\t\tthis.$viewport.outerHeight(height);\r\n\t\t\t} else {\r\n\t\t\t\tthis.$canvas.removeClass('scrolling');\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (this._view) {\r\n\t\t\t\tthis._view.resize({\r\n\t\t\t\t\theight: this.$().outerHeight(),\r\n\t\t\t\t\twidth: this.$().outerWidth()\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tscrubbedElements.forEach(function (element, i) {\r\n\t\t\t\telement.style['display'] = previousProperties[i];\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t// e.g. \"Rows\" or \"Thumbnails\"\r\n\t\trenderItems: function renderItems (viewTypeObj, data, callback) {\r\n\t\t\tviewTypeObj.render({\r\n\t\t\t\tcontainer: this.$canvas,\r\n\t\t\t\tdata: data\r\n\t\t\t}, callback);\r\n\t\t\tcallback(data);\r\n\t\t},\r\n\r\n\t\tviewChanged: function viewChanged (e) {\r\n\t\t\tvar $selected = $(e.target);\r\n\t\t\tvar val = $selected.val();\r\n\r\n\t\t\tif (!this.syncingViewButtonState) {\r\n\t\t\t\tif (this.isDisabled || $selected.parents('label:first').hasClass('disabled')) {\r\n\t\t\t\t\tthis.syncViewButtonState();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.render({\r\n\t\t\t\t\t\tchangeView: val,\r\n\t\t\t\t\t\tpageIncrement: null\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tsyncViewButtonState: function syncViewButtonState () {\r\n\t\t\tvar $itemToCheck = this.$views.find('input[value=\"' + this.currentView + '\"]');\r\n\r\n\t\t\tthis.syncingViewButtonState = true;\r\n\t\t\tthis.$views.find('input').prop('checked', false);\r\n\t\t\tthis.$views.find('label.active').removeClass('active');\r\n\r\n\t\t\tif ($itemToCheck.length > 0) {\r\n\t\t\t\t$itemToCheck.prop('checked', true);\r\n\t\t\t\t$itemToCheck.parents('label:first').addClass('active');\r\n\t\t\t}\r\n\t\t\tthis.syncingViewButtonState = false;\r\n\t\t},\r\n\r\n\t\tgetNestedProperty: function (obj, property) {\r\n\t\t\tproperty.replace(\r\n\t\t\t\t// Matches native JavaScript notation in a String,\r\n\t\t\t\t// e.g. '[\"doubleQuoteProp\"].dotProp[2]'\r\n\t\t\t\t// eslint-disable-next-line no-useless-escape\r\n\t\t\t\t/\\[(?:'([^']+)'|\"([^\"]+)\"|(\\d+))\\]|(?:(?:^|\\.)([^\\.\\[]+))/g,\r\n\t\t\t\tfunction (str, singleQuoteProp, doubleQuoteProp, arrayIndex, dotProp) {\r\n\t\t\t\t\tvar prop =\r\n\t\t\t\t\t\tdotProp ||\r\n\t\t\t\t\t\tsingleQuoteProp ||\r\n\t\t\t\t\t\tdoubleQuoteProp ||\r\n\t\t\t\t\t\t(arrayIndex && parseInt(arrayIndex, 10))\r\n\t\t\t\t\tif (str && obj) {\r\n\t\t\t\t\t\tobj = obj[prop]\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\treturn obj\r\n\t\t},\r\n\r\n\t\tgetDataProperty: function (obj, property) {\r\n\t\t\tvar key\r\n\t\t\tvar prop\r\n\t\t\tif (obj.dataset) {\r\n\t\t\t\tkey = property.replace(/-([a-z])/g, function (_, b) {\r\n\t\t\t\t\treturn b.toUpperCase()\r\n\t\t\t\t})\r\n\t\t\t\tprop = obj.dataset[key]\r\n\t\t\t} else if (obj.getAttribute) {\r\n\t\t\t\tprop = obj.getAttribute(\r\n\t\t\t\t\t'data-' + property.replace(/([A-Z])/g, '-$1').toLowerCase()\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\tif (typeof prop === 'string') {\r\n\t\t\t\t// eslint-disable-next-line no-useless-escape\r\n\t\t\t\tif (\r\n\t\t\t\t\t/^(true|false|null|-?\\d+(\\.\\d+)?|\\{[\\s\\S]*\\}|\\[[\\s\\S]*\\])$/.test(prop)\r\n\t\t\t\t) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\treturn $.parseJSON(prop)\r\n\t\t\t\t\t} catch (ignore) {}\r\n\t\t\t\t}\r\n\t\t\t\treturn prop\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tgetItemProperty: function (obj, property) {\r\n\t\t\tvar prop = this.getDataProperty(obj, property)\r\n\t\t\tif (prop === undefined) {\r\n\t\t\t\tprop = obj[property]\r\n\t\t\t}\r\n\t\t\tif (prop === undefined) {\r\n\t\t\t\tprop = this.getNestedProperty(obj, property)\r\n\t\t\t}\r\n\t\t\treturn prop\r\n\t\t},\r\n\r\n\t\t// This does the actual rendering of the repeater\r\n\t\tdoRender : function doRender (state) {\r\n\t\t\tvar data = state.data || {};\r\n\r\n\t\t\tif (this.infiniteScrollingEnabled) {\r\n\t\t\t\t// pass empty object because data handled in infiniteScrollPaging method\r\n\t\t\t\tthis.infiniteScrollingCallback({});\r\n\t\t\t} else {\r\n\t\t\t\tthis.itemization(data);\r\n\t\t\t\tthis.pagination(data);\r\n\t\t\t}\r\n\r\n\t\t\tvar self = this;\r\n\t\t\tthis.renderItems(\r\n\t\t\t\tstate.viewTypeObj,\r\n\t\t\t\tdata,\r\n\t\t\t\tfunction callAfterRender (d) {\r\n\t\t\t\t\tstate.data = d;\r\n\t\t\t\t\tself.afterRender(state);\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t},\r\n\r\n\t\tcallNextInit : function callNextInit (currentViewType, viewTypes, callback) {\r\n\t\t\tvar nextViewType = currentViewType + 1;\r\n\t\t\tif (nextViewType < viewTypes.length) {\r\n\t\t\t\tthis.initViewType(nextViewType, viewTypes, callback);\r\n\t\t\t} else {\r\n\t\t\t\tcallback();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tinitViewType : function initViewType (currentViewtype, viewTypes, callback) {\r\n\t\t\tvar self = this;\r\n\t\t\tif (viewTypes[currentViewtype].initialize) {\r\n\t\t\t\tviewTypes[currentViewtype].initialize.call(this, {}, function afterInitialize () {\r\n\t\t\t\t\tself.callNextInit(currentViewtype, viewTypes, callback);\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tself.callNextInit(currentViewtype, viewTypes, callback);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// Does all of our cleanup post-render\r\n\t\tafterRender : function afterRender (state) {\r\n\t\t\tvar data = state.data || {};\r\n\r\n\t\t\tif (this.infiniteScrollingEnabled) {\r\n\t\t\t\tif (state.viewChanged || state.options.clearInfinite) {\r\n\t\t\t\t\tthis.initInfiniteScrolling();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.infiniteScrollPaging(data, state.options);\r\n\t\t\t}\r\n\r\n\t\t\t//this.$loader.hide().loader('pause');\r\n\t\t\tif (this._throbber) {\r\n\t\t\t\tthis._throbber.remove();\r\n\t\t\t\tthis._throbber = null;\r\n\t\t\t}\r\n\t\t\tthis.enable();\r\n\r\n\t\t\tthis.$search.trigger('rendered', {\r\n\t\t\t\tdata: data,\r\n\t\t\t\toptions: state.dataOptions,\r\n\t\t\t\trenderOptions: state.options\r\n\t\t\t});\r\n\t\t\tthis.$().trigger('rendered', {\r\n\t\t\t\tdata: data,\r\n\t\t\t\toptions: state.dataOptions,\r\n\t\t\t\trenderOptions: state.options\r\n\t\t\t});\r\n\r\n\t\t\t// for maintaining support of 'loaded' event\r\n\t\t\tthis.$().trigger('loaded', state.dataOptions);\r\n\t\t}\r\n\t});\r\n\r\n\tvar logWarn = function logWarn (msg) {\r\n\t\tif (window.console && window.console.warn) {\r\n\t\t\twindow.console.warn(msg);\r\n\t\t}\r\n\t};\r\n\r\n\tvar scan = function scan (cont) {\r\n\t\tvar keep = [];\r\n\t\tcont.children().each(function eachContainerChild () {\r\n\t\t\tvar item = $(this);\r\n\t\t\tvar pres = item.attr('data-preserve');\r\n\t\t\tif (pres === 'deep') {\r\n\t\t\t\titem.detach();\r\n\t\t\t\tkeep.push(item);\r\n\t\t\t} else if (pres === 'shallow') {\r\n\t\t\t\tscan(item);\r\n\t\t\t\titem.detach();\r\n\t\t\t\tkeep.push(item);\r\n\t\t\t}\r\n\t\t});\r\n\t\tcont.empty();\r\n\t\tcont.append(keep);\r\n\t};\r\n\r\n\tRepeater.addons = {};\r\n\r\n    plugins.register(Repeater);\r\n\r\n\r\n\treturn repeaters.Repeater = Repeater;\r\n\r\n});\r\n\ndefine('skylark-domx-plugins-repeaters/views/view-base',[\r\n\t\"skylark-langx/langx\",\r\n\t\"skylark-domx-noder\",\r\n\t\"skylark-domx-query\"\r\n],function(langx,noder,$) {\r\n\r\n\tvar ViewBase = langx.Evented.inherit({\r\n\t    klassName: \"ViewBase\",\r\n\r\n\t    options : {\r\n\t      // The class to add when the gallery controls are visible:\r\n\t      controlsClass: \"skylarkui-repeater-controls\",\r\n\t\t    // Defines if the gallery should open in fullscreen mode:\r\n\t\t    fullScreen: false\r\n\r\n\t    },\r\n\r\n\r\n    \t_create$Item : function (template,itemData) {\r\n        \tvar invalid = false;\r\n\r\n        \tfunction replace() {\r\n            \tvar end, start, val;\r\n\r\n            \tstart = template.indexOf('{{');\r\n            \tend = template.indexOf('}}', start + 2);\r\n\r\n            \tif (start > -1 && end > -1) {\r\n                \tval = langx.trim(template.substring(start + 2, end));\r\n                \tval = (itemData[val] !== undefined) ? itemData[val] : '';\r\n                \ttemplate = template.substring(0, start) + val + template.substring(end + 2);\r\n            \t} else {\r\n                \tinvalid = true;\r\n            \t}\r\n       \t\t}\r\n\r\n        \twhile (!invalid && template.search('{{') >= 0) {\r\n            \treplace(template);\r\n        \t}\r\n\r\n        \treturn $(template);\r\n    \t},\t    \r\n\t    \r\n  \t\tinit : function (repeater,options) {\r\n  \t\t\tvar that = this,\r\n  \t\t\t\thasControls;\r\n  \t\t\tthis.repeater = repeater;\r\n  \t\t\tthis.initOptions(options);\r\n  \t        if (this.options.fullScreen) {\r\n  \t          noder.fullScreen(this.container[0]);\r\n  \t        }\r\n  \t        this.repeater.on(\"item.running\",function(e){\r\n  \t            if (that.container.hasClass(that.options.controlsClass)) {\r\n  \t              hasControls = true\r\n  \t              that.container.removeClass(that.options.controlsClass);\r\n  \t            } else {\r\n  \t              hasControls = false\r\n  \t            }\r\n  \t        });\r\n\r\n  \t        this.repeater.on(\"item.running\",function(e){\r\n  \t            if (hasControls) {\r\n  \t              that.container.addClass(that.options.controlsClass);\r\n  \t            }\r\n  \t        });\r\n  \t\t},\r\n\r\n\t    //initOptions: function (options) {\r\n\t    //  // Create a copy of the prototype options:\r\n\t    //  this.options = langx.mixin({}, this.options,options);\r\n\t    //},\r\n\r\n      initOptions : function(options) {\r\n        var ctor = this.constructor,\r\n            cache = ctor.cache = ctor.cache || {},\r\n            defaults = cache.defaults;\r\n        if (!defaults) {\r\n          var  ctors = [];\r\n          do {\r\n            ctors.unshift(ctor);\r\n            if (ctor === Plugin) {\r\n              break;\r\n            }\r\n            ctor = ctor.superclass;\r\n          } while (ctor);\r\n\r\n          defaults = cache.defaults = {};\r\n          for (var i=0;i<ctors.length;i++) {\r\n            ctor = ctors[i];\r\n            if (ctor.prototype.hasOwnProperty(\"options\")) {\r\n              langx.mixin(defaults,ctor.prototype.options,true);\r\n            }\r\n            if (ctor.hasOwnProperty(\"options\")) {\r\n              langx.mixin(defaults,ctor.options,true);\r\n            }\r\n          }\r\n        }\r\n        Object.defineProperty(this,\"options\",{\r\n          value :langx.mixin({},defaults,options,true)\r\n        });\r\n\r\n        //return this.options = langx.mixin({},defaults,options);\r\n        return this.options;\r\n      },\r\n\r\n\r\n\t    close: function () {\r\n      \t\tif (noder.fullScreen() === this.container[0]) {\r\n        \t\tnoder.fullScreen(false);\r\n      \t\t}\r\n    \t},\r\n\r\n    \tgetValue : function() {\r\n    \t\treturn this.getSelectedItems();\r\n    \t},\r\n\r\n    \tcleared : function() {\r\n\r\n    \t},\r\n\r\n    \tselected : function() {\r\n\r\n    \t},\r\n\r\n\t    dataOptions: function (options) {\r\n\t    \treturn options;\r\n\t    },\r\n\r\n\t    enabled : function(helpers){\r\n\t    \t\r\n\t    },\r\n\r\n      addItem : function addItem ($parent, response) {\r\n        var action;\r\n        if (response) {\r\n          action = (response.action) ? response.action : 'append';\r\n          if (action !== 'none' && response.item !== undefined) {\r\n            var $container = (response.container !== undefined) ? $(response.container) : $parent;\r\n            $container[action](response.item);\r\n          }\r\n        }\r\n      },\r\n\r\n      render : function(helpers) {\r\n        if (this.before) {\r\n          var addBefore = this.before(helpers);\r\n          this.addItem(helpers.container, addBefore);\r\n        }\r\n\r\n        var $dataContainer = helpers.container.find('[data-container=\"true\"]:last');\r\n        var $container = ($dataContainer.length > 0) ? $dataContainer : helpers.container;\r\n\r\n        // It appears that the following code would theoretically allow you to pass a deeply\r\n        // nested value to \"repeat on\" to be added to the repeater.\r\n        // eg. `data.foo.bar.items`\r\n        if (this.renderItem) {\r\n          var subset;\r\n          var objectAndPropsToRepeatOnString = this.repeat || 'data.items';\r\n          var objectAndPropsToRepeatOn = objectAndPropsToRepeatOnString.split('.');\r\n          var objectToRepeatOn = objectAndPropsToRepeatOn[0];\r\n\r\n          if (objectToRepeatOn === 'data' || objectToRepeatOn === 'this') {\r\n            subset = (objectToRepeatOn === 'this') ? this : helpers.data;\r\n\r\n            // Extracts subset from object chain (get `items` out of `foo.bar.items`). I think....\r\n            var propsToRepeatOn = objectAndPropsToRepeatOn.slice(1);\r\n            for (var prop = 0; prop < propsToRepeatOn.length; prop++) {\r\n              if (subset[propsToRepeatOn[prop]] !== undefined) {\r\n                subset = subset[propsToRepeatOn[prop]];\r\n              } else {\r\n                subset = [];\r\n                console.warn('WARNING: Repeater unable to find property to iterate renderItem on.');\r\n                break;\r\n              }\r\n            }\r\n\r\n            for (var subItemIndex = 0; subItemIndex < subset.length; subItemIndex++) {\r\n              var addSubItem = this.renderItem({\r\n                container: $container,\r\n                data: helpers.data,\r\n                index: subItemIndex,\r\n                subset: subset\r\n              });\r\n              this.addItem($container, addSubItem);\r\n            }\r\n          } else {\r\n            console.warn('WARNING: Repeater plugin \"repeat\" value must start with either \"data\" or \"this\"');\r\n          }\r\n        }\r\n\r\n        if (this.after) {\r\n          var addAfter = this.after(helpers);\r\n          this.addItem(helpers.container, addAfter);\r\n        }    \r\n      }\r\n\r\n\t});\r\n\r\n\treturn ViewBase;\r\n});\r\n\ndefine('skylark-domx-plugins-repeaters/views/linear-view',[\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-eventer\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-geom\",\r\n    \"skylark-domx-query\",\r\n    \"../view-type-registry\",   \r\n    \"./view-base\"\r\n], function(langx, browser, eventer, noder, geom, $, viewTypeRegistry, ViewBase) {\r\n\r\n\r\n  var LinearView = ViewBase.inherit({\r\n    klassName : \"LinearView\",\r\n\r\n    options: {\r\n        alignment: 'left',\r\n        infiniteScroll: false,\r\n        itemRendered: null,\r\n        noItemsHTML: 'no items found',\r\n        selectable: false,\r\n\r\n        template : '<ul class=\"clearfix repeater-linear\" data-container=\"true\" data-infinite=\"true\" data-preserve=\"shallow\"></ul>',\r\n        item : {\r\n            template: '<li class=\"repeater-item\"><img  src=\"{{ThumbnailImage}}\" class=\"thumb\"/><h4 class=\"title\">{{name}}</h4></div>'\r\n        },\r\n    },\r\n\r\n    //ADDITIONAL METHODS\r\n    clearSelectedItems : function() {\r\n        this.repeater.$canvas.find('.repeater-linear .selectable.selected').removeClass('selected');\r\n    },\r\n\r\n    getSelectedItems : function() {\r\n        var selected = [];\r\n        this.repeater.$canvas.find('.repeater-linear .selectable.selected').each(function() {\r\n            selected.push($(this));\r\n        });\r\n        return selected;\r\n    },\r\n\r\n    setSelectedItems : function(items, force) {\r\n        var selectable = this.options.selectable;\r\n        var self = this;\r\n        var i, $item, l, n;\r\n\r\n        //this function is necessary because lint yells when a function is in a loop\r\n        function compareItemIndex() {\r\n            if (n === items[i].index) {\r\n                $item = $(this);\r\n                return false;\r\n            } else {\r\n                n++;\r\n            }\r\n        }\r\n\r\n        //this function is necessary because lint yells when a function is in a loop\r\n        function compareItemSelector() {\r\n            $item = $(this);\r\n            if ($item.is(items[i].selector)) {\r\n                selectItem($item, items[i].selected);\r\n            }\r\n        }\r\n\r\n        function selectItem($itm, select) {\r\n            select = (select !== undefined) ? select : true;\r\n            if (select) {\r\n                if (!force && selectable !== 'multi') {\r\n                    self.thumbnail_clearSelectedItems();\r\n                }\r\n\r\n                $itm.addClass('selected');\r\n            } else {\r\n                $itm.removeClass('selected');\r\n            }\r\n        }\r\n\r\n        if (!langx.isArray(items)) {\r\n            items = [items];\r\n        }\r\n\r\n        if (force === true || selectable === 'multi') {\r\n            l = items.length;\r\n        } else if (selectable) {\r\n            l = (items.length > 0) ? 1 : 0;\r\n        } else {\r\n            l = 0;\r\n        }\r\n\r\n        for (i = 0; i < l; i++) {\r\n            if (items[i].index !== undefined) {\r\n                $item = $();\r\n                n = 0;\r\n                this.repeater.$canvas.find('.repeater-linear .selectable').each(compareItemIndex);\r\n                if ($item.length > 0) {\r\n                    selectItem($item, items[i].selected);\r\n                }\r\n\r\n            } else if (items[i].selector) {\r\n                this.repeater.$canvas.find('.repeater-linear .selectable').each(compareItemSelector);\r\n            }\r\n        }\r\n    },\r\n\r\n    selected: function() {\r\n        var infScroll = this.options.infiniteScroll;\r\n        var opts;\r\n        if (infScroll) {\r\n            opts = (typeof infScroll === 'object') ? infScroll : {};\r\n            this.infiniteScrolling(true, opts);\r\n        }\r\n    },\r\n    before: function(helpers) {\r\n        var alignment = this.options.alignment;\r\n        var $cont = this.repeater.$canvas.find('.repeater-linear');\r\n        var data = helpers.data;\r\n        var response = {};\r\n        var $empty, validAlignments;\r\n\r\n        if ($cont.length < 1) {\r\n            $cont = $(this.options.template);\r\n\r\n            response.item = $cont;\r\n        } else {\r\n            response.action = 'none';\r\n        }\r\n\r\n        return response;\r\n    },\r\n\r\n    renderItem: function(helpers) {\r\n        var selectable = this.options.selectable;\r\n        var selected = 'selected';\r\n        var self = this;\r\n        var $item = this._create$Item(this.options.item.template,helpers.subset[helpers.index]);\r\n\r\n        $item.data('item_data', helpers.data.items[helpers.index]);\r\n\r\n        if (selectable) {\r\n            $item.addClass('selectable');\r\n            $item.on('click', function() {\r\n                if (self.isDisabled) return;\r\n\r\n                if (!$item.hasClass(selected)) {\r\n                    if (selectable !== 'multi') {\r\n                        self.repeater.$canvas.find('.repeater-linear .selectable.selected').each(function() {\r\n                            var $itm = $(this);\r\n                            $itm.removeClass(selected);\r\n                            self.repeater.$element.trigger('deselected.lark.repeaterList', $itm);\r\n                        });\r\n                    }\r\n\r\n                    $item.addClass(selected);\r\n                    self.repeater.$element.trigger('selected.lark.repeaterList', $item);\r\n                } else {\r\n                    $item.removeClass(selected);\r\n                    self.repeater.$element.trigger('deselected.lark.repeaterList', $item);\r\n                }\r\n            });\r\n        }\r\n\r\n        helpers.container.append($item);\r\n\r\n\r\n        if (this.options.itemRendered) {\r\n            this.options.itemRendered({\r\n                container: helpers.container,\r\n                item: $thumbnail,\r\n                itemData: helpers.subset[helpers.index]\r\n            }, function() {});\r\n        }\r\n\r\n        return false;\r\n    }\r\n    \r\n  });\r\n\r\n\r\n    viewTypeRegistry[\"linear\"] = {\r\n        name : \"linear\",\r\n        ctor : LinearView\r\n    };\r\n\r\n    return LinearView;\r\n    \r\n});\n/* global define, window, document, DocumentTouch */\r\n\r\ndefine('skylark-domx-plugins-repeaters/views/slider-view',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-query\",\r\n   \"../view-type-registry\",   \r\n   \"./view-base\"\r\n],function (langx,noder,$,viewTypeRegistry,ViewBase) {\r\n  'use strict'\r\n\r\n  var SliderView = ViewBase.inherit({\r\n    klassName : \"SliderView\",\r\n\r\n    options: {\r\n      // The Id, element or querySelector of the repeater view:\r\n      container: null,\r\n      // The tag name, Id, element or querySelector of the slides container:\r\n      slidesContainer: 'div.slides',\r\n      // The tag name, Id, element or querySelector of the title element:\r\n      titleElement: 'h3',\r\n      // The class to add when the gallery is visible:\r\n      displayClass: 'slider-display',\r\n      // The class to add when the gallery only displays one element:\r\n      singleClass: 'slider-single',\r\n      // The class to add when the left edge has been reached:\r\n      leftEdgeClass: 'slider-left',\r\n      // The class to add when the right edge has been reached:\r\n      rightEdgeClass: 'slider-right',\r\n      // The class to add when the automatic slideshow is active:\r\n      playingClass: 'slider-playing',\r\n      // The class for all slides:\r\n      slideClass: 'slide',\r\n      // The slide class for loading elements:\r\n      slideLoadingClass: 'slide-loading',\r\n      // The slide class for elements that failed to load:\r\n      slideErrorClass: 'slide-error',\r\n      // The class for the content element loaded into each slide:\r\n      slideContentClass: 'slide-content',\r\n      // The class for the \"toggle\" control:\r\n      toggleClass: 'toggle',\r\n      // The class for the \"prev\" control:\r\n      prevClass: 'prev',\r\n      // The class for the \"next\" control:\r\n      nextClass: 'next',\r\n      // The class for the \"close\" control:\r\n      closeClass: 'close',\r\n\r\n      // The class for the \"play-pause\" toggle control:\r\n      playPauseClass: 'play-pause',\r\n      // The list object property (or data attribute) with the object type:\r\n      //--- typeProperty: 'type',\r\n      // The list object property (or data attribute) with the object title:\r\n      //--- titleProperty: 'title',\r\n      // The list object property (or data attribute) with the object alt text:\r\n      //--- altTextProperty: 'alt',\r\n      // The list object property (or data attribute) with the object URL:\r\n      //--- urlProperty: 'href',\r\n      // The list object property (or data attribute) with the object srcset URL(s):\r\n      //--- srcsetProperty: 'urlset',\r\n      // The gallery listens for transitionend events before triggering the\r\n      // opened and closed events, unless the following option is set to false:\r\n      displayTransition: true,\r\n      // Defines if the gallery slides are cleared from the gallery modal,\r\n      // or reused for the next gallery initialization:\r\n      clearSlides: true,\r\n      // Defines if images should be stretched to fill the available space,\r\n      // while maintaining their aspect ratio (will only be enabled for browsers\r\n      // supporting background-size=\"contain\", which excludes IE < 9).\r\n      // Set to \"cover\", to make images cover all available space (requires\r\n      // support for background-size=\"cover\", which excludes IE < 9):\r\n      //--- stretchImages: false,\r\n      // Toggle the controls on pressing the Return key:\r\n      toggleControlsOnReturn: true,\r\n      // Toggle the controls on slide click:\r\n      toggleControlsOnSlideClick: true,\r\n      // Toggle the automatic slideshow interval on pressing the Space key:\r\n      toggleSlideshowOnSpace: true,\r\n      // Navigate the gallery by pressing left and right on the keyboard:\r\n      enableKeyboardNavigation: true,\r\n      // Close the gallery on pressing the Esc key:\r\n      closeOnEscape: true,\r\n      // Close the gallery when clicking on an empty slide area:\r\n      closeOnSlideClick: true,\r\n      // Close the gallery by swiping up or down:\r\n      closeOnSwipeUpOrDown: true,\r\n      // Emulate touch events on mouse-pointer devices such as desktop browsers:\r\n      emulateTouchEvents: true,\r\n      // Stop touch events from bubbling up to ancestor elements of the Gallery:\r\n      stopTouchEventsPropagation: false,\r\n      // Hide the page scrollbars:\r\n      hidePageScrollbars: false,\r\n      // Stops any touches on the container from scrolling the page:\r\n      disableScroll: true,\r\n      // Carousel mode (shortcut for carousel specific options):\r\n      carousel: false,\r\n      // Allow continuous navigation, moving from last to first\r\n      // and from first to last slide:\r\n      continuous: true,\r\n      // Remove elements outside of the preload range from the DOM:\r\n      unloadElements: true,\r\n      // Start with the automatic slideshow:\r\n      startSlideshow: true,\r\n      // Delay in milliseconds between slides for the automatic slideshow:\r\n      slideshowInterval: 5000,\r\n      // The starting index as integer.\r\n      // Can also be an object of the given list,\r\n      // or an equal object with the same url property:\r\n      index: 0,\r\n      // The number of elements to load around the current index:\r\n      preloadRange: 2,\r\n      // The transition speed between slide changes in milliseconds:\r\n      transitionSpeed: 400,\r\n      // The transition speed for automatic slide changes, set to an integer\r\n      // greater 0 to override the default transition speed:\r\n      slideshowTransitionSpeed: undefined,\r\n      // The event object for which the default action will be canceled\r\n      // on Gallery initialization (e.g. the click event to open the Gallery):\r\n      event: undefined,\r\n\r\n      // Callback function executed on slide change.\r\n      // Is called with the gallery instance as \"this\" object and the\r\n      // current index and slide as arguments:\r\n      onslide: undefined,\r\n      // Callback function executed after the slide change transition.\r\n      // Is called with the gallery instance as \"this\" object and the\r\n      // current index and slide as arguments:\r\n      onslideend: undefined,\r\n      // Callback function executed on slide content load.\r\n      // Is called with the gallery instance as \"this\" object and the\r\n      // slide index and slide element as arguments:\r\n      onslidecomplete: undefined,\r\n\r\n\r\n      // The tag name, Id, element or querySelector of the indicator container:\r\n      indicatorContainer: 'ol',\r\n      // The class for the active indicator:\r\n      activeIndicatorClass: 'active',\r\n      // The list object property (or data attribute) with the thumbnail URL,\r\n      // used as alternative to a thumbnail child element:\r\n      thumbnailProperty: 'ThumbnailImage',\r\n      // Defines if the gallery indicators should display a thumbnail:\r\n      thumbnailIndicators: true,\r\n\r\n      indicators : {\r\n            // Hide the page scrollbars:\r\n          hidePageScrollbars: false,\r\n\r\n          // The tag name, Id, element or querySelector of the indicator container:\r\n          indicatorContainer: 'ol',\r\n          // The class for the active indicator:\r\n          activeIndicatorClass: 'active',\r\n          // The list object property (or data attribute) with the thumbnail URL,\r\n          // used as alternative to a thumbnail child element:\r\n          thumbnailProperty: 'thumbnail',\r\n          // Defines if the gallery indicators should display a thumbnail:\r\n          thumbnailIndicators: true\r\n      },\r\n\r\n\r\n\r\n      \"template\" :'<div class=\"repeater-slider\">' + \r\n                  '<div class=\"slides\"></div>' +\r\n                  '<h3 class=\"title\"></h3>' +\r\n                  '<a class=\"prev\">‹</a>' +\r\n                  '<a class=\"next\">›</a>' +\r\n                  '<a class=\"play-pause\"></a>' +\r\n                  '<ol class=\"indicator\"></ol>' +\r\n                  \"</div>\",\r\n\r\n      \"item\" : {\r\n        \"template\" : '<img height=\"75\" src=\"{{ThumbnailImage}}\" width=\"65\"/>' \r\n      }\r\n    },\r\n\r\n    /*---\r\n    carouselOptions: {\r\n      hidePageScrollbars: false,\r\n      toggleControlsOnReturn: false,\r\n      toggleSlideshowOnSpace: false,\r\n      enableKeyboardNavigation: false,\r\n      closeOnEscape: false,\r\n      closeOnSlideClick: false,\r\n      closeOnSwipeUpOrDown: false,\r\n      disableScroll: false,\r\n      startSlideshow: true\r\n    },\r\n    */\r\n    \r\n    // Detect touch, transition, transform and background-size support:\r\n    support: (function (element) {\r\n      var support = {\r\n        touch:\r\n          window.ontouchstart !== undefined ||\r\n          (window.DocumentTouch && document instanceof DocumentTouch)\r\n      }\r\n      var transitions = {\r\n        webkitTransition: {\r\n          end: 'webkitTransitionEnd',\r\n          prefix: '-webkit-'\r\n        },\r\n        MozTransition: {\r\n          end: 'transitionend',\r\n          prefix: '-moz-'\r\n        },\r\n        OTransition: {\r\n          end: 'otransitionend',\r\n          prefix: '-o-'\r\n        },\r\n        transition: {\r\n          end: 'transitionend',\r\n          prefix: ''\r\n        }\r\n      }\r\n      var prop\r\n      for (prop in transitions) {\r\n        if (\r\n          transitions.hasOwnProperty(prop) &&\r\n          element.style[prop] !== undefined\r\n        ) {\r\n          support.transition = transitions[prop]\r\n          support.transition.name = prop\r\n          break\r\n        }\r\n      }\r\n      function elementTests () {\r\n        var transition = support.transition\r\n        var prop\r\n        var translateZ\r\n        document.body.appendChild(element)\r\n        if (transition) {\r\n          prop = transition.name.slice(0, -9) + 'ransform'\r\n          if (element.style[prop] !== undefined) {\r\n            element.style[prop] = 'translateZ(0)'\r\n            translateZ = window\r\n              .getComputedStyle(element)\r\n              .getPropertyValue(transition.prefix + 'transform')\r\n            support.transform = {\r\n              prefix: transition.prefix,\r\n              name: prop,\r\n              translate: true,\r\n              translateZ: !!translateZ && translateZ !== 'none'\r\n            }\r\n          }\r\n        }\r\n        if (element.style.backgroundSize !== undefined) {\r\n          support.backgroundSize = {}\r\n          element.style.backgroundSize = 'contain'\r\n          support.backgroundSize.contain =\r\n            window\r\n              .getComputedStyle(element)\r\n              .getPropertyValue('background-size') === 'contain'\r\n          element.style.backgroundSize = 'cover'\r\n          support.backgroundSize.cover =\r\n            window\r\n              .getComputedStyle(element)\r\n              .getPropertyValue('background-size') === 'cover'\r\n        }\r\n        document.body.removeChild(element)\r\n      }\r\n      if (document.body) {\r\n        elementTests()\r\n      } else {\r\n        $(document).on('DOMContentLoaded', elementTests)\r\n      }\r\n      return support\r\n      // Test element, has to be standard HTML and must not be hidden\r\n      // for the CSS3 tests using window.getComputedStyle to be applicable:\r\n    })(document.createElement('div')),\r\n\r\n    requestAnimationFrame:\r\n      window.requestAnimationFrame ||\r\n      window.webkitRequestAnimationFrame ||\r\n      window.mozRequestAnimationFrame,\r\n\r\n    cancelAnimationFrame:\r\n      window.cancelAnimationFrame ||\r\n      window.webkitCancelRequestAnimationFrame ||\r\n      window.webkitCancelAnimationFrame ||\r\n      window.mozCancelAnimationFrame,\r\n\r\n    render: function (helper){\r\n      //this.overrided(repeater,options);\r\n\r\n      this.container = this.repeater.$canvas.find('.repeater-slider');\r\n\r\n      if (this.container.length < 1) {\r\n        this.container = $(this.options.template);\r\n        this.repeater.$canvas.append(this.container);\r\n      } \r\n      this.list = helper.data.items;\r\n      //this.options.container = helper.container;\r\n      this.num = this.list.length;\r\n\r\n      this.initStartIndex()\r\n      this.initView();\r\n\r\n      this.initEventListeners()\r\n      // Load the slide at the given index:\r\n      this.onslide(this.index)\r\n      // Manually trigger the slideend event for the initial slide:\r\n      this.ontransitionend()\r\n      // Start the automatic slideshow if applicable:\r\n      if (this.options.startSlideshow) {\r\n        this.play()\r\n      }\r\n\r\n    },\r\n\r\n    slide: function (to, speed) {\r\n      window.clearTimeout(this.timeout)\r\n      var index = this.index\r\n      var direction\r\n      var naturalDirection\r\n      var diff\r\n      if (index === to || this.num === 1) {\r\n        return\r\n      }\r\n      if (!speed) {\r\n        speed = this.options.transitionSpeed\r\n      }\r\n      if (this.support.transform) {\r\n        if (!this.options.continuous) {\r\n          to = this.circle(to)\r\n        }\r\n        // 1: backward, -1: forward:\r\n        direction = Math.abs(index - to) / (index - to)\r\n        // Get the actual position of the slide:\r\n        if (this.options.continuous) {\r\n          naturalDirection = direction\r\n          direction = -this.positions[this.circle(to)] / this.slideWidth\r\n          // If going forward but to < index, use to = slides.length + to\r\n          // If going backward but to > index, use to = -slides.length + to\r\n          if (direction !== naturalDirection) {\r\n            to = -direction * this.num + to\r\n          }\r\n        }\r\n        diff = Math.abs(index - to) - 1\r\n        // Move all the slides between index and to in the right direction:\r\n        while (diff) {\r\n          diff -= 1\r\n          this.move(\r\n            this.circle((to > index ? to : index) - diff - 1),\r\n            this.slideWidth * direction,\r\n            0\r\n          )\r\n        }\r\n        to = this.circle(to)\r\n        this.move(index, this.slideWidth * direction, speed)\r\n        this.move(to, 0, speed)\r\n        if (this.options.continuous) {\r\n          this.move(\r\n            this.circle(to - direction),\r\n            -(this.slideWidth * direction),\r\n            0\r\n          )\r\n        }\r\n      } else {\r\n        to = this.circle(to)\r\n        this.animate(index * -this.slideWidth, to * -this.slideWidth, speed)\r\n      }\r\n      this.onslide(to)\r\n    },\r\n\r\n    getIndex: function () {\r\n      return this.index\r\n    },\r\n\r\n    getNumber: function () {\r\n      return this.num\r\n    },\r\n\r\n    prev: function () {\r\n      if (this.options.continuous || this.index) {\r\n        this.slide(this.index - 1)\r\n      }\r\n    },\r\n\r\n    next: function () {\r\n      if (this.options.continuous || this.index < this.num - 1) {\r\n        this.slide(this.index + 1)\r\n      }\r\n    },\r\n\r\n    circle: function (index) {\r\n      // Always return a number inside of the slides index range:\r\n      return (this.num + index % this.num) % this.num\r\n    },\r\n\r\n    move: function (index, dist, speed) {\r\n      this.translateX(index, dist, speed)\r\n      this.positions[index] = dist\r\n    },\r\n\r\n    translate: function (index, x, y, speed) {\r\n      var style = this.slides[index].style\r\n      var transition = this.support.transition\r\n      var transform = this.support.transform\r\n      style[transition.name + 'Duration'] = speed + 'ms'\r\n      style[transform.name] =\r\n        'translate(' +\r\n        x +\r\n        'px, ' +\r\n        y +\r\n        'px)' +\r\n        (transform.translateZ ? ' translateZ(0)' : '')\r\n    },\r\n\r\n    translateX: function (index, x, speed) {\r\n      this.translate(index, x, 0, speed)\r\n    },\r\n\r\n    translateY: function (index, y, speed) {\r\n      this.translate(index, 0, y, speed)\r\n    },\r\n\r\n    animate: function (from, to, speed) {\r\n      if (!speed) {\r\n        this.slidesContainer[0].style.left = to + 'px'\r\n        return\r\n      }\r\n      var that = this\r\n      var start = new Date().getTime()\r\n      var timer = window.setInterval(function () {\r\n        var timeElap = new Date().getTime() - start\r\n        if (timeElap > speed) {\r\n          that.slidesContainer[0].style.left = to + 'px'\r\n          that.ontransitionend()\r\n          window.clearInterval(timer)\r\n          return\r\n        }\r\n        that.slidesContainer[0].style.left =\r\n          (to - from) * (Math.floor(timeElap / speed * 100) / 100) + from + 'px'\r\n      }, 4)\r\n    },\r\n\r\n    play: function (time) {\r\n      var that = this\r\n      window.clearTimeout(this.timeout)\r\n      this.interval = time || this.options.slideshowInterval;\r\n      this.timeout = this.setTimeout(\r\n        (!this.requestAnimationFrame && this.slide) ||\r\n          function (to, speed) {\r\n            that.animationFrameId = that.requestAnimationFrame.call(\r\n              window,\r\n              function () {\r\n                that.slide(to, speed)\r\n              }\r\n            )\r\n          },\r\n        [this.index + 1, this.options.slideshowTransitionSpeed],\r\n        this.interval\r\n      )\r\n\r\n      this.container.addClass(this.options.playingClass)\r\n    },\r\n\r\n    pause: function () {\r\n      window.clearTimeout(this.timeout)\r\n      this.interval = null\r\n      if (this.cancelAnimationFrame) {\r\n        this.cancelAnimationFrame.call(window, this.animationFrameId)\r\n        this.animationFrameId = null\r\n      }\r\n      this.container.removeClass(this.options.playingClass)\r\n    },\r\n\r\n    add: function (list) {\r\n      var i\r\n      if (!list.concat) {\r\n        // Make a real array out of the list to add:\r\n        list = Array.prototype.slice.call(list)\r\n      }\r\n      if (!this.list.concat) {\r\n        // Make a real array out of the Gallery list:\r\n        this.list = Array.prototype.slice.call(this.list)\r\n      }\r\n      this.list = this.list.concat(list)\r\n      this.num = this.list.length\r\n      if (this.num > 2 && this.options.continuous === null) {\r\n        this.options.continuous = true\r\n        this.container.removeClass(this.options.leftEdgeClass)\r\n      }\r\n      this.container\r\n        .removeClass(this.options.rightEdgeClass)\r\n        .removeClass(this.options.singleClass)\r\n      for (i = this.num - list.length; i < this.num; i += 1) {\r\n        this.addSlide(i)\r\n        this.positionSlide(i)\r\n      }\r\n      this.positions.length = this.num\r\n      this.initSlides(true)\r\n    },\r\n\r\n    resetSlides: function () {\r\n      this.slidesContainer.empty()\r\n      this.unloadAllSlides()\r\n      this.slides = []\r\n\r\n      this.indicatorContainer.empty();\r\n      this.indicators = [];\r\n\r\n    },\r\n\r\n    preventDefault: function (event) {\r\n      if (event.preventDefault) {\r\n        event.preventDefault()\r\n      } else {\r\n        event.returnValue = false\r\n      }\r\n    },\r\n\r\n    stopPropagation: function (event) {\r\n      if (event.stopPropagation) {\r\n        event.stopPropagation()\r\n      } else {\r\n        event.cancelBubble = true\r\n      }\r\n    },\r\n\r\n    onresize: function () {\r\n      this.initSlides(true)\r\n    },\r\n\r\n    onmousedown: function (event) {\r\n      // Trigger on clicks of the left mouse button only\r\n      // and exclude video & audio elements:\r\n      if (\r\n        event.which &&\r\n        event.which === 1 &&\r\n        event.target.nodeName !== 'VIDEO' &&\r\n        event.target.nodeName !== 'AUDIO'\r\n      ) {\r\n        // Preventing the default mousedown action is required\r\n        // to make touch emulation work with Firefox:\r\n        event.preventDefault()\r\n        ;(event.originalEvent || event).touches = [\r\n          {\r\n            pageX: event.pageX,\r\n            pageY: event.pageY\r\n          }\r\n        ]\r\n        this.ontouchstart(event)\r\n      }\r\n    },\r\n\r\n    onmousemove: function (event) {\r\n      if (this.touchStart) {\r\n        ;(event.originalEvent || event).touches = [\r\n          {\r\n            pageX: event.pageX,\r\n            pageY: event.pageY\r\n          }\r\n        ]\r\n        this.ontouchmove(event)\r\n      }\r\n    },\r\n\r\n    onmouseup: function (event) {\r\n      if (this.touchStart) {\r\n        this.ontouchend(event)\r\n        delete this.touchStart\r\n      }\r\n    },\r\n\r\n    onmouseout: function (event) {\r\n      if (this.touchStart) {\r\n        var target = event.target\r\n        var related = event.relatedTarget\r\n        if (!related || (related !== target && !noder.contains(target, related))) {\r\n          this.onmouseup(event)\r\n        }\r\n      }\r\n    },\r\n\r\n    ontouchstart: function (event) {\r\n      if (this.options.stopTouchEventsPropagation) {\r\n        this.stopPropagation(event)\r\n      }\r\n      // jQuery doesn't copy touch event properties by default,\r\n      // so we have to access the originalEvent object:\r\n      var touches = (event.originalEvent || event).touches[0]\r\n      this.touchStart = {\r\n        // Remember the initial touch coordinates:\r\n        x: touches.pageX,\r\n        y: touches.pageY,\r\n        // Store the time to determine touch duration:\r\n        time: Date.now()\r\n      }\r\n      // Helper variable to detect scroll movement:\r\n      this.isScrolling = undefined\r\n      // Reset delta values:\r\n      this.touchDelta = {}\r\n    },\r\n\r\n    ontouchmove: function (event) {\r\n      if (this.options.stopTouchEventsPropagation) {\r\n        this.stopPropagation(event)\r\n      }\r\n      // jQuery doesn't copy touch event properties by default,\r\n      // so we have to access the originalEvent object:\r\n      var touches = (event.originalEvent || event).touches[0]\r\n      var scale = (event.originalEvent || event).scale\r\n      var index = this.index\r\n      var touchDeltaX\r\n      var indices\r\n      // Ensure this is a one touch swipe and not, e.g. a pinch:\r\n      if (touches.length > 1 || (scale && scale !== 1)) {\r\n        return\r\n      }\r\n      if (this.options.disableScroll) {\r\n        event.preventDefault()\r\n      }\r\n      // Measure change in x and y coordinates:\r\n      this.touchDelta = {\r\n        x: touches.pageX - this.touchStart.x,\r\n        y: touches.pageY - this.touchStart.y\r\n      }\r\n      touchDeltaX = this.touchDelta.x\r\n      // Detect if this is a vertical scroll movement (run only once per touch):\r\n      if (this.isScrolling === undefined) {\r\n        this.isScrolling =\r\n          this.isScrolling ||\r\n          Math.abs(touchDeltaX) < Math.abs(this.touchDelta.y)\r\n      }\r\n      if (!this.isScrolling) {\r\n        // Always prevent horizontal scroll:\r\n        event.preventDefault()\r\n        // Stop the slideshow:\r\n        window.clearTimeout(this.timeout)\r\n        if (this.options.continuous) {\r\n          indices = [this.circle(index + 1), index, this.circle(index - 1)]\r\n        } else {\r\n          // Increase resistance if first slide and sliding left\r\n          // or last slide and sliding right:\r\n          this.touchDelta.x = touchDeltaX =\r\n            touchDeltaX /\r\n            ((!index && touchDeltaX > 0) ||\r\n            (index === this.num - 1 && touchDeltaX < 0)\r\n              ? Math.abs(touchDeltaX) / this.slideWidth + 1\r\n              : 1)\r\n          indices = [index]\r\n          if (index) {\r\n            indices.push(index - 1)\r\n          }\r\n          if (index < this.num - 1) {\r\n            indices.unshift(index + 1)\r\n          }\r\n        }\r\n        while (indices.length) {\r\n          index = indices.pop()\r\n          this.translateX(index, touchDeltaX + this.positions[index], 0)\r\n        }\r\n      } else {\r\n        this.translateY(index, this.touchDelta.y + this.positions[index], 0)\r\n      }\r\n    },\r\n\r\n    ontouchend: function (event) {\r\n      if (this.options.stopTouchEventsPropagation) {\r\n        this.stopPropagation(event)\r\n      }\r\n      var index = this.index\r\n      var speed = this.options.transitionSpeed\r\n      var slideWidth = this.slideWidth\r\n      var isShortDuration = Number(Date.now() - this.touchStart.time) < 250\r\n      // Determine if slide attempt triggers next/prev slide:\r\n      var isValidSlide =\r\n        (isShortDuration && Math.abs(this.touchDelta.x) > 20) ||\r\n        Math.abs(this.touchDelta.x) > slideWidth / 2\r\n      // Determine if slide attempt is past start or end:\r\n      var isPastBounds =\r\n        (!index && this.touchDelta.x > 0) ||\r\n        (index === this.num - 1 && this.touchDelta.x < 0)\r\n      var isValidClose =\r\n        !isValidSlide &&\r\n        this.options.closeOnSwipeUpOrDown &&\r\n        ((isShortDuration && Math.abs(this.touchDelta.y) > 20) ||\r\n          Math.abs(this.touchDelta.y) > this.slideHeight / 2)\r\n      var direction\r\n      var indexForward\r\n      var indexBackward\r\n      var distanceForward\r\n      var distanceBackward\r\n      if (this.options.continuous) {\r\n        isPastBounds = false\r\n      }\r\n      // Determine direction of swipe (true: right, false: left):\r\n      direction = this.touchDelta.x < 0 ? -1 : 1\r\n      if (!this.isScrolling) {\r\n        if (isValidSlide && !isPastBounds) {\r\n          indexForward = index + direction\r\n          indexBackward = index - direction\r\n          distanceForward = slideWidth * direction\r\n          distanceBackward = -slideWidth * direction\r\n          if (this.options.continuous) {\r\n            this.move(this.circle(indexForward), distanceForward, 0)\r\n            this.move(this.circle(index - 2 * direction), distanceBackward, 0)\r\n          } else if (indexForward >= 0 && indexForward < this.num) {\r\n            this.move(indexForward, distanceForward, 0)\r\n          }\r\n          this.move(index, this.positions[index] + distanceForward, speed)\r\n          this.move(\r\n            this.circle(indexBackward),\r\n            this.positions[this.circle(indexBackward)] + distanceForward,\r\n            speed\r\n          )\r\n          index = this.circle(indexBackward)\r\n          this.onslide(index)\r\n        } else {\r\n          // Move back into position\r\n          if (this.options.continuous) {\r\n            this.move(this.circle(index - 1), -slideWidth, speed)\r\n            this.move(index, 0, speed)\r\n            this.move(this.circle(index + 1), slideWidth, speed)\r\n          } else {\r\n            if (index) {\r\n              this.move(index - 1, -slideWidth, speed)\r\n            }\r\n            this.move(index, 0, speed)\r\n            if (index < this.num - 1) {\r\n              this.move(index + 1, slideWidth, speed)\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n          // Move back into position\r\n          this.translateY(index, 0, speed)\r\n      }\r\n    },\r\n\r\n    ontouchcancel: function (event) {\r\n      if (this.touchStart) {\r\n        this.ontouchend(event)\r\n        delete this.touchStart\r\n      }\r\n    },\r\n\r\n    ontransitionend: function (event) {\r\n      var slide = this.slides[this.index]\r\n      if (!event || slide === event.target) {\r\n        if (this.interval) {\r\n          this.play()\r\n        }\r\n        this.setTimeout(this.options.onslideend, [this.index, slide])\r\n      }\r\n    },\r\n\r\n    onkeydown: function (event) {\r\n      switch (event.which || event.keyCode) {\r\n        case 13: // Return\r\n          if (this.options.toggleControlsOnReturn) {\r\n            this.preventDefault(event)\r\n            this.toggleControls()\r\n          }\r\n          break\r\n        case 27: // Esc\r\n          break\r\n        case 32: // Space\r\n          if (this.options.toggleSlideshowOnSpace) {\r\n            this.preventDefault(event)\r\n            this.toggleSlideshow()\r\n          }\r\n          break\r\n        case 37: // Left\r\n          if (this.options.enableKeyboardNavigation) {\r\n            this.preventDefault(event)\r\n            this.prev()\r\n          }\r\n          break\r\n        case 39: // Right\r\n          if (this.options.enableKeyboardNavigation) {\r\n            this.preventDefault(event)\r\n            this.next()\r\n          }\r\n          break\r\n      }\r\n    },\r\n\r\n    handleClick: function (event) {\r\n      var options = this.options\r\n      var target = event.target || event.srcElement\r\n      var parent = target.parentNode\r\n\r\n      if (parent === this.indicatorContainer[0]) {\r\n        // Click on indicator element\r\n        this.preventDefault(event)\r\n        this.slide(this.getNodeIndex(target))\r\n      } else if (parent.parentNode === this.indicatorContainer[0]) {\r\n        // Click on indicator child element\r\n        this.preventDefault(event)\r\n        this.slide(this.getNodeIndex(parent))\r\n      } else {\r\n        function isTarget (className) {\r\n          return $(target).hasClass(className) || $(parent).hasClass(className)\r\n        }\r\n\r\n\r\n        if (isTarget(options.toggleClass)) {\r\n          // Click on \"toggle\" control\r\n          this.preventDefault(event)\r\n          this.toggleControls()\r\n        } else if (isTarget(options.prevClass)) {\r\n          // Click on \"prev\" control\r\n          this.preventDefault(event)\r\n          this.prev()\r\n        } else if (isTarget(options.nextClass)) {\r\n          // Click on \"next\" control\r\n          this.preventDefault(event)\r\n          this.next()\r\n        } else if (isTarget(options.playPauseClass)) {\r\n          // Click on \"play-pause\" control\r\n          this.preventDefault(event)\r\n          this.toggleSlideshow()\r\n        } else if (parent === this.slidesContainer[0]) {\r\n          // Click on slide background\r\n          if (options.toggleControlsOnSlideClick) {\r\n            this.preventDefault(event)\r\n            this.toggleControls()\r\n          }\r\n        } else if (\r\n          parent.parentNode &&\r\n          parent.parentNode === this.slidesContainer[0]\r\n        ) {\r\n          // Click on displayed element\r\n          if (options.toggleControlsOnSlideClick) {\r\n            this.preventDefault(event)\r\n            this.toggleControls()\r\n          }\r\n        }\r\n      }\r\n    },\r\n\r\n    onclick: function (event) {\r\n      if (\r\n        this.options.emulateTouchEvents &&\r\n        this.touchDelta &&\r\n        (Math.abs(this.touchDelta.x) > 20 || Math.abs(this.touchDelta.y) > 20)\r\n      ) {\r\n        delete this.touchDelta\r\n        return\r\n      }\r\n      return this.handleClick(event)\r\n    },\r\n\r\n    updateEdgeClasses: function (index) {\r\n      if (!index) {\r\n        this.container.addClass(this.options.leftEdgeClass)\r\n      } else {\r\n        this.container.removeClass(this.options.leftEdgeClass)\r\n      }\r\n      if (index === this.num - 1) {\r\n        this.container.addClass(this.options.rightEdgeClass)\r\n      } else {\r\n        this.container.removeClass(this.options.rightEdgeClass)\r\n      }\r\n    },\r\n\r\n    handleSlide: function (index) {\r\n      if (!this.options.continuous) {\r\n        this.updateEdgeClasses(index)\r\n      }\r\n      this.loadElements(index)\r\n      if (this.options.unloadElements) {\r\n        this.unloadElements(index)\r\n      }\r\n      this.setTitle(index)\r\n\r\n      this.setActiveIndicator(index)\r\n\r\n    },\r\n\r\n    onslide: function (index) {\r\n      this.index = index\r\n      this.handleSlide(index)\r\n      this.setTimeout(this.options.onslide, [index, this.slides[index]])\r\n    },\r\n\r\n    setTitle: function (index) {\r\n      var firstChild = this.slides[index].firstChild\r\n      var text = firstChild.title || firstChild.alt\r\n      var titleElement = this.titleElement\r\n      if (titleElement.length) {\r\n        this.titleElement.empty()\r\n        if (text) {\r\n          titleElement[0].appendChild(document.createTextNode(text))\r\n        }\r\n      }\r\n    },\r\n\r\n    setTimeout: function (func, args, wait) {\r\n      var that = this\r\n      return (\r\n        func &&\r\n        window.setTimeout(function () {\r\n          func.apply(that, args || [])\r\n        }, wait || 0)\r\n      )\r\n    },\r\n\r\n    createElement: function (obj, callback) {\r\n      var $item = this._create$Item(this.options.item.template,obj);\r\n      $item.find(\"img\").on('load error', callback);\r\n\r\n      $item.addClass(this.options.slideContentClass);\r\n      return $item;\r\n    },\r\n\r\n    loadElement: function (index) {\r\n      if (!this.elements[index]) {\r\n        if (this.slides[index].firstChild) {\r\n          this.elements[index] = $(this.slides[index]).hasClass(\r\n            this.options.slideErrorClass\r\n          )\r\n            ? 3\r\n            : 2\r\n        } else {\r\n          this.elements[index] = 1 // Loading\r\n          $(this.slides[index]).append(            \r\n            this.createElement(this.list[index], this.proxyListener)\r\n          );\r\n          //$(this.slides[index]).addClass(this.options.slideLoadingClass).append(            \r\n          //  this.createElement(this.list[index], this.proxyListener)\r\n          //);\r\n        }\r\n      }\r\n    },\r\n\r\n    loadElements: function (index) {\r\n      var limit = Math.min(this.num, this.options.preloadRange * 2 + 1)\r\n      var j = index\r\n      var i\r\n      for (i = 0; i < limit; i += 1) {\r\n        // First load the current slide element (0),\r\n        // then the next one (+1),\r\n        // then the previous one (-2),\r\n        // then the next after next (+2), etc.:\r\n        j += i * (i % 2 === 0 ? -1 : 1)\r\n        // Connect the ends of the list to load slide elements for\r\n        // continuous navigation:\r\n        j = this.circle(j)\r\n        this.loadElement(j)\r\n      }\r\n    },\r\n\r\n    unloadElements: function (index) {\r\n      var i, diff\r\n      for (i in this.elements) {\r\n        if (this.elements.hasOwnProperty(i)) {\r\n          diff = Math.abs(index - i)\r\n          if (\r\n            diff > this.options.preloadRange &&\r\n            diff + this.options.preloadRange < this.num\r\n          ) {\r\n            this.unloadSlide(i)\r\n            delete this.elements[i]\r\n          }\r\n        }\r\n      }\r\n    },\r\n\r\n\r\n    createIndicator: function (obj) {\r\n      var repeater = this.repeater,\r\n          indicator = this.indicatorPrototype.cloneNode(false)\r\n      var title = repeater.getItemProperty(obj,\"title\")\r\n      var thumbnailProperty = this.options.thumbnailProperty\r\n      var thumbnailUrl\r\n      var thumbnail\r\n      if (this.options.thumbnailIndicators) {\r\n        if (thumbnailProperty) {\r\n          thumbnailUrl = repeater.getItemProperty(obj, thumbnailProperty)\r\n        }\r\n        if (thumbnailUrl === undefined) {\r\n          thumbnail = obj.getElementsByTagName && $(obj).find('img')[0]\r\n          if (thumbnail) {\r\n            thumbnailUrl = thumbnail.src\r\n          }\r\n        }\r\n        if (thumbnailUrl) {\r\n          indicator.style.backgroundImage = 'url(\"' + thumbnailUrl + '\")'\r\n        }\r\n      }\r\n      if (title) {\r\n        indicator.title = title;\r\n      }\r\n      return indicator;\r\n    },\r\n\r\n    addIndicator: function (index) {\r\n      if (this.indicatorContainer.length) {\r\n        var indicator = this.createIndicator(this.list[index])\r\n        indicator.setAttribute('data-index', index)\r\n        this.indicatorContainer[0].appendChild(indicator)\r\n        this.indicators.push(indicator)\r\n      }\r\n    },\r\n\r\n    setActiveIndicator: function (index) {\r\n      if (this.indicators) {\r\n        if (this.activeIndicator) {\r\n          this.activeIndicator.removeClass(this.options.activeIndicatorClass)\r\n        }\r\n        this.activeIndicator = $(this.indicators[index])\r\n        this.activeIndicator.addClass(this.options.activeIndicatorClass)\r\n      }\r\n    },\r\n\r\n\r\n    addSlide: function (index) {\r\n      var slide = this.slidePrototype.cloneNode(false)\r\n      slide.setAttribute('data-index', index)\r\n      this.slidesContainer[0].appendChild(slide)\r\n      this.slides.push(slide)\r\n\r\n      this.addIndicator(index)\r\n    },\r\n\r\n    positionSlide: function (index) {\r\n      var slide = this.slides[index]\r\n      slide.style.width = this.slideWidth + 'px'\r\n      if (this.support.transform) {\r\n        slide.style.left = index * -this.slideWidth + 'px'\r\n        this.move(\r\n          index,\r\n          this.index > index\r\n            ? -this.slideWidth\r\n            : this.index < index ? this.slideWidth : 0,\r\n          0\r\n        )\r\n      }\r\n    },\r\n\r\n    initSlides: function (reload) {\r\n      var clearSlides, i\r\n      if (!reload) {\r\n        // indicator\r\n        this.indicatorContainer = this.container.find(\r\n          this.options.indicatorContainer\r\n        )\r\n        if (this.indicatorContainer.length) {\r\n          this.indicatorPrototype = document.createElement('li')\r\n          this.indicators = this.indicatorContainer[0].children\r\n        }\r\n\r\n        this.positions = []\r\n        this.positions.length = this.num\r\n        this.elements = {}\r\n        this.imagePrototype = document.createElement('img')\r\n        this.elementPrototype = document.createElement('div')\r\n        this.slidePrototype = document.createElement('div')\r\n        $(this.slidePrototype).addClass(this.options.slideClass)\r\n        this.slides = this.slidesContainer[0].children\r\n        clearSlides =\r\n          this.options.clearSlides || this.slides.length !== this.num\r\n      }\r\n      this.slideWidth = this.container[0].clientWidth\r\n      this.slideHeight = this.container[0].clientHeight\r\n      this.slidesContainer[0].style.width = this.num * this.slideWidth + 'px'\r\n      if (clearSlides) {\r\n        this.resetSlides()\r\n      }\r\n      for (i = 0; i < this.num; i += 1) {\r\n        if (clearSlides) {\r\n          this.addSlide(i)\r\n        }\r\n        this.positionSlide(i)\r\n      }\r\n      // Reposition the slides before and after the given index:\r\n      if (this.options.continuous && this.support.transform) {\r\n        this.move(this.circle(this.index - 1), -this.slideWidth, 0)\r\n        this.move(this.circle(this.index + 1), this.slideWidth, 0)\r\n      }\r\n      if (!this.support.transform) {\r\n        this.slidesContainer[0].style.left =\r\n          this.index * -this.slideWidth + 'px'\r\n      }\r\n    },\r\n\r\n    unloadSlide: function (index) {\r\n      var slide, firstChild\r\n      slide = this.slides[index]\r\n      firstChild = slide.firstChild\r\n      if (firstChild !== null) {\r\n        slide.removeChild(firstChild)\r\n      }\r\n    },\r\n\r\n    unloadAllSlides: function () {\r\n      var i, len\r\n      for (i = 0, len = this.slides.length; i < len; i++) {\r\n        this.unloadSlide(i)\r\n      }\r\n    },\r\n\r\n    toggleControls: function () {\r\n\r\n      var controlsClass = this.options.controlsClass\r\n      if (this.container.hasClass(controlsClass)) {\r\n        this.container.removeClass(controlsClass)\r\n      } else {\r\n        this.container.addClass(controlsClass)\r\n      }\r\n    },\r\n\r\n    toggleSlideshow: function () {\r\n      if (!this.interval) {\r\n        this.play()\r\n      } else {\r\n        this.pause()\r\n      }\r\n    },\r\n\r\n    getNodeIndex: function (element) {\r\n      return parseInt(element.getAttribute('data-index'), 10)\r\n    },\r\n\r\n    initStartIndex: function () {\r\n      var repeater = this.repeater,\r\n          index = this.options.index;\r\n      var i\r\n      // Check if the index is given as a list object:\r\n      if (index && typeof index !== 'number') {\r\n        for (i = 0; i < this.num; i += 1) {\r\n          if (\r\n            this.list[i] === index || repeater.getItemUrl(this.list[i]) ===  repeater.getItemUrl(index) ) {\r\n            index = i\r\n            break\r\n          }\r\n        }\r\n      }\r\n      // Make sure the index is in the list range:\r\n      this.index = this.circle(parseInt(index, 10) || 0)\r\n    },\r\n\r\n    initEventListeners: function () {\r\n      var that = this\r\n      var slidesContainer = this.slidesContainer\r\n      function proxyListener (event) {\r\n        var type =\r\n          that.support.transition && that.support.transition.end === event.type\r\n            ? 'transitionend'\r\n            : event.type\r\n        that['on' + type](event)\r\n      }\r\n      $(window).on('resize', proxyListener)\r\n      $(document.body).on('keydown', proxyListener)\r\n      this.container.on('click', proxyListener)\r\n      if (this.support.touch) {\r\n        slidesContainer.on(\r\n          'touchstart touchmove touchend touchcancel',\r\n          proxyListener\r\n        )\r\n      } else if (this.options.emulateTouchEvents && this.support.transition) {\r\n        slidesContainer.on(\r\n          'mousedown mousemove mouseup mouseout',\r\n          proxyListener\r\n        )\r\n      }\r\n      if (this.support.transition) {\r\n        slidesContainer.on(this.support.transition.end, proxyListener)\r\n      }\r\n      this.proxyListener = proxyListener\r\n    },\r\n\r\n    destroyEventListeners: function () {\r\n      var slidesContainer = this.slidesContainer\r\n      var proxyListener = this.proxyListener\r\n      $(window).off('resize', proxyListener)\r\n      $(document.body).off('keydown', proxyListener)\r\n      this.container.off('click', proxyListener)\r\n      if (this.support.touch) {\r\n        slidesContainer.off(\r\n          'touchstart touchmove touchend touchcancel',\r\n          proxyListener\r\n        )\r\n      } else if (this.options.emulateTouchEvents && this.support.transition) {\r\n        slidesContainer.off(\r\n          'mousedown mousemove mouseup mouseout',\r\n          proxyListener\r\n        )\r\n      }\r\n      if (this.support.transition) {\r\n        slidesContainer.off(this.support.transition.end, proxyListener)\r\n      }\r\n    },\r\n\r\n\r\n    initView: function () {\r\n      var that = this\r\n\r\n      /*\r\n      this.container = $(this.options.container)\r\n      if (!this.container.length) {\r\n        console.log(\r\n          'blueimp Gallery: Widget container not found.',\r\n          this.options.container\r\n        )\r\n        return false\r\n      }\r\n      */\r\n\r\n      this.slidesContainer = this.container\r\n        .find(this.options.slidesContainer)\r\n        .first()\r\n      if (!this.slidesContainer.length) {\r\n        console.log(\r\n          'blueimp Gallery: Slides container not found.',\r\n          this.options.slidesContainer\r\n        )\r\n        return false\r\n      }\r\n      this.titleElement = this.container.find(this.options.titleElement).first()\r\n      if (this.num === 1) {\r\n        this.container.addClass(this.options.singleClass)\r\n      }\r\n      if (this.options.hidePageScrollbars) {\r\n        // Hide the page scrollbars:\r\n        this.bodyOverflowStyle = document.body.style.overflow\r\n        document.body.style.overflow = 'hidden'\r\n      }\r\n      this.container[0].style.display = 'block'\r\n      this.initSlides()\r\n      this.container.addClass(this.options.displayClass)\r\n    },\r\n\r\n    initOptions: function (options) {\r\n      // Create a copy of the prototype options:\r\n      this.overrided(langx.mixin({}, SliderView.prototype.options,options));\r\n\r\n      if (this.num < 3) {\r\n        // 1 or 2 slides cannot be displayed continuous,\r\n        // remember the original option by setting to null instead of false:\r\n        this.options.continuous = this.options.continuous ? null : false\r\n      }\r\n      if (!this.support.transition) {\r\n        this.options.emulateTouchEvents = false\r\n      }\r\n      if (this.options.event) {\r\n        this.preventDefault(this.options.event)\r\n      }\r\n    }\r\n  });\r\n\r\n  viewTypeRegistry[\"slider\"] = {\r\n    \"name\" :  \"slider\",\r\n    \"ctor\" :  SliderView\r\n  };\r\n\r\n  return SliderView;\r\n\r\n});\r\n\ndefine('skylark-domx-plugins-repeaters/views/table-view',[\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-eventer\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-geom\",\r\n    \"skylark-domx-query\",\r\n    \"../view-type-registry\",   \r\n    \"./view-base\"\r\n], function(langx, browser, eventer, noder, geom, $, viewTypeRegistry, ViewBase) {\r\n\r\n  var TableView = ViewBase.inherit({\r\n    klassName : \"TableView\",\r\n\r\n    options: {\r\n        columnRendered: null,\r\n        columnSizing: true,\r\n        columnSyncing: true,\r\n        highlightSortedColumn: true,\r\n        infiniteScroll: false,\r\n        noItemsHTML: 'no items found',\r\n        selectable: false,\r\n        sortClearing: false,\r\n        rowRendered: null,\r\n        frozenColumns: 0,\r\n        actions: false,\r\n\r\n        viewClass : \"repeater-table\",\r\n        tableWrapperClass : \"repeater-table-wrapper\",\r\n        checkClass : \"repeater-table-check\",\r\n        headingClass : \"repeater-table-heading\",\r\n        actionsPlaceHolderClass : \"repeater-table-actions-placeholder\"\r\n    },\r\n\r\n    clearSelectedItems : function listClearSelectedItems () {\r\n        this.repeater.$canvas.find(`.${this.options.checkClass}`).remove();\r\n        this.repeater.$canvas.find(`.${this.options.viewClass} table tbody tr.selected`).removeClass('selected');\r\n    },\r\n\r\n    highlightColumn : function listHighlightColumn (index, force) {\r\n        var tbody = this.repeater.$canvas.find(`.${this.options.tableWrapperClass} > table tbody`);\r\n        if (this.options.highlightSortedColumn || force) {\r\n            tbody.find('td.sorted').removeClass('sorted');\r\n            tbody.find('tr').each(function eachTR () {\r\n                var col = $(this).find('td:nth-child(' + (index + 1) + ')').filter(function filterChildren () { return !$(this).parent().hasClass('empty'); });\r\n                col.addClass('sorted');\r\n            });\r\n        }\r\n    },\r\n\r\n    getSelectedItems : function listGetSelectedItems () {\r\n        var selected = [];\r\n        this.repeater.$canvas.find(`.${this.options.viewClass} .${this.options.tableWrapperClass} > table tbody tr.selected`).each(function eachSelectedTR () {\r\n            var $item = $(this);\r\n            selected.push({\r\n                data: $item.data('item_data'),\r\n                element: $item\r\n            });\r\n        });\r\n        return selected;\r\n    },\r\n\r\n    positionHeadings : function listPositionHeadings () {\r\n        var $wrapper = this.repeater.$().find(`.${this.options.tableWrapperClass}`);\r\n        var offsetLeft = $wrapper.offset().left;\r\n        var scrollLeft = $wrapper.scrollLeft();\r\n        if (scrollLeft > 0) {\r\n            $wrapper.find(`.${this.options.headingClass}`).each(function eachListHeading () {\r\n                var $heading = $(this);\r\n                var left = ($heading.parents('th:first').offset().left - offsetLeft) + 'px';\r\n                $heading.addClass('shifted').css('left', left);\r\n            });\r\n        } else {\r\n            $wrapper.find(`.${this.options.headingClass}`).each(function eachListHeading () {\r\n                $(this).removeClass('shifted').css('left', '');\r\n            });\r\n        }\r\n    },\r\n\r\n    setSelectedItems : function listSetSelectedItems (itms, force) {\r\n        var selectable = this.options.selectable;\r\n        var self = this;\r\n        var data;\r\n        var i;\r\n        var $item;\r\n        var length;\r\n\r\n        var items = itms;\r\n        if (!$.isArray(items)) {\r\n            items = [items];\r\n        }\r\n\r\n        // this function is necessary because lint yells when a function is in a loop\r\n        var checkIfItemMatchesValue = function checkIfItemMatchesValue (rowIndex) {\r\n            $item = $(this);\r\n\r\n            data = $item.data('item_data') || {};\r\n            if (data[items[i].property] === items[i].value) {\r\n                selectItem($item, items[i].selected, rowIndex);\r\n            }\r\n        };\r\n\r\n        var selectItem = function selectItem ($itm, slct, index) {\r\n            var $frozenCols;\r\n\r\n            var select = (slct !== undefined) ? slct : true;\r\n            if (select) {\r\n                if (!force && selectable !== 'multi') {\r\n                    self.clearSelectedItems();\r\n                }\r\n\r\n                if (!$itm.hasClass('selected')) {\r\n                    $itm.addClass('selected');\r\n\r\n                    if (self.options.frozenColumns || self.options.selectable === 'multi') {\r\n                        $frozenCols = self.repeater.$().find('.frozen-column-wrapper tr:nth-child(' + (index + 1) + ')');\r\n\r\n                        $frozenCols.addClass('selected');\r\n                        $frozenCols.find('.repeater-select-checkbox').addClass('checked');\r\n                    }\r\n\r\n                    if (self.options.actions) {\r\n                        self.repeater.$().find('.actions-column-wrapper tr:nth-child(' + (index + 1) + ')').addClass('selected');\r\n                    }\r\n\r\n                    $itm.find('td:first').prepend(`<div class=\"${this.options.checkClass}\"><span class=\"glyphicon glyphicon-ok\"></span></div>`);\r\n                }\r\n            } else {\r\n                if (self.options.frozenColumns) {\r\n                    $frozenCols = self.repeater.$().find('.frozen-column-wrapper tr:nth-child(' + (index + 1) + ')');\r\n\r\n                    $frozenCols.addClass('selected');\r\n                    $frozenCols.find('.repeater-select-checkbox').removeClass('checked');\r\n                }\r\n\r\n                if (self.options.actions) {\r\n                    self.repeater.$().find('.actions-column-wrapper tr:nth-child(' + (index + 1) + ')').removeClass('selected');\r\n                }\r\n\r\n                $itm.find(`.${this.options.checkClass}`).remove();\r\n                $itm.removeClass('selected');\r\n            }\r\n        };\r\n\r\n        if (force === true || selectable === 'multi') {\r\n            length = items.length;\r\n        } else if (selectable) {\r\n            length = (items.length > 0) ? 1 : 0;\r\n        } else {\r\n            length = 0;\r\n        }\r\n\r\n        for (i = 0; i < length; i++) {\r\n            if (items[i].index !== undefined) {\r\n                $item = this.repeater.$canvas.find(`.${this.options.viewClass} .${this.options.tableWrapperClass} > table tbody tr:nth-child(` + (items[i].index + 1) + ')');\r\n                if ($item.length > 0) {\r\n                    selectItem($item, items[i].selected, items[i].index);\r\n                }\r\n            } else if (items[i].property !== undefined && items[i].value !== undefined) {\r\n                this.repeater.$canvas.find(`.${this.options.viewClass} .${this.options.tableWrapperClass} > table tbody tr`).each(checkIfItemMatchesValue);\r\n            }\r\n        }\r\n    },\r\n\r\n    sizeHeadings : function listSizeHeadings () {\r\n        var $table = this.repeater.$().find(`.${this.options.viewClass} table`);\r\n        var self = this;\r\n        $table.find('thead th').each(function eachTH () {\r\n            var $th = $(this);\r\n            var $heading = $th.find(`.${self.options.headingClass}`);\r\n            $heading.css({ height: $th.outerHeight() });\r\n            $heading.outerWidth($heading.data('forced-width') || $th.outerWidth());\r\n        });\r\n    },\r\n\r\n    setFrozenColumns : function listSetFrozenColumns () {\r\n        var frozenTable = this.repeater.$canvas.find('.table-frozen');\r\n        var $wrapper = this.repeater.$().find('.repeater-canvas');\r\n        var $table = this.repeater.$().find(`.${this.options.viewClass} .${this.options.tableWrapperClass} > table`);\r\n        var repeaterWrapper = this.repeater.$().find(`.${this.options.viewClass}`);\r\n        var numFrozenColumns = this.options.frozenColumns;\r\n        var self = this;\r\n\r\n        if (this.options.selectable === 'multi') {\r\n            numFrozenColumns = numFrozenColumns + 1;\r\n            $wrapper.addClass('multi-select-enabled');\r\n        }\r\n\r\n        if (frozenTable.length < 1) {\r\n            // setup frozen column markup\r\n            // main wrapper and remove unneeded columns\r\n            var $frozenColumnWrapper = $('<div class=\"frozen-column-wrapper\"></div>').insertBefore($table);\r\n            var $frozenColumn = $table.clone().addClass('table-frozen');\r\n            $frozenColumn.find('th:not(:lt(' + numFrozenColumns + '))').remove();\r\n            $frozenColumn.find('td:not(:nth-child(n+0):nth-child(-n+' + numFrozenColumns + '))').remove();\r\n\r\n            // need to set absolute heading for vertical scrolling\r\n            var $frozenThead = $frozenColumn.clone().removeClass('table-frozen');\r\n            $frozenThead.find('tbody').remove();\r\n            var $frozenTheadWrapper = $('<div class=\"frozen-thead-wrapper\"></div>').append($frozenThead);\r\n\r\n            // this gets a little messy with all the cloning. We need to make sure the ID and FOR\r\n            // attribs are unique for the 'top most' cloned checkbox\r\n            var $checkboxLabel = $frozenTheadWrapper.find('th label.checkbox-custom.checkbox-inline');\r\n            $checkboxLabel.attr('id', $checkboxLabel.attr('id') + '_cloned');\r\n\r\n            $frozenColumnWrapper.append($frozenColumn);\r\n            repeaterWrapper.append($frozenTheadWrapper);\r\n            this.repeater.$canvas.addClass('frozen-enabled');\r\n        }\r\n\r\n        this.sizeFrozenColumns();\r\n\r\n        $(`.frozen-thead-wrapper .${this.options.headingClass}`).on('click', function onClickHeading () {\r\n            var index = $(this).parent('th').index();\r\n            index = index + 1;\r\n            self.repeater.$().find(`.${this.options.tableWrapperClass} > table thead th:nth-child(` + index + `) .${this.options.headingClass}`)[0].click();\r\n        });\r\n    },\r\n\r\n    positionColumns : function listPositionColumns () {\r\n        var $wrapper = this.repeater.$().find('.repeater-canvas');\r\n        var scrollTop = $wrapper.scrollTop();\r\n        var scrollLeft = $wrapper.scrollLeft();\r\n        var frozenEnabled = this.options.frozenColumns || this.options.selectable === 'multi';\r\n        var actionsEnabled = this.options.actions;\r\n\r\n        var canvasWidth = this.repeater.$().find('.repeater-canvas').outerWidth();\r\n        var tableWidth = this.repeater.$().find(`.${this.options.viewClass} .${this.options.tableWrapperClass} > table`).outerWidth();\r\n\r\n        var actionsWidth = this.repeater.$().find('.table-actions') ? this.repeater.$().find('.table-actions').outerWidth() : 0;\r\n\r\n        var shouldScroll = (tableWidth - (canvasWidth - actionsWidth)) >= scrollLeft;\r\n\r\n\r\n        if (scrollTop > 0) {\r\n            $wrapper.find(`.${this.options.headingClass}`).css('top', scrollTop);\r\n        } else {\r\n            $wrapper.find(`.${this.options.headingClass}`).css('top', '0');\r\n        }\r\n\r\n        if (scrollLeft > 0) {\r\n            if (frozenEnabled) {\r\n                $wrapper.find('.frozen-thead-wrapper').css('left', scrollLeft);\r\n                $wrapper.find('.frozen-column-wrapper').css('left', scrollLeft);\r\n            }\r\n            if (actionsEnabled && shouldScroll) {\r\n                $wrapper.find('.actions-thead-wrapper').css('right', -scrollLeft);\r\n                $wrapper.find('.actions-column-wrapper').css('right', -scrollLeft);\r\n            }\r\n        } else {\r\n            if (frozenEnabled) {\r\n                $wrapper.find('.frozen-thead-wrapper').css('left', '0');\r\n                $wrapper.find('.frozen-column-wrapper').css('left', '0');\r\n            }\r\n            if (actionsEnabled) {\r\n                $wrapper.find('.actions-thead-wrapper').css('right', '0');\r\n                $wrapper.find('.actions-column-wrapper').css('right', '0');\r\n            }\r\n        }\r\n    },\r\n\r\n    createItemActions : function () {\r\n        var actionsHtml = '';\r\n        var self = this;\r\n        var i;\r\n        var $table = this.repeater.$().find(`.${this.options.viewClass} .${this.options.tableWrapperClass} > table`);\r\n        var $actionsTable = this.repeater.$canvas.find('.table-actions');\r\n        var len = this.options.actions.items.length;\r\n        if (len == 1) {\r\n            var action = this.options.actions.items[0];\r\n            actionsHtml = '<a href=\"javascript:void(0)\" data-action=\"' + action.name + '\" class=\"action-item\"> ' + action.html + '</a>'\r\n            if ($actionsTable.length < 1) {\r\n                var $actionsColumnWrapper = $('<div class=\"actions-column-wrapper\" style=\"width: ' + this.options.actions.width + 'px\"></div>').insertBefore($table);\r\n                var $actionsColumn = $table.clone().addClass('table-actions');\r\n                $actionsColumn.find('th:not(:last-child)').remove();\r\n                $actionsColumn.find('tr td:not(:last-child)').remove();\r\n\r\n                var $actionsCells = $actionsColumn.find('td');\r\n\r\n                $actionsCells.each(function (rowNumber) {\r\n                    var id = $(this).parent().attr(\"id\");\r\n                    var data = $(\"#\" + id).data(\"item_data\")\r\n                    if (self.options.exceptActionRows && data && langx.inArray(self.options.exceptActionRows, data.name)) {\r\n                        $(this).html(\"-\");\r\n                    } else {\r\n                        $(this).html(actionsHtml);\r\n                    }\r\n                    $(this).find('a').attr('data-row', rowNumber + 1);\r\n                });\r\n            }\r\n        } else {\r\n            for (i = 0; i < len; i++) {\r\n                var action = this.options.actions.items[i];\r\n                var html = action.html;\r\n\r\n                actionsHtml += '<li class=\"' + action.name + '\"><a href=\"javascript:void(0)\" data-action=\"' + action.name + '\" class=\"action-item\"> ' + html + '</a></li>';\r\n            }\r\n            var actionsDropdown = '<ul class=\"ul-inline list-unstyled ul-horizontally\" role=\"menu\">' +\r\n                actionsHtml + '</ul>';\r\n            if ($actionsTable.length < 1) {\r\n                var $actionsColumnWrapper = $('<div class=\"actions-column-wrapper\" style=\"width: ' + this.options.actions.width + 'px\"></div>').insertBefore($table);\r\n                var $actionsColumn = $table.clone().addClass('table-actions');\r\n                $actionsColumn.find('th:not(:last-child)').remove();\r\n                $actionsColumn.find('tr td:not(:last-child)').remove();\r\n\r\n                // Dont show actions dropdown in header if not multi select\r\n                if (this.options.selectable === 'multi' || this.options.selectable === 'action') {\r\n                    $actionsColumn.find('thead tr').html('<th><div class=\"repeater-list-heading\">' + actionsDropdown + '</div></th>');\r\n\r\n                    if (this.options.selectable !== 'action') {\r\n                        // disable the header dropdown until an item is selected\r\n                        $actionsColumn.find('thead .btn').attr('disabled', 'disabled');\r\n                    }\r\n                } else {\r\n                    var label = this.options.actions.label || '<span class=\"actions-hidden\">a</span>';\r\n                    $actionsColumn.find('thead tr').addClass('empty-heading').html('<th>' + label + '<div class=\"repeater-list-heading\">' + label + '</div></th>');\r\n                }\r\n\r\n                // Create Actions dropdown for each cell in actions table\r\n                var $actionsCells = $actionsColumn.find('td');\r\n\r\n                $actionsCells.each(function addActionsDropdown(rowNumber) {\r\n                    $(this).html(actionsDropdown).addClass(\"r-list-action\");\r\n                    $(this).find('a').attr('data-row', rowNumber + 1);\r\n                });\r\n            }\r\n        }\r\n\r\n        $actionsColumnWrapper.append($actionsColumn);\r\n\r\n        this.repeater.$canvas.addClass('actions-enabled');\r\n        this.sizeActionsTable();\r\n\r\n        // row level actions click\r\n        this.repeater.$().find('.table-actions tbody .action-item').on('click', function onBodyActionItemClick(e) {\r\n            if (!self.isDisabled) {\r\n                var actionName = $(this).data('action');\r\n                var row = $(this).data('row');\r\n                var selected = {\r\n                    actionName: actionName,\r\n                    rows: [row]\r\n                };\r\n                self.getActionItems(selected, e);\r\n            }\r\n        });\r\n        // bulk actions click\r\n        this.repeater.$().find('.table-actions thead .action-item').on('click', function onHeadActionItemClick(e) {\r\n            if (!self.isDisabled) {\r\n                var actionName = $(this).data('action');\r\n                var selected = {\r\n                    actionName: actionName,\r\n                    rows: []\r\n                };\r\n\r\n                var selector = `.${this.options.tableWrapperClass} > table .selected`;\r\n\r\n                if ( self.options.selectable === 'action' ) {\r\n                    selector = `.${this.options.tableWrapperClass} > table tr`;\r\n                }\r\n\r\n                self.repeater.$().find(selector).each(function eachSelector(selectorIndex) {\r\n                    selected.rows.push(selectorIndex + 1);\r\n                });\r\n\r\n                self.getActionItems(selected, e);\r\n            }\r\n        });\r\n    },\r\n    createItemActions_1: function  () {\r\n\r\n        var actionsHtml = '';\r\n        var self = this;\r\n        var i;\r\n        var length;\r\n        var $table = this.repeater.$().find(`.${this.options.viewClass} .${this.options.tableWrapperClass} > table`);\r\n        var $actionsTable = this.repeater.$canvas.find('.table-actions');\r\n\r\n        for (i = 0, length = this.options.actions.items.length; i < length; i++) {\r\n            var action = this.options.actions.items[i];\r\n            var html = action.html;\r\n\r\n            actionsHtml += '<li><a href=\"#\" data-action=\"' + action.name + '\" class=\"action-item\"> ' + html + '</a></li>';\r\n        }\r\n\r\n        var actionsDropdown = '<div class=\"btn-group\">' +\r\n            '<button type=\"button\" class=\"btn btn-xs btn-default dropdown-toggle repeater-actions-button\" data-toggle=\"dropdown\" data-flip=\"auto\" aria-expanded=\"false\">' +\r\n            '<span class=\"caret\"></span>' +\r\n            '</button>' +\r\n            '<ul class=\"dropdown-menu dropdown-menu-right\" role=\"menu\">' +\r\n            actionsHtml +\r\n            '</ul></div>';\r\n\r\n        if ($actionsTable.length < 1) {\r\n            var $actionsColumnWrapper = $('<div class=\"actions-column-wrapper\" style=\"width: ' + this.actions_width + 'px\"></div>').insertBefore($table);\r\n            var $actionsColumn = $table.clone().addClass('table-actions');\r\n            $actionsColumn.find('th:not(:last-child)').remove();\r\n            $actionsColumn.find('tr td:not(:last-child)').remove();\r\n\r\n            // Dont show actions dropdown in header if not multi select\r\n            if (this.options.selectable === 'multi' || this.options.selectable === 'action') {\r\n                $actionsColumn.find('thead tr').html(`<th><div class=\"${this.options.headingClass}\">` + actionsDropdown + '</div></th>');\r\n\r\n                if (this.options.selectable !== 'action') {\r\n                    // disable the header dropdown until an item is selected\r\n                    $actionsColumn.find('thead .btn').attr('disabled', 'disabled');\r\n                }\r\n            } else {\r\n                var label = this.options.actions.label || '<span class=\"actions-hidden\">a</span>';\r\n                $actionsColumn.find('thead tr').addClass('empty-heading').html('<th>' + label + `<div class=\"${this.options.headingClass}\">` + label + '</div></th>');\r\n            }\r\n\r\n            // Create Actions dropdown for each cell in actions table\r\n            var $actionsCells = $actionsColumn.find('td');\r\n\r\n            $actionsCells.each(function addActionsDropdown (rowNumber) {\r\n                $(this).html(actionsDropdown);\r\n                $(this).find('a').attr('data-row', rowNumber + 1);\r\n            });\r\n\r\n            $actionsColumnWrapper.append($actionsColumn);\r\n\r\n            this.repeater.$canvas.addClass('actions-enabled');\r\n        }\r\n\r\n        this.sizeActionsTable();\r\n\r\n        // row level actions click\r\n        this.repeater.$().find('.table-actions tbody .action-item').on('click', function onBodyActionItemClick (e) {\r\n            if (!self.isDisabled) {\r\n                var actionName = $(this).data('action');\r\n                var row = $(this).data('row');\r\n                var selected = {\r\n                    actionName: actionName,\r\n                    rows: [row]\r\n                };\r\n                self.getActionItems(selected, e);\r\n            }\r\n        });\r\n        // bulk actions click\r\n        this.repeater.$().find('.table-actions thead .action-item').on('click', function onHeadActionItemClick (e) {\r\n            if (!self.isDisabled) {\r\n                var actionName = $(this).data('action');\r\n                var selected = {\r\n                    actionName: actionName,\r\n                    rows: []\r\n                };\r\n                var selector = `.${this.options.tableWrapperClass} > table .selected`;\r\n\r\n                if ( self.options.selectable === 'action' ) {\r\n                    selector = `.${this.options.tableWrapperClass} > table tr`;\r\n                }\r\n                self.repeater.$().find(selector).each(function eachSelector (selectorIndex) {\r\n                    selected.rows.push(selectorIndex + 1);\r\n                });\r\n\r\n                self.getActionItems(selected, e);\r\n            }\r\n        });\r\n    },\r\n\r\n    getActionItems : function listGetActionItems (selected, e) {\r\n        var selectedObj = [];\r\n        var actionObj = $.grep(this.options.actions.items, function matchedActions (actions) {\r\n            return actions.name === selected.actionName;\r\n        })[0];\r\n        for (var i = 0, selectedRowsL = selected.rows.length; i < selectedRowsL; i++) {\r\n            var clickedRow = this.repeater.$canvas.find(`.${this.options.tableWrapperClass} > table tbody tr:nth-child(` + selected.rows[i] + ')');\r\n            selectedObj.push({\r\n                item: clickedRow,\r\n                rowData: clickedRow.data('item_data')\r\n            });\r\n        }\r\n        if (selectedObj.length === 1) {\r\n            selectedObj = selectedObj[0];\r\n        }\r\n\r\n        if (actionObj.clickAction) {\r\n            var callback = function noop () {};// for backwards compatibility. No idea why this was originally here...\r\n            actionObj.clickAction(selectedObj, callback, e);\r\n        }\r\n    },\r\n\r\n    sizeActionsTable : function listSizeActionsTable () {\r\n        var $actionsTable = this.repeater.$().find(`.${this.options.viewClass} table.table-actions`);\r\n        var $actionsTableHeader = $actionsTable.find('thead tr th');\r\n        var $table = this.repeater.$().find(`.${this.options.tableWrapperClass} > table`);\r\n\r\n        $actionsTableHeader.outerHeight($table.find('thead tr th').outerHeight());\r\n        $actionsTableHeader.find(`.${this.options.headingClass}`).outerHeight($actionsTableHeader.outerHeight());\r\n        $actionsTable.find('tbody tr td:first-child').each(function eachFirstChild (i) {\r\n            $(this).outerHeight($table.find('tbody tr:eq(' + i + ') td').outerHeight());\r\n        });\r\n    },\r\n\r\n    sizeFrozenColumns : function listSizeFrozenColumns () {\r\n        var $table = this.repeater.$().find(`.${this.options.viewClass} .${this.options.tableWrapperClass} > table`);\r\n\r\n        this.repeater.$().find(`.${this.options.viewClass} table.table-frozen tr`).each(function eachTR (i) {\r\n            $(this).height($table.find('tr:eq(' + i + ')').height());\r\n        });\r\n\r\n        var columnWidth = $table.find('td:eq(0)').outerWidth();\r\n        this.repeater.$().find('.frozen-column-wrapper, .frozen-thead-wrapper').width(columnWidth);\r\n    },\r\n\r\n    frozenOptionsInitialize : function listFrozenOptionsInitialize () {\r\n        var $checkboxes = this.repeater.$().find('.frozen-column-wrapper .checkbox-inline');\r\n        var $headerCheckbox = this.repeater.$().find('.header-checkbox .checkbox-custom');\r\n        var $everyTable = this.repeater.$().find(`.${this.options.viewClass} table`);\r\n        var self = this;\r\n\r\n        // Make sure if row is hovered that it is shown in frozen column as well\r\n        this.repeater.$().find('tr.selectable').on('mouseover mouseleave', function onMouseEvents (e) {\r\n            var index = $(this).index();\r\n            index = index + 1;\r\n            if (e.type === 'mouseover') {\r\n                $everyTable.find('tbody tr:nth-child(' + index + ')').addClass('hovered');\r\n            } else {\r\n                $everyTable.find('tbody tr:nth-child(' + index + ')').removeClass('hovered');\r\n            }\r\n        });\r\n\r\n        $headerCheckbox.checkbox();\r\n        $checkboxes.checkbox();\r\n\r\n        // Row checkboxes\r\n        var $rowCheckboxes = this.repeater.$().find('.table-frozen tbody .checkbox-inline');\r\n        var $checkAll = this.repeater.$().find('.frozen-thead-wrapper thead .checkbox-inline input');\r\n        $rowCheckboxes.on('change', function onChangeRowCheckboxes (e) {\r\n            e.preventDefault();\r\n\r\n            if (!self.revertingCheckbox) {\r\n                if (self.isDisabled) {\r\n                    revertCheckbox($(e.currentTarget));\r\n                } else {\r\n                    var row = $(this).attr('data-row');\r\n                    row = parseInt(row, 10) + 1;\r\n                    self.repeater.$().find(`.${this.options.tableWrapperClass} > table tbody tr:nth-child(` + row + ')').click();\r\n\r\n                    var numSelected = self.repeater.$().find('.table-frozen tbody .checkbox-inline.checked').length;\r\n                    if (numSelected === 0) {\r\n                        $checkAll.prop('checked', false);\r\n                        $checkAll.prop('indeterminate', false);\r\n                    } else if (numSelected === $rowCheckboxes.length) {\r\n                        $checkAll.prop('checked', true);\r\n                        $checkAll.prop('indeterminate', false);\r\n                    } else {\r\n                        $checkAll.prop('checked', false);\r\n                        $checkAll.prop('indeterminate', true);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        // \"Check All\" checkbox\r\n        $checkAll.on('change', function onChangeCheckAll (e) {\r\n            if (!self.revertingCheckbox) {\r\n                if (self.isDisabled) {\r\n                    revertCheckbox($(e.currentTarget));\r\n                } else if ($(this).is(':checked')) {\r\n                    self.repeater.$().find(`.${this.options.tableWrapperClass} > table tbody tr:not(.selected)`).click();\r\n                    self.repeater.$().trigger('selected', $checkboxes);\r\n                } else {\r\n                    self.repeater.$().find(`.${this.options.tableWrapperClass} > table tbody tr.selected`).click();\r\n                    self.repeater.$().trigger('deselected', $checkboxes);\r\n                }\r\n            }\r\n        });\r\n\r\n        function revertCheckbox ($checkbox) {\r\n            self.revertingCheckbox = true;\r\n            $checkbox.checkbox('toggle');\r\n            delete self.revertingCheckbox;\r\n        }\r\n    },\r\n\r\n    cleared: function cleared () {\r\n        if (this.options.columnSyncing) {\r\n            this.sizeHeadings();\r\n        }\r\n    },\r\n    dataOptions: function dataOptions (options) {\r\n        if (this.sortDirection) {\r\n            options.sortDirection = this.sortDirection;\r\n        }\r\n        if (this.sortProperty) {\r\n            options.sortProperty = this.sortProperty;\r\n        }\r\n        return options;\r\n    },\r\n    enabled: function enabled (helpers) {\r\n        if (this.options.actions) {\r\n            if (!helpers.status) {\r\n                this.repeater.$canvas.find('.repeater-actions-button').attr('disabled', 'disabled');\r\n            } else {\r\n                this.repeater.$canvas.find('.repeater-actions-button').removeAttr('disabled');\r\n                toggleActionsHeaderButton.call(this);\r\n            }\r\n        }\r\n    },\r\n    initialize: function initialize (helpers, callback) {\r\n        this.sortDirection = null;\r\n        this.sortProperty = null;\r\n        this.specialBrowserClass = specialBrowserClass();\r\n        this.actions_width = (this.options.actions.width !== undefined) ? this.options.actions.width : 37;\r\n        this.noItems = false;\r\n        callback();\r\n    },\r\n    resize: function resize () {\r\n        sizeColumns.call(this, this.repeater.$().find(`.${this.options.tableWrapperClass} > table thead tr`));\r\n        if (this.options.actions) {\r\n            this.sizeActionsTable();\r\n        }\r\n        if (this.options.frozenColumns || this.options.selectable === 'multi') {\r\n            this.sizeFrozenColumns();\r\n        }\r\n        if (this.options.columnSyncing) {\r\n            this.sizeHeadings();\r\n        }\r\n    },\r\n    selected: function selected () {\r\n        var infScroll = this.options.infiniteScroll;\r\n        var opts;\r\n\r\n        this.firstRender = true;\r\n        this.repeater.$loader.addClass('noHeader');\r\n\r\n        if (infScroll) {\r\n            opts = (typeof infScroll === 'object') ? infScroll : {};\r\n            this.repeater.infiniteScrolling(true, opts);\r\n        }\r\n    },\r\n    before: function before (helpers) {\r\n        var $listContainer = helpers.container.find(`.${this.options.viewClass}`);\r\n        var self = this;\r\n        var $table;\r\n\r\n        // this is a patch, it was pulled out of `renderThead`\r\n        if (helpers.data.count > 0) {\r\n            this.noItems = false;\r\n        } else {\r\n            this.noItems = true;\r\n        }\r\n\r\n        if ($listContainer.length < 1) {\r\n            $listContainer = $(`<div class=\"${this.options.viewClass} ` + this.specialBrowserClass + `\" data-preserve=\"shallow\"><div class=\"${this.options.tableWrapperClass}\" data-infinite=\"true\" data-preserve=\"shallow\"><table aria-readonly=\"true\" class=\"table\" data-preserve=\"shallow\" role=\"grid\"></table></div></div>`);\r\n            $listContainer.find(`.${this.options.tableWrapperClass}`).on('scroll.lark.repeaterList', function onScrollRepeaterList () {\r\n                if (self.options.columnSyncing) {\r\n                    self.positionHeadings();\r\n                }\r\n            });\r\n            if (self.options.frozenColumns || self.options.actions || self.options.selectable === 'multi') {\r\n                helpers.container.on('scroll.lark.repeaterList', function onScrollRepeaterList () {\r\n                    self.positionColumns();\r\n                });\r\n            }\r\n\r\n            helpers.container.append($listContainer);\r\n        }\r\n        helpers.container.removeClass('actions-enabled actions-enabled multi-select-enabled');\r\n\r\n        $table = $listContainer.find('table');\r\n        renderThead.call(this, $table, helpers.data);\r\n        renderTbody.call(this, $table, helpers.data);\r\n\r\n        return false;\r\n    },\r\n    renderItem: function renderItem (helpers) {\r\n        renderRow.call(this, helpers.container, helpers.subset, helpers.index);\r\n        return false;\r\n    },\r\n    after: function after () {\r\n        var $sorted;\r\n\r\n        if ((this.options.frozenColumns || this.options.selectable === 'multi') && !this.noItems) {\r\n            this.setFrozenColumns();\r\n        }\r\n\r\n        if (this.options.actions && !this.noItems) {\r\n            this.createItemActions();\r\n            this.sizeActionsTable();\r\n        }\r\n\r\n        if ((this.options.frozenColumns || this.options.actions || this.options.selectable === 'multi') && !this.noItems) {\r\n            this.positionColumns();\r\n            this.frozenOptionsInitialize();\r\n        }\r\n\r\n        if (this.options.columnSyncing) {\r\n            this.sizeHeadings();\r\n            this.positionHeadings();\r\n        }\r\n\r\n        $sorted = this.repeater.$canvas.find(`.${this.options.tableWrapperClass} > table .${this.options.headingClass}.sorted`);\r\n        if ($sorted.length > 0) {\r\n            this.highlightColumn($sorted.data('fu_item_index'));\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n\r\n  });\r\n\r\n\r\n\r\n    // ADDITIONAL METHODS\r\n    var areDifferentColumns = function areDifferentColumns (oldCols, newCols) {\r\n        if (!newCols) {\r\n            return false;\r\n        }\r\n        if (!oldCols || (newCols.length !== oldCols.length)) {\r\n            return true;\r\n        }\r\n        for (var i = 0, newColsL = newCols.length; i < newColsL; i++) {\r\n            if (!oldCols[i]) {\r\n                return true;\r\n            }\r\n\r\n            for (var j in newCols[i]) {\r\n                if (newCols[i].hasOwnProperty(j) && oldCols[i][j] !== newCols[i][j]) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    var renderColumn = function renderColumn ($row, rows, rowIndex, columns, columnIndex) {\r\n        var className = columns[columnIndex].className;\r\n        var content = rows[rowIndex][columns[columnIndex].property];\r\n        var $col = $('<td></td>');\r\n        var width = columns[columnIndex]._auto_width;\r\n\r\n        var property = columns[columnIndex].property;\r\n        if (this.options.actions !== false && property === '@_ACTIONS_@') {\r\n            content = `<div class=\"${this.options.actionsPlaceHolderClass}\" style=\"width: ` + this.actions_width  + 'px\"></div>';\r\n        }\r\n\r\n        content = (content !== undefined) ? content : '';\r\n\r\n        $col.addClass(((className !== undefined) ? className : '')).append(content);\r\n        if (width !== undefined) {\r\n            $col.outerWidth(width);\r\n        }\r\n\r\n        $row.append($col);\r\n\r\n        if (this.options.selectable === 'multi' && columns[columnIndex].property === '@_CHECKBOX_@') {\r\n            var checkBoxMarkup = '<label data-row=\"' + rowIndex + '\" class=\"checkbox-custom checkbox-inline body-checkbox repeater-select-checkbox\">' +\r\n                '<input class=\"sr-only\" type=\"checkbox\"></label>';\r\n\r\n            $col.html(checkBoxMarkup);\r\n        }\r\n\r\n        return $col;\r\n    };\r\n\r\n    var renderHeader = function renderHeader ($tr, columns, index) {\r\n        var chevDown = 'glyphicon-chevron-down';\r\n        var chevron = '.glyphicon.rlc:first';\r\n        var chevUp = 'glyphicon-chevron-up';\r\n        var $div = $(`<div class=\"${this.options.headingClass}\"><span class=\"glyphicon rlc\"></span></div>`);\r\n        var checkAllID = (this.repeater.$().attr('id') + '_' || '') + 'checkall';\r\n\r\n        var checkBoxMarkup = `<div class=\"${this.options.headingClass} header-checkbox\">` +\r\n                '<label id=\"' + checkAllID + '\" class=\"checkbox-custom checkbox-inline\">' +\r\n                    '<input class=\"sr-only\" type=\"checkbox\" value=\"\">' +\r\n                    '<span class=\"checkbox-label\">&nbsp;</span>' +\r\n                '</label>' +\r\n            '</div>';\r\n\r\n        var $header = $('<th></th>');\r\n        var self = this;\r\n        var $both;\r\n        var className;\r\n        var sortable;\r\n        var $span;\r\n        var $spans;\r\n\r\n        $div.data('fu_item_index', index);\r\n        $div.prepend(columns[index].label);\r\n        $header.html($div.html()).find('[id]').removeAttr('id');\r\n\r\n        if (columns[index].property !== '@_CHECKBOX_@') {\r\n            $header.append($div);\r\n        } else {\r\n            $header.append(checkBoxMarkup);\r\n        }\r\n\r\n        $both = $header.add($div);\r\n        $span = $div.find(chevron);\r\n        $spans = $span.add($header.find(chevron));\r\n\r\n        if (this.options.actions && columns[index].property === '@_ACTIONS_@') {\r\n            var width = this.actions_width;\r\n            $header.css('width', width);\r\n            $div.css('width', width);\r\n        }\r\n\r\n        className = columns[index].className;\r\n        if (className !== undefined) {\r\n            $both.addClass(className);\r\n        }\r\n\r\n        sortable = columns[index].sortable;\r\n        if (sortable) {\r\n            $both.addClass('sortable');\r\n            $div.on('click.lark.repeaterList', function onClickRepeaterList () {\r\n                if (!self.isDisabled) {\r\n                    self.sortProperty = (typeof sortable === 'string') ? sortable : columns[index].property;\r\n                    if ($div.hasClass('sorted')) {\r\n                        if ($span.hasClass(chevUp)) {\r\n                            $spans.removeClass(chevUp).addClass(chevDown);\r\n                            self.sortDirection = 'desc';\r\n                        } else if (!self.options.sortClearing) {\r\n                            $spans.removeClass(chevDown).addClass(chevUp);\r\n                            self.sortDirection = 'asc';\r\n                        } else {\r\n                            $both.removeClass('sorted');\r\n                            $spans.removeClass(chevDown);\r\n                            self.sortDirection = null;\r\n                            self.sortProperty = null;\r\n                        }\r\n                    } else {\r\n                        $tr.find(`th, .${this.options.headingClass}`).removeClass('sorted');\r\n                        $spans.removeClass(chevDown).addClass(chevUp);\r\n                        self.sortDirection = 'asc';\r\n                        $both.addClass('sorted');\r\n                    }\r\n\r\n                    self.repeater.render({\r\n                        clearInfinite: true,\r\n                        pageIncrement: null\r\n                    });\r\n                }\r\n            });\r\n        }\r\n\r\n        if (columns[index].sortDirection === 'asc' || columns[index].sortDirection === 'desc') {\r\n            $tr.find(`th, .${this.options.headingClass}`).removeClass('sorted');\r\n            $both.addClass('sortable sorted');\r\n            if (columns[index].sortDirection === 'asc') {\r\n                $spans.addClass(chevUp);\r\n                this.sortDirection = 'asc';\r\n            } else {\r\n                $spans.addClass(chevDown);\r\n                this.sortDirection = 'desc';\r\n            }\r\n\r\n            this.sortProperty = (typeof sortable === 'string') ? sortable : columns[index].property;\r\n        }\r\n\r\n        $tr.append($header);\r\n    };\r\n\r\n    var onClickRowRepeaterList = function onClickRowRepeaterList (repeater) {\r\n        var isMulti = repeater.options.selectable === 'multi';\r\n        var isActions = repeater.options.actions;\r\n        var $repeater = repeater.$();\r\n\r\n        if (!repeater.isDisabled) {\r\n            var $item = $(this);\r\n            var index = $(this).index() + 1;\r\n            var $frozenRow = $repeater.find('.frozen-column-wrapper tr:nth-child(' + index + ')');\r\n            var $actionsRow = $repeater.find('.actions-column-wrapper tr:nth-child(' + index + ')');\r\n            var $checkBox = $repeater.find('.frozen-column-wrapper tr:nth-child(' + index + ') .checkbox-inline');\r\n\r\n            if ($item.is('.selected')) {\r\n                $item.removeClass('selected');\r\n                if (isMulti) {\r\n                    $checkBox.click();\r\n                    $frozenRow.removeClass('selected');\r\n                    if (isActions) {\r\n                        $actionsRow.removeClass('selected');\r\n                    }\r\n                } else {\r\n                    $item.find(`.${this.options.checkClass}`).remove();\r\n                }\r\n\r\n                $repeater.trigger('deselected.lark.repeaterList', $item);\r\n            } else {\r\n                if (!isMulti) {\r\n                    repeater.$canvas.find(`.${this.options.checkClass}`).remove();\r\n                    repeater.$canvas.find(`.${this.options.viewClass} tbody tr.selected`).each(function deslectRow () {\r\n                        $(this).removeClass('selected');\r\n                        $repeater.trigger('deselected.lark.repeaterList', $(this));\r\n                    });\r\n                    $item.find('td:first').prepend(`<div class=\"${this.options.checkClass}\"><span class=\"glyphicon glyphicon-ok\"></span></div>`);\r\n                    $item.addClass('selected');\r\n                    $frozenRow.addClass('selected');\r\n                } else {\r\n                    $checkBox.click();\r\n                    $item.addClass('selected');\r\n                    $frozenRow.addClass('selected');\r\n                    if (isActions) {\r\n                        $actionsRow.addClass('selected');\r\n                    }\r\n                }\r\n                $repeater.trigger('selected.lark.repeaterList', $item);\r\n            }\r\n\r\n            toggleActionsHeaderButton.call(repeater);\r\n        }\r\n    };\r\n\r\n    var renderRow = function renderRow ($tbody, rows, index) {\r\n        var $row = $('<tr></tr>');\r\n\r\n        if (this.options.selectable) {\r\n            $row.data('item_data', rows[index]);\r\n\r\n            if (this.options.selectable !== 'action') {\r\n                $row.addClass('selectable');\r\n                $row.attr('tabindex', 0);   // allow items to be tabbed to / focused on\r\n\r\n                var repeater = this;\r\n                $row.on('click.lark.repeaterList', function callOnClickRowRepeaterList() {\r\n                    onClickRowRepeaterList.call(this, repeater);\r\n                });\r\n\r\n                // allow selection via enter key\r\n                $row.keyup(function onRowKeyup (e) {\r\n                    if (e.keyCode === 13) {\r\n                        // triggering a standard click event to be caught by the row click handler above\r\n                        $row.trigger('click.lark.repeaterList');\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        if (this.options.actions && !this.options.selectable) {\r\n            $row.data('item_data', rows[index]);\r\n        }\r\n\r\n        var columns = [];\r\n        for (var i = 0, length = this.columns.length; i < length; i++) {\r\n            columns.push(renderColumn.call(this, $row, rows, index, this.columns, i));\r\n        }\r\n\r\n        $tbody.append($row);\r\n\r\n        if (this.options.columnRendered) {\r\n            for (var columnIndex = 0, colLength = columns.length; columnIndex < colLength; columnIndex++) {\r\n                if (!(this.columns[columnIndex].property === '@_CHECKBOX_@' || this.columns[columnIndex].property === '@_ACTIONS_@')) {\r\n                    this.options.columnRendered({\r\n                        container: $row,\r\n                        columnAttr: this.columns[columnIndex].property,\r\n                        item: columns[columnIndex],\r\n                        rowData: rows[index]\r\n                    }, function noop () {});\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.options.rowRendered) {\r\n            this.options.rowRendered({\r\n                container: $tbody,\r\n                item: $row,\r\n                rowData: rows[index]\r\n            }, function noop () {});\r\n        }\r\n    };\r\n\r\n    var renderTbody = function renderTbody ($table, data) {\r\n        var $tbody = $table.find('tbody');\r\n        var $empty;\r\n\r\n        if ($tbody.length < 1) {\r\n            $tbody = $('<tbody data-container=\"true\"></tbody>');\r\n            $table.append($tbody);\r\n        }\r\n\r\n        if (typeof data.error === 'string' && data.error.length > 0) {\r\n            $empty = $('<tr class=\"empty text-danger\"><td colspan=\"' + this.columns.length + '\"></td></tr>');\r\n            $empty.find('td').append(data.error);\r\n            $tbody.append($empty);\r\n        } else if (data.items && data.items.length < 1) {\r\n            $empty = $('<tr class=\"empty\"><td colspan=\"' + this.columns.length + '\"></td></tr>');\r\n            $empty.find('td').append(this.options.noItemsHTML);\r\n            $tbody.append($empty);\r\n        }\r\n    };\r\n\r\n    var renderThead = function renderThead ($table, data) {\r\n        var columns = data.columns || [];\r\n        var $thead = $table.find('thead');\r\n        var i;\r\n        var length;\r\n        var $tr;\r\n\r\n        if (this.firstRender || areDifferentColumns(this.columns, columns) || $thead.length === 0) {\r\n            $thead.remove();\r\n\r\n            // noItems is set in `before` method\r\n\r\n            if (this.options.selectable === 'multi' && !this.noItems) {\r\n                var checkboxColumn = {\r\n                    label: 'c',\r\n                    property: '@_CHECKBOX_@',\r\n                    sortable: false\r\n                };\r\n                columns.splice(0, 0, checkboxColumn);\r\n            }\r\n\r\n            this.columns = columns;\r\n            this.firstRender = false;\r\n            this.repeater.$loader.removeClass('noHeader');\r\n\r\n            // keep action column header even when empty, you'll need it later....\r\n            if (this.options.actions) {\r\n                var actionsColumn = {\r\n                    label: this.options.actions.label || '<span class=\"actions-hidden\">a</span>',\r\n                    property: '@_ACTIONS_@',\r\n                    sortable: false,\r\n                    width: this.actions_width\r\n                };\r\n                columns.push(actionsColumn);\r\n            }\r\n\r\n\r\n            $thead = $('<thead data-preserve=\"deep\"><tr></tr></thead>');\r\n            $tr = $thead.find('tr');\r\n            for (i = 0, length = columns.length; i < length; i++) {\r\n                renderHeader.call(this, $tr, columns, i);\r\n            }\r\n            $table.prepend($thead);\r\n\r\n            if (this.options.selectable === 'multi' && !this.noItems) {\r\n                // after checkbox column is created need to get width of checkbox column from\r\n                // its css class\r\n                var checkboxWidth = this.repeater.$().find(`.${this.options.tableWrapperClass} .header-checkbox`).outerWidth();\r\n                var selectColumn = $.grep(columns, function grepColumn (column) {\r\n                    return column.property === '@_CHECKBOX_@';\r\n                })[0];\r\n                selectColumn.width = checkboxWidth;\r\n            }\r\n            sizeColumns.call(this, $tr);\r\n        }\r\n    };\r\n\r\n    var sizeColumns = function sizeColumns ($tr) {\r\n        var automaticallyGeneratedWidths = [];\r\n        var self = this;\r\n        var i;\r\n        var length;\r\n        var newWidth;\r\n        var widthTaken;\r\n\r\n        if (this.options.columnSizing) {\r\n            i = 0;\r\n            widthTaken = 0;\r\n            $tr.find('th').each(function eachTH () {\r\n                var $th = $(this);\r\n                var width;\r\n                if (self.columns[i].width !== undefined) {\r\n                    width = self.columns[i].width;\r\n                    $th.outerWidth(width);\r\n                    widthTaken += $th.outerWidth();\r\n                    self.columns[i]._auto_width = width;\r\n                } else {\r\n                    var outerWidth = $th.find(`.${self.options.headingClass}`).outerWidth();\r\n                    automaticallyGeneratedWidths.push({\r\n                        col: $th,\r\n                        index: i,\r\n                        minWidth: outerWidth\r\n                    });\r\n                }\r\n\r\n                i++;\r\n            });\r\n\r\n            length = automaticallyGeneratedWidths.length;\r\n            if (length > 0) {\r\n                var canvasWidth = this.repeater.$canvas.find(`.${this.options.tableWrapperClass}`).outerWidth();\r\n                newWidth = Math.floor((canvasWidth - widthTaken) / length);\r\n                for (i = 0; i < length; i++) {\r\n                    if (automaticallyGeneratedWidths[i].minWidth > newWidth) {\r\n                        newWidth = automaticallyGeneratedWidths[i].minWidth;\r\n                    }\r\n                    automaticallyGeneratedWidths[i].col.outerWidth(newWidth);\r\n                    this.columns[automaticallyGeneratedWidths[i].index]._auto_width = newWidth;\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    var specialBrowserClass = function specialBrowserClass () {\r\n        var ua = window.navigator.userAgent;\r\n        var msie = ua.indexOf('MSIE ');\r\n        var firefox = ua.indexOf('Firefox');\r\n\r\n        if (msie > 0 ) {\r\n            return 'ie-' + parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);\r\n        } else if (firefox > 0) {\r\n            return 'firefox';\r\n        }\r\n\r\n        return '';\r\n    };\r\n\r\n    var toggleActionsHeaderButton = function toggleActionsHeaderButton () {\r\n        var selectedSelector = `.${this.options.tableWrapperClass} > table .selected`;\r\n        var $actionsColumn = this.repeater.$().find('.table-actions');\r\n        var $selected;\r\n\r\n        if (this.options.selectable === 'action') {\r\n            selectedSelector = `.${this.options.tableWrapperClass} > table tr`;\r\n        }\r\n\r\n        $selected = this.repeater.$canvas.find( selectedSelector );\r\n\r\n        if ($selected.length > 0) {\r\n            $actionsColumn.find('thead .btn').removeAttr('disabled');\r\n        } else {\r\n            $actionsColumn.find('thead .btn').attr('disabled', 'disabled');\r\n        }\r\n    };\r\n\r\n\r\n     viewTypeRegistry[\"table\"] = {\r\n        name : \"table\",\r\n        ctor : TableView\r\n    }; \r\n\r\n    return TableView;\r\n\r\n});\ndefine('skylark-domx-plugins-repeaters/views/tile-view',[\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-eventer\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-geom\",\r\n    \"skylark-domx-query\",\r\n    \"../view-type-registry\",   \r\n    \"./view-base\"\r\n], function(langx, browser, eventer, noder, geom, $, viewTypeRegistry, ViewBase) {\r\n\r\n  var TileView = ViewBase.inherit({\r\n    klassName : \"TileView\",\r\n\r\n    options: {\r\n        alignment: 'left',\r\n        infiniteScroll: false,\r\n        itemRendered: null,\r\n        noItemsHTML: 'no items found',\r\n        selectable: false,\r\n        viewClass: \"repeater-tile\",\r\n        template : '<div class=\"clearfix repeater-tile\" data-container=\"true\" data-infinite=\"true\" data-preserve=\"shallow\"></div>',\r\n        item : {\r\n            template: '<div class=\"thumbnail repeater-thumbnail\"><img height=\"75\" src=\"{{src}}\" width=\"65\"><span>{{name}}</span></div>'\r\n        },\r\n        renderItem : null\r\n    },\r\n\r\n    //ADDITIONAL METHODS\r\n    clearSelectedItems : function() {\r\n        this.repeater.$canvas.find(`.${this.options.viewClass} .selectable.selected`).removeClass('selected');\r\n    },\r\n\r\n    getSelectedItems : function() {\r\n        var selected = [];\r\n        this.repeater.$canvas.find(`.${this.options.viewClass} .selectable.selected`).each(function() {\r\n            selected.push($(this));\r\n        });\r\n        return selected;\r\n    },\r\n\r\n    setSelectedItems : function(items, force) {\r\n        var selectable = this.options.selectable;\r\n        var self = this;\r\n        var i, $item, l, n;\r\n\r\n        //this function is necessary because lint yells when a function is in a loop\r\n        function compareItemIndex() {\r\n            if (n === items[i].index) {\r\n                $item = $(this);\r\n                return false;\r\n            } else {\r\n                n++;\r\n            }\r\n        }\r\n\r\n        //this function is necessary because lint yells when a function is in a loop\r\n        function compareItemSelector() {\r\n            $item = $(this);\r\n            if ($item.is(items[i].selector)) {\r\n                selectItem($item, items[i].selected);\r\n            }\r\n        }\r\n\r\n        function selectItem($itm, select) {\r\n            select = (select !== undefined) ? select : true;\r\n            if (select) {\r\n                if (!force && selectable !== 'multi') {\r\n                    self.thumbnail_clearSelectedItems();\r\n                }\r\n\r\n                $itm.addClass('selected');\r\n            } else {\r\n                $itm.removeClass('selected');\r\n            }\r\n        }\r\n\r\n        if (!langx.isArray(items)) {\r\n            items = [items];\r\n        }\r\n\r\n        if (force === true || selectable === 'multi') {\r\n            l = items.length;\r\n        } else if (selectable) {\r\n            l = (items.length > 0) ? 1 : 0;\r\n        } else {\r\n            l = 0;\r\n        }\r\n\r\n        for (i = 0; i < l; i++) {\r\n            if (items[i].index !== undefined) {\r\n                $item = $();\r\n                n = 0;\r\n                this.repeater.$canvas.find(`.${this.options.viewClass} .selectable`).each(compareItemIndex);\r\n                if ($item.length > 0) {\r\n                    selectItem($item, items[i].selected);\r\n                }\r\n\r\n            } else if (items[i].selector) {\r\n                this.repeater.$canvas.find(`.${this.options.viewClass} .selectable`).each(compareItemSelector);\r\n            }\r\n        }\r\n    },\r\n\r\n    selected: function() {\r\n        var infScroll = this.options.infiniteScroll;\r\n        var opts;\r\n        if (infScroll) {\r\n            opts = (typeof infScroll === 'object') ? infScroll : {};\r\n            this.infiniteScrolling(true, opts);\r\n        }\r\n    },\r\n    before: function(helpers) {\r\n        var alignment = this.options.alignment;\r\n        var $cont = this.repeater.$canvas.find(`.${this.options.viewClass}`);\r\n        var data = helpers.data;\r\n        var response = {};\r\n        var $empty, validAlignments;\r\n\r\n        if ($cont.length < 1) {\r\n            $cont = $(this.options.template);\r\n            $cont.addClass(this.options.viewClass);\r\n            if (alignment && alignment !== 'none') {\r\n                validAlignments = {\r\n                    'center': 1,\r\n                    'justify': 1,\r\n                    'left': 1,\r\n                    'right': 1\r\n                };\r\n                alignment = (validAlignments[alignment]) ? alignment : 'justify';\r\n                $cont.addClass('align-' + alignment);\r\n                this.thumbnail_injectSpacers = true;\r\n            } else {\r\n                this.thumbnail_injectSpacers = false;\r\n            }\r\n            response.item = $cont;\r\n        } else {\r\n            response.action = 'none';\r\n        }\r\n\r\n        if (data.items && data.items.length < 1) {\r\n            $empty = $('<div class=\"empty\"></div>');\r\n            $empty.append(this.options.noItemsHTML);\r\n            $cont.append($empty);\r\n        } else {\r\n            $cont.find('.empty:first').remove();\r\n        }\r\n\r\n        return response;\r\n    },\r\n    renderItem: function(helpers) {\r\n        if (this.options.renderItem) {\r\n            return this.options.renderItem.call(this,helpers);\r\n        }\r\n\r\n        var selectable = this.options.selectable;\r\n\r\n        var selected = 'selected';\r\n        var self = this;\r\n        var $thumbnail = this._create$Item(this.options.item.template,helpers.subset[helpers.index]);\r\n\r\n        $thumbnail.data('item_data', helpers.data.items[helpers.index]);\r\n\r\n        if (selectable) {\r\n            $thumbnail.addClass('selectable');\r\n            $thumbnail.on('click', function() {\r\n                if (self.isDisabled) return;\r\n\r\n                if (!$thumbnail.hasClass(selected)) {\r\n                    if (selectable !== 'multi') {\r\n                        self.repeater.$canvas.find(`.${this.options.viewClass} .selectable.selected`).each(function() {\r\n                            var $itm = $(this);\r\n                            $itm.removeClass(selected);\r\n                            self.repeater.$element.trigger('deselected.lark.repeaterThumbnail', $itm);\r\n                        });\r\n                    }\r\n\r\n                    $thumbnail.addClass(selected);\r\n                    self.repeater.$element.trigger('selected.lark.repeaterThumbnail', $thumbnail);\r\n                } else {\r\n                    $thumbnail.removeClass(selected);\r\n                    self.repeater.$element.trigger('deselected.lark.repeaterThumbnail', $thumbnail);\r\n                }\r\n            });\r\n        }\r\n\r\n        helpers.container.append($thumbnail);\r\n        if (this.thumbnail_injectSpacers) {\r\n            $thumbnail.after('<span class=\"spacer\">&nbsp;</span>');\r\n        }\r\n\r\n        if (this.options.itemRendered) {\r\n            this.options.itemRendered({\r\n                container: helpers.container,\r\n                item: $thumbnail,\r\n                itemData: helpers.subset[helpers.index]\r\n            }, function() {});\r\n        }\r\n\r\n        return false;\r\n    }\r\n    \r\n  });\r\n\r\n\r\n    viewTypeRegistry[\"tile\"] = {\r\n        name : \"tile\",\r\n        ctor : TileView\r\n    };\r\n\r\n    return TileView;\r\n    \r\n});\ndefine('skylark-domx-plugins-repeaters/main',[\r\n\t\"./repeaters\",\r\n    \"./repeater\",\r\n    \"./view-type-registry\",\r\n    \"./views/view-base\",\r\n    \"./views/linear-view\",\r\n    \"./views/slider-view\",\r\n    \"./views/table-view\",\r\n    \"./views/tile-view\"\r\n], function(repeaters) {\r\n    return repeaters;\r\n});\ndefine('skylark-domx-plugins-repeaters', ['skylark-domx-plugins-repeaters/main'], function (main) { return main; });\n\n"]}