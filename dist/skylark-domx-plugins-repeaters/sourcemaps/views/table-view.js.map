{"version":3,"sources":["views/table-view.js"],"names":["define","langx","browser","eventer","noder","geom","$","Checkbox","viewTypeRegistry","ViewBase","TableView","inherit","klassName","options","columnRendered","columnSizing","columnSyncing","highlightSortedColumn","infiniteScroll","noItemsHTML","selectable","sortClearing","rowRendered","frozenColumns","actions","viewClass","tableWrapperClass","checkClass","headingClass","actionsPlaceHolderClass","clearSelectedItems","this","repeater","$canvas","find","remove","removeClass","highlightColumn","index","force","tbody","each","filter","parent","hasClass","addClass","getSelectedItems","selected","$item","push","data","element","positionHeadings","$wrapper","offsetLeft","offset","left","scrollLeft","$heading","parents","css","setSelectedItems","itms","checkIfItemMatchesValue","rowIndex","items","i","property","value","selectItem","self","isArray","$itm","slct","$frozenCols","undefined","prepend","length","sizeHeadings","$table","$th","height","outerHeight","outerWidth","setFrozenColumns","frozenTable","repeaterWrapper","numFrozenColumns","$frozenColumnWrapper","insertBefore","$frozenColumn","clone","$frozenThead","$checkboxLabel","$frozenTheadWrapper","append","attr","sizeFrozenColumns","on","click","positionColumns","scrollTop","frozenEnabled","actionsEnabled","canvasWidth","shouldScroll","createItemActions","actionsHtml","$actionsTable","len","action","name","html","$actionsColumnWrapper","width","$actionsColumn","rowNumber","id","exceptActionRows","inArray","actionsDropdown","label","sizeActionsTable","e","actionName","row","isDisabled","getActionItems","rows","selector","selectorIndex","selectedObj","actionObj","grep","selectedRowsL","clickedRow","item","rowData","clickAction","$actionsTableHeader","columnWidth","frozenOptionsInitialize","$checkboxes","$headerCheckbox","$everyTable","$rowCheckboxes","type","plugin","$checkAll","revertCheckbox","$checkbox","revertingCheckbox","checkbox","preventDefault","currentTarget","parseInt","numSelected","prop","is","trigger","cleared","dataOptions","sortDirection","sortProperty","enabled","helpers","status","removeAttr","toggleActionsHeaderButton","initialize","callback","specialBrowserClass","actions_width","noItems","resize","sizeColumns","infScroll","firstRender","$loader","infiniteScrolling","before","$listContainer","container","count","renderThead","renderTbody","renderItem","renderRow","subset","after","$sorted","areDifferentColumns","oldCols","newCols","newColsL","j","hasOwnProperty","renderColumn","$row","columns","columnIndex","className","content","$col","_auto_width","renderHeader","$tr","$both","sortable","$span","$spans","chevDown","chevron","chevUp","$div","checkAllID","checkBoxMarkup","$header","add","render","clearInfinite","pageIncrement","$tbody","onClickRowRepeaterList","view","$frozenRow","$actionsRow","$checkBox","isMulti","isActions","$repeater","call","keyup","keyCode","colLength","columnAttr","$empty","error","checkboxWidth","$thead","splice","actionsColumn","column","widthTaken","automaticallyGeneratedWidths","col","minWidth","newWidth","Math","floor","ua","window","navigator","userAgent","msie","indexOf","firefox","substring","selectedSelector","ctor"],"mappings":"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","file":"../../views/table-view.js","sourcesContent":["define([\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-eventer\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-geom\",\r\n    \"skylark-domx-query\",\r\n    \"skylark-domx-plugins-toggles/checkbox\",\r\n    \"../view-type-registry\",   \r\n    \"./view-base\"\r\n], function(langx, browser, eventer, noder, geom, $, Checkbox,viewTypeRegistry, ViewBase) {\r\n\r\n  var TableView = ViewBase.inherit({\r\n    klassName : \"TableView\",\r\n\r\n    options: {\r\n        columnRendered: null,\r\n        columnSizing: true,\r\n        columnSyncing: true,\r\n        highlightSortedColumn: true,\r\n        infiniteScroll: false,\r\n        noItemsHTML: 'no items found',\r\n        selectable: true,\r\n        sortClearing: false,\r\n        rowRendered: null,\r\n        frozenColumns: 0,\r\n        actions: false,\r\n\r\n        viewClass : \"repeater-table\",\r\n        tableWrapperClass : \"repeater-table-wrapper\",\r\n        checkClass : \"repeater-table-check\",\r\n        headingClass : \"repeater-table-heading\",\r\n        actionsPlaceHolderClass : \"repeater-table-actions-placeholder\"\r\n    },\r\n\r\n    clearSelectedItems : function listClearSelectedItems () {\r\n        this.repeater.$canvas.find(`.${this.options.checkClass}`).remove();\r\n        this.repeater.$canvas.find(`.${this.options.viewClass} table tbody tr.selected`).removeClass('selected');\r\n    },\r\n\r\n    highlightColumn : function listHighlightColumn (index, force) {\r\n        var tbody = this.repeater.$canvas.find(`.${this.options.tableWrapperClass} > table tbody`);\r\n        if (this.options.highlightSortedColumn || force) {\r\n            tbody.find('td.sorted').removeClass('sorted');\r\n            tbody.find('tr').each(function eachTR () {\r\n                var col = $(this).find('td:nth-child(' + (index + 1) + ')').filter(function filterChildren () { return !$(this).parent().hasClass('empty'); });\r\n                col.addClass('sorted');\r\n            });\r\n        }\r\n    },\r\n\r\n    getSelectedItems : function listGetSelectedItems () {\r\n        var selected = [];\r\n        this.repeater.$canvas.find(`.${this.options.viewClass} .${this.options.tableWrapperClass} > table tbody tr.selected`).each(function eachSelectedTR () {\r\n            var $item = $(this);\r\n            selected.push({\r\n                data: $item.data('item_data'),\r\n                element: $item\r\n            });\r\n        });\r\n        return selected;\r\n    },\r\n\r\n    positionHeadings : function listPositionHeadings () {\r\n        var $wrapper = this.repeater.$().find(`.${this.options.tableWrapperClass}`);\r\n        var offsetLeft = $wrapper.offset().left;\r\n        var scrollLeft = $wrapper.scrollLeft();\r\n        if (scrollLeft > 0) {\r\n            $wrapper.find(`.${this.options.headingClass}`).each(function eachListHeading () {\r\n                var $heading = $(this);\r\n                var left = ($heading.parents('th:first').offset().left - offsetLeft) + 'px';\r\n                $heading.addClass('shifted').css('left', left);\r\n            });\r\n        } else {\r\n            $wrapper.find(`.${this.options.headingClass}`).each(function eachListHeading () {\r\n                $(this).removeClass('shifted').css('left', '');\r\n            });\r\n        }\r\n    },\r\n\r\n    setSelectedItems : function listSetSelectedItems (itms, force) {\r\n        var selectable = this.options.selectable;\r\n        var self = this;\r\n        var data;\r\n        var i;\r\n        var $item;\r\n        var length;\r\n\r\n        var items = itms;\r\n        if (!$.isArray(items)) {\r\n            items = [items];\r\n        }\r\n\r\n        // this function is necessary because lint yells when a function is in a loop\r\n        var checkIfItemMatchesValue = function checkIfItemMatchesValue (rowIndex) {\r\n            $item = $(this);\r\n\r\n            data = $item.data('item_data') || {};\r\n            if (data[items[i].property] === items[i].value) {\r\n                selectItem($item, items[i].selected, rowIndex);\r\n            }\r\n        };\r\n\r\n        var selectItem = function selectItem ($itm, slct, index) {\r\n            var $frozenCols;\r\n\r\n            var select = (slct !== undefined) ? slct : true;\r\n            if (select) {\r\n                if (!force && selectable !== 'multi') {\r\n                    self.clearSelectedItems();\r\n                }\r\n\r\n                if (!$itm.hasClass('selected')) {\r\n                    $itm.addClass('selected');\r\n\r\n                    if (self.options.frozenColumns || self.options.selectable === 'multi') {\r\n                        $frozenCols = self.repeater.$().find('.frozen-column-wrapper tr:nth-child(' + (index + 1) + ')');\r\n\r\n                        $frozenCols.addClass('selected');\r\n                        $frozenCols.find('.repeater-select-checkbox').addClass('checked');\r\n                    }\r\n\r\n                    if (self.options.actions) {\r\n                        self.repeater.$().find('.actions-column-wrapper tr:nth-child(' + (index + 1) + ')').addClass('selected');\r\n                    }\r\n\r\n                    $itm.find('td:first').prepend(`<div class=\"${this.options.checkClass}\"><span class=\"glyphicon glyphicon-ok\"></span></div>`);\r\n                }\r\n            } else {\r\n                if (self.options.frozenColumns) {\r\n                    $frozenCols = self.repeater.$().find('.frozen-column-wrapper tr:nth-child(' + (index + 1) + ')');\r\n\r\n                    $frozenCols.addClass('selected');\r\n                    $frozenCols.find('.repeater-select-checkbox').removeClass('checked');\r\n                }\r\n\r\n                if (self.options.actions) {\r\n                    self.repeater.$().find('.actions-column-wrapper tr:nth-child(' + (index + 1) + ')').removeClass('selected');\r\n                }\r\n\r\n                $itm.find(`.${this.options.checkClass}`).remove();\r\n                $itm.removeClass('selected');\r\n            }\r\n        };\r\n\r\n        if (force === true || selectable === 'multi') {\r\n            length = items.length;\r\n        } else if (selectable) {\r\n            length = (items.length > 0) ? 1 : 0;\r\n        } else {\r\n            length = 0;\r\n        }\r\n\r\n        for (i = 0; i < length; i++) {\r\n            if (items[i].index !== undefined) {\r\n                $item = this.repeater.$canvas.find(`.${this.options.viewClass} .${this.options.tableWrapperClass} > table tbody tr:nth-child(` + (items[i].index + 1) + ')');\r\n                if ($item.length > 0) {\r\n                    selectItem($item, items[i].selected, items[i].index);\r\n                }\r\n            } else if (items[i].property !== undefined && items[i].value !== undefined) {\r\n                this.repeater.$canvas.find(`.${this.options.viewClass} .${this.options.tableWrapperClass} > table tbody tr`).each(checkIfItemMatchesValue);\r\n            }\r\n        }\r\n    },\r\n\r\n    sizeHeadings : function listSizeHeadings () {\r\n        var $table = this.repeater.$().find(`.${this.options.viewClass} table`);\r\n        var self = this;\r\n        $table.find('thead th').each(function eachTH () {\r\n            var $th = $(this);\r\n            var $heading = $th.find(`.${self.options.headingClass}`);\r\n            $heading.css({ height: $th.outerHeight() });\r\n            $heading.outerWidth($heading.data('forced-width') || $th.outerWidth());\r\n        });\r\n    },\r\n\r\n    setFrozenColumns : function listSetFrozenColumns () {\r\n        var frozenTable = this.repeater.$canvas.find('.table-frozen');\r\n        var $wrapper = this.repeater.$().find('.repeater-canvas');\r\n        var $table = this.repeater.$().find(`.${this.options.viewClass} .${this.options.tableWrapperClass} > table`);\r\n        var repeaterWrapper = this.repeater.$().find(`.${this.options.viewClass}`);\r\n        var numFrozenColumns = this.options.frozenColumns;\r\n        var self = this;\r\n\r\n        if (this.options.selectable === 'multi') {\r\n            numFrozenColumns = numFrozenColumns + 1;\r\n            $wrapper.addClass('multi-select-enabled');\r\n        }\r\n\r\n        if (frozenTable.length < 1) {\r\n            // setup frozen column markup\r\n            // main wrapper and remove unneeded columns\r\n            var $frozenColumnWrapper = $('<div class=\"frozen-column-wrapper\"></div>').insertBefore($table);\r\n            var $frozenColumn = $table.clone().addClass('table-frozen');\r\n            $frozenColumn.find('th:not(:lt(' + numFrozenColumns + '))').remove();\r\n            $frozenColumn.find('td:not(:nth-child(n+0):nth-child(-n+' + numFrozenColumns + '))').remove();\r\n\r\n            // need to set absolute heading for vertical scrolling\r\n            var $frozenThead = $frozenColumn.clone().removeClass('table-frozen');\r\n            $frozenThead.find('tbody').remove();\r\n            var $frozenTheadWrapper = $('<div class=\"frozen-thead-wrapper\"></div>').append($frozenThead);\r\n\r\n            // this gets a little messy with all the cloning. We need to make sure the ID and FOR\r\n            // attribs are unique for the 'top most' cloned checkbox\r\n            var $checkboxLabel = $frozenTheadWrapper.find('th label.checkbox-custom.checkbox-inline');\r\n            $checkboxLabel.attr('id', $checkboxLabel.attr('id') + '_cloned');\r\n\r\n            $frozenColumnWrapper.append($frozenColumn);\r\n            repeaterWrapper.append($frozenTheadWrapper);\r\n            this.repeater.$canvas.addClass('frozen-enabled');\r\n        }\r\n\r\n        this.sizeFrozenColumns();\r\n\r\n        $(`.frozen-thead-wrapper .${this.options.headingClass}`).on('click', function onClickHeading () {\r\n            var index = $(this).parent('th').index();\r\n            index = index + 1;\r\n            self.repeater.$().find(`.${this.options.tableWrapperClass} > table thead th:nth-child(` + index + `) .${this.options.headingClass}`)[0].click();\r\n        });\r\n    },\r\n\r\n    positionColumns : function listPositionColumns () {\r\n        var $wrapper = this.repeater.$().find('.repeater-canvas');\r\n        var scrollTop = $wrapper.scrollTop();\r\n        var scrollLeft = $wrapper.scrollLeft();\r\n        var frozenEnabled = this.options.frozenColumns || this.options.selectable === 'multi';\r\n        var actionsEnabled = this.options.actions;\r\n\r\n        var canvasWidth = this.repeater.$().find('.repeater-canvas').outerWidth();\r\n        var tableWidth = this.repeater.$().find(`.${this.options.viewClass} .${this.options.tableWrapperClass} > table`).outerWidth();\r\n\r\n        var actionsWidth = this.repeater.$().find('.table-actions') ? this.repeater.$().find('.table-actions').outerWidth() : 0;\r\n\r\n        var shouldScroll = (tableWidth - (canvasWidth - actionsWidth)) >= scrollLeft;\r\n\r\n\r\n        if (scrollTop > 0) {\r\n            $wrapper.find(`.${this.options.headingClass}`).css('top', scrollTop);\r\n        } else {\r\n            $wrapper.find(`.${this.options.headingClass}`).css('top', '0');\r\n        }\r\n\r\n        if (scrollLeft > 0) {\r\n            if (frozenEnabled) {\r\n                $wrapper.find('.frozen-thead-wrapper').css('left', scrollLeft);\r\n                $wrapper.find('.frozen-column-wrapper').css('left', scrollLeft);\r\n            }\r\n            if (actionsEnabled && shouldScroll) {\r\n                $wrapper.find('.actions-thead-wrapper').css('right', -scrollLeft);\r\n                $wrapper.find('.actions-column-wrapper').css('right', -scrollLeft);\r\n            }\r\n        } else {\r\n            if (frozenEnabled) {\r\n                $wrapper.find('.frozen-thead-wrapper').css('left', '0');\r\n                $wrapper.find('.frozen-column-wrapper').css('left', '0');\r\n            }\r\n            if (actionsEnabled) {\r\n                $wrapper.find('.actions-thead-wrapper').css('right', '0');\r\n                $wrapper.find('.actions-column-wrapper').css('right', '0');\r\n            }\r\n        }\r\n    },\r\n\r\n    createItemActions : function () {\r\n        var actionsHtml = '';\r\n        var self = this;\r\n        var i;\r\n        var $table = this.repeater.$().find(`.${this.options.viewClass} .${this.options.tableWrapperClass} > table`);\r\n        var $actionsTable = this.repeater.$canvas.find('.table-actions');\r\n        var len = this.options.actions.items.length;\r\n        if (len == 1) {\r\n            var action = this.options.actions.items[0];\r\n            actionsHtml = '<a href=\"javascript:void(0)\" data-action=\"' + action.name + '\" class=\"action-item\"> ' + action.html + '</a>'\r\n            if ($actionsTable.length < 1) {\r\n                var $actionsColumnWrapper = $('<div class=\"actions-column-wrapper\" style=\"width: ' + this.options.actions.width + 'px\"></div>').insertBefore($table);\r\n                var $actionsColumn = $table.clone().addClass('table-actions');\r\n                $actionsColumn.find('th:not(:last-child)').remove();\r\n                $actionsColumn.find('tr td:not(:last-child)').remove();\r\n\r\n                var $actionsCells = $actionsColumn.find('td');\r\n\r\n                $actionsCells.each(function (rowNumber) {\r\n                    var id = $(this).parent().attr(\"id\");\r\n                    var data = $(\"#\" + id).data(\"item_data\")\r\n                    if (self.options.exceptActionRows && data && langx.inArray(self.options.exceptActionRows, data.name)) {\r\n                        $(this).html(\"-\");\r\n                    } else {\r\n                        $(this).html(actionsHtml);\r\n                    }\r\n                    $(this).find('a').attr('data-row', rowNumber + 1);\r\n                });\r\n            }\r\n        } else {\r\n            for (i = 0; i < len; i++) {\r\n                var action = this.options.actions.items[i];\r\n                var html = action.html;\r\n\r\n                actionsHtml += '<li class=\"' + action.name + '\"><a href=\"javascript:void(0)\" data-action=\"' + action.name + '\" class=\"action-item\"> ' + html + '</a></li>';\r\n            }\r\n            var actionsDropdown = '<ul class=\"ul-inline list-unstyled ul-horizontally\" role=\"menu\">' +\r\n                actionsHtml + '</ul>';\r\n            if ($actionsTable.length < 1) {\r\n                var $actionsColumnWrapper = $('<div class=\"actions-column-wrapper\" style=\"width: ' + this.options.actions.width + 'px\"></div>').insertBefore($table);\r\n                var $actionsColumn = $table.clone().addClass('table-actions');\r\n                $actionsColumn.find('th:not(:last-child)').remove();\r\n                $actionsColumn.find('tr td:not(:last-child)').remove();\r\n\r\n                // Dont show actions dropdown in header if not multi select\r\n                if (this.options.selectable === 'multi' || this.options.selectable === 'action') {\r\n                    $actionsColumn.find('thead tr').html('<th><div class=\"repeater-list-heading\">' + actionsDropdown + '</div></th>');\r\n\r\n                    if (this.options.selectable !== 'action') {\r\n                        // disable the header dropdown until an item is selected\r\n                        $actionsColumn.find('thead .btn').attr('disabled', 'disabled');\r\n                    }\r\n                } else {\r\n                    var label = this.options.actions.label || '<span class=\"actions-hidden\">a</span>';\r\n                    $actionsColumn.find('thead tr').addClass('empty-heading').html('<th>' + label + '<div class=\"repeater-list-heading\">' + label + '</div></th>');\r\n                }\r\n\r\n                // Create Actions dropdown for each cell in actions table\r\n                var $actionsCells = $actionsColumn.find('td');\r\n\r\n                $actionsCells.each(function addActionsDropdown(rowNumber) {\r\n                    $(this).html(actionsDropdown).addClass(\"r-list-action\");\r\n                    $(this).find('a').attr('data-row', rowNumber + 1);\r\n                });\r\n            }\r\n        }\r\n\r\n        $actionsColumnWrapper.append($actionsColumn);\r\n\r\n        this.repeater.$canvas.addClass('actions-enabled');\r\n        this.sizeActionsTable();\r\n\r\n        // row level actions click\r\n        this.repeater.$().find('.table-actions tbody .action-item').on('click', function onBodyActionItemClick(e) {\r\n            if (!self.isDisabled) {\r\n                var actionName = $(this).data('action');\r\n                var row = $(this).data('row');\r\n                var selected = {\r\n                    actionName: actionName,\r\n                    rows: [row]\r\n                };\r\n                self.getActionItems(selected, e);\r\n            }\r\n        });\r\n        // bulk actions click\r\n        this.repeater.$().find('.table-actions thead .action-item').on('click', function onHeadActionItemClick(e) {\r\n            if (!self.isDisabled) {\r\n                var actionName = $(this).data('action');\r\n                var selected = {\r\n                    actionName: actionName,\r\n                    rows: []\r\n                };\r\n\r\n                var selector = `.${this.options.tableWrapperClass} > table .selected`;\r\n\r\n                if ( self.options.selectable === 'action' ) {\r\n                    selector = `.${this.options.tableWrapperClass} > table tr`;\r\n                }\r\n\r\n                self.repeater.$().find(selector).each(function eachSelector(selectorIndex) {\r\n                    selected.rows.push(selectorIndex + 1);\r\n                });\r\n\r\n                self.getActionItems(selected, e);\r\n            }\r\n        });\r\n    },\r\n\r\n    getActionItems : function listGetActionItems (selected, e) {\r\n        var selectedObj = [];\r\n        var actionObj = $.grep(this.options.actions.items, function matchedActions (actions) {\r\n            return actions.name === selected.actionName;\r\n        })[0];\r\n        for (var i = 0, selectedRowsL = selected.rows.length; i < selectedRowsL; i++) {\r\n            var clickedRow = this.repeater.$canvas.find(`.${this.options.tableWrapperClass} > table tbody tr:nth-child(` + selected.rows[i] + ')');\r\n            selectedObj.push({\r\n                item: clickedRow,\r\n                rowData: clickedRow.data('item_data')\r\n            });\r\n        }\r\n        if (selectedObj.length === 1) {\r\n            selectedObj = selectedObj[0];\r\n        }\r\n\r\n        if (actionObj.clickAction) {\r\n            var callback = function noop () {};// for backwards compatibility. No idea why this was originally here...\r\n            actionObj.clickAction(selectedObj, callback, e);\r\n        }\r\n    },\r\n\r\n    sizeActionsTable : function listSizeActionsTable () {\r\n        var $actionsTable = this.repeater.$().find(`.${this.options.viewClass} table.table-actions`);\r\n        var $actionsTableHeader = $actionsTable.find('thead tr th');\r\n        var $table = this.repeater.$().find(`.${this.options.tableWrapperClass} > table`);\r\n\r\n        $actionsTableHeader.outerHeight($table.find('thead tr th').outerHeight());\r\n        $actionsTableHeader.find(`.${this.options.headingClass}`).outerHeight($actionsTableHeader.outerHeight());\r\n        $actionsTable.find('tbody tr td:first-child').each(function eachFirstChild (i) {\r\n            $(this).outerHeight($table.find('tbody tr:eq(' + i + ') td').outerHeight());\r\n        });\r\n    },\r\n\r\n    sizeFrozenColumns : function listSizeFrozenColumns () {\r\n        var $table = this.repeater.$().find(`.${this.options.viewClass} .${this.options.tableWrapperClass} > table`);\r\n\r\n        this.repeater.$().find(`.${this.options.viewClass} table.table-frozen tr`).each(function eachTR (i) {\r\n            $(this).height($table.find('tr:eq(' + i + ')').height());\r\n        });\r\n\r\n        var columnWidth = $table.find('td:eq(0)').outerWidth();\r\n        this.repeater.$().find('.frozen-column-wrapper, .frozen-thead-wrapper').width(columnWidth);\r\n    },\r\n\r\n    frozenOptionsInitialize : function listFrozenOptionsInitialize () {\r\n        var $checkboxes = this.repeater.$().find('.frozen-column-wrapper .checkbox-inline');\r\n        var $headerCheckbox = this.repeater.$().find('.header-checkbox .checkbox-custom');\r\n        var $everyTable = this.repeater.$().find(`.${this.options.viewClass} table`);\r\n        var self = this;\r\n\r\n        // Make sure if row is hovered that it is shown in frozen column as well\r\n        this.repeater.$().find('tr.selectable').on('mouseover mouseleave', function onMouseEvents (e) {\r\n            var index = $(this).index();\r\n            index = index + 1;\r\n            if (e.type === 'mouseover') {\r\n                $everyTable.find('tbody tr:nth-child(' + index + ')').addClass('hovered');\r\n            } else {\r\n                $everyTable.find('tbody tr:nth-child(' + index + ')').removeClass('hovered');\r\n            }\r\n        });\r\n\r\n        $headerCheckbox.plugin(\"lark.toggles.checkbox\");\r\n        $checkboxes.plugin(\"lark.toggles.checkbox\");\r\n\r\n        // Row checkboxes\r\n        var $rowCheckboxes = this.repeater.$().find('.table-frozen tbody .checkbox-inline');\r\n        var $checkAll = this.repeater.$().find('.frozen-thead-wrapper thead .checkbox-inline input');\r\n        $rowCheckboxes.on('change', function onChangeRowCheckboxes (e) {\r\n            e.preventDefault();\r\n\r\n            if (!self.revertingCheckbox) {\r\n                if (self.isDisabled) {\r\n                    revertCheckbox($(e.currentTarget));\r\n                } else {\r\n                    var row = $(this).attr('data-row');\r\n                    row = parseInt(row, 10) + 1;\r\n                    self.repeater.$().find(`.${this.options.tableWrapperClass} > table tbody tr:nth-child(` + row + ')').click();\r\n\r\n                    var numSelected = self.repeater.$().find('.table-frozen tbody .checkbox-inline.checked').length;\r\n                    if (numSelected === 0) {\r\n                        $checkAll.prop('checked', false);\r\n                        $checkAll.prop('indeterminate', false);\r\n                    } else if (numSelected === $rowCheckboxes.length) {\r\n                        $checkAll.prop('checked', true);\r\n                        $checkAll.prop('indeterminate', false);\r\n                    } else {\r\n                        $checkAll.prop('checked', false);\r\n                        $checkAll.prop('indeterminate', true);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        // \"Check All\" checkbox\r\n        $checkAll.on('change', function onChangeCheckAll (e) {\r\n            if (!self.revertingCheckbox) {\r\n                if (self.isDisabled) {\r\n                    revertCheckbox($(e.currentTarget));\r\n                } else if ($(this).is(':checked')) {\r\n                    self.repeater.$().find(`.${this.options.tableWrapperClass} > table tbody tr:not(.selected)`).click();\r\n                    self.repeater.$().trigger('selected', $checkboxes);\r\n                } else {\r\n                    self.repeater.$().find(`.${this.options.tableWrapperClass} > table tbody tr.selected`).click();\r\n                    self.repeater.$().trigger('deselected', $checkboxes);\r\n                }\r\n            }\r\n        });\r\n\r\n        function revertCheckbox ($checkbox) {\r\n            self.revertingCheckbox = true;\r\n            $checkbox.checkbox('toggle');\r\n            delete self.revertingCheckbox;\r\n        }\r\n    },\r\n\r\n    cleared: function cleared () {\r\n        if (this.options.columnSyncing) {\r\n            this.sizeHeadings();\r\n        }\r\n    },\r\n    dataOptions: function dataOptions (options) {\r\n        if (this.sortDirection) {\r\n            options.sortDirection = this.sortDirection;\r\n        }\r\n        if (this.sortProperty) {\r\n            options.sortProperty = this.sortProperty;\r\n        }\r\n        return options;\r\n    },\r\n    enabled: function enabled (helpers) {\r\n        if (this.options.actions) {\r\n            if (!helpers.status) {\r\n                this.repeater.$canvas.find('.repeater-actions-button').attr('disabled', 'disabled');\r\n            } else {\r\n                this.repeater.$canvas.find('.repeater-actions-button').removeAttr('disabled');\r\n                this.toggleActionsHeaderButton();\r\n            }\r\n        }\r\n    },\r\n    initialize: function initialize (helpers, callback) {\r\n        this.sortDirection = null;\r\n        this.sortProperty = null;\r\n        this.specialBrowserClass = this.specialBrowserClass();\r\n        this.actions_width = (this.options.actions.width !== undefined) ? this.options.actions.width : 37;\r\n        this.noItems = false;\r\n        callback();\r\n    },\r\n    resize: function resize () {\r\n        this.sizeColumns(this.repeater.$().find(`.${this.options.tableWrapperClass} > table thead tr`));\r\n        if (this.options.actions) {\r\n            this.sizeActionsTable();\r\n        }\r\n        if (this.options.frozenColumns || this.options.selectable === 'multi') {\r\n            this.sizeFrozenColumns();\r\n        }\r\n        if (this.options.columnSyncing) {\r\n            this.sizeHeadings();\r\n        }\r\n    },\r\n    selected: function selected () {\r\n        var infScroll = this.options.infiniteScroll;\r\n        var opts;\r\n\r\n        this.firstRender = true;\r\n        this.repeater.$loader.addClass('noHeader');\r\n\r\n        if (infScroll) {\r\n            opts = (typeof infScroll === 'object') ? infScroll : {};\r\n            this.repeater.infiniteScrolling(true, opts);\r\n        }\r\n    },\r\n    before: function before (helpers) {\r\n        var $listContainer = helpers.container.find(`.${this.options.viewClass}`);\r\n        var self = this;\r\n        var $table;\r\n\r\n        // this is a patch, it was pulled out of `renderThead`\r\n        if (helpers.data.count > 0) {\r\n            this.noItems = false;\r\n        } else {\r\n            this.noItems = true;\r\n        }\r\n\r\n        if ($listContainer.length < 1) {\r\n            $listContainer = $(`<div class=\"${this.options.viewClass} ` + this.specialBrowserClass() + `\" data-preserve=\"shallow\"><div class=\"${this.options.tableWrapperClass}\" data-infinite=\"true\" data-preserve=\"shallow\"><table aria-readonly=\"true\" class=\"table\" data-preserve=\"shallow\" role=\"grid\"></table></div></div>`);\r\n            $listContainer.find(`.${this.options.tableWrapperClass}`).on('scroll.lark.repeaterList', function onScrollRepeaterList () {\r\n                if (self.options.columnSyncing) {\r\n                    self.positionHeadings();\r\n                }\r\n            });\r\n            if (self.options.frozenColumns || self.options.actions || self.options.selectable === 'multi') {\r\n                helpers.container.on('scroll.lark.repeaterList', function onScrollRepeaterList () {\r\n                    self.positionColumns();\r\n                });\r\n            }\r\n\r\n            helpers.container.append($listContainer);\r\n        }\r\n        helpers.container.removeClass('actions-enabled actions-enabled multi-select-enabled');\r\n\r\n        $table = $listContainer.find('table');\r\n        this.renderThead($table, helpers.data);\r\n        this.renderTbody($table, helpers.data);\r\n\r\n        return false;\r\n    },\r\n    renderItem: function renderItem (helpers) {\r\n        this.renderRow(helpers.container, helpers.subset, helpers.index);\r\n        return false;\r\n    },\r\n    after: function after () {\r\n        var $sorted;\r\n\r\n        if ((this.options.frozenColumns || this.options.selectable === 'multi') && !this.noItems) {\r\n            this.setFrozenColumns();\r\n        }\r\n\r\n        if (this.options.actions && !this.noItems) {\r\n            this.createItemActions();\r\n            this.sizeActionsTable();\r\n        }\r\n\r\n        if ((this.options.frozenColumns || this.options.actions || this.options.selectable === 'multi') && !this.noItems) {\r\n            this.positionColumns();\r\n            this.frozenOptionsInitialize();\r\n        }\r\n\r\n        if (this.options.columnSyncing) {\r\n            this.sizeHeadings();\r\n            this.positionHeadings();\r\n        }\r\n\r\n        $sorted = this.repeater.$canvas.find(`.${this.options.tableWrapperClass} > table .${this.options.headingClass}.sorted`);\r\n        if ($sorted.length > 0) {\r\n            this.highlightColumn($sorted.data('fu_item_index'));\r\n        }\r\n\r\n        return false;\r\n    },\r\n\r\n\r\n\r\n    // ADDITIONAL METHODS\r\n    areDifferentColumns : function areDifferentColumns (oldCols, newCols) {\r\n        if (!newCols) {\r\n            return false;\r\n        }\r\n        if (!oldCols || (newCols.length !== oldCols.length)) {\r\n            return true;\r\n        }\r\n        for (var i = 0, newColsL = newCols.length; i < newColsL; i++) {\r\n            if (!oldCols[i]) {\r\n                return true;\r\n            }\r\n\r\n            for (var j in newCols[i]) {\r\n                if (newCols[i].hasOwnProperty(j) && oldCols[i][j] !== newCols[i][j]) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    },\r\n\r\n    renderColumn : function renderColumn ($row, rows, rowIndex, columns, columnIndex) {\r\n        var className = columns[columnIndex].className;\r\n        var content = rows[rowIndex][columns[columnIndex].property];\r\n        var $col = $('<td></td>');\r\n        var width = columns[columnIndex]._auto_width;\r\n\r\n        var property = columns[columnIndex].property;\r\n        if (this.options.actions !== false && property === '@_ACTIONS_@') {\r\n            content = `<div class=\"${this.options.actionsPlaceHolderClass}\" style=\"width: ` + this.actions_width  + 'px\"></div>';\r\n        }\r\n\r\n        content = (content !== undefined) ? content : '';\r\n\r\n        $col.addClass(((className !== undefined) ? className : '')).append(content);\r\n        if (width !== undefined) {\r\n            $col.outerWidth(width);\r\n        }\r\n\r\n        $row.append($col);\r\n\r\n        if (this.options.selectable === 'multi' && columns[columnIndex].property === '@_CHECKBOX_@') {\r\n            var checkBoxMarkup = '<label data-row=\"' + rowIndex + '\" class=\"checkbox-custom checkbox-inline body-checkbox repeater-select-checkbox\">' +\r\n                '<input class=\"sr-only\" type=\"checkbox\"></label>';\r\n\r\n            $col.html(checkBoxMarkup);\r\n        }\r\n\r\n        return $col;\r\n    },\r\n\r\n    renderHeader : function renderHeader ($tr, columns, index) {\r\n        var chevDown = 'glyphicon-chevron-down';\r\n        var chevron = '.glyphicon.rlc:first';\r\n        var chevUp = 'glyphicon-chevron-up';\r\n        var $div = $(`<div class=\"${this.options.headingClass}\"><span class=\"glyphicon rlc\"></span></div>`);\r\n        var checkAllID = (this.repeater.$().attr('id') + '_' || '') + 'checkall';\r\n\r\n        var checkBoxMarkup = `<div class=\"${this.options.headingClass} header-checkbox\">` +\r\n                '<label id=\"' + checkAllID + '\" class=\"checkbox-custom checkbox-inline\">' +\r\n                    '<input class=\"sr-only\" type=\"checkbox\" value=\"\">' +\r\n                    '<span class=\"checkbox-label\">&nbsp;</span>' +\r\n                '</label>' +\r\n            '</div>';\r\n\r\n        var $header = $('<th></th>');\r\n        var self = this;\r\n        var $both;\r\n        var className;\r\n        var sortable;\r\n        var $span;\r\n        var $spans;\r\n\r\n        $div.data('fu_item_index', index);\r\n        $div.prepend(columns[index].label);\r\n        $header.html($div.html()).find('[id]').removeAttr('id');\r\n\r\n        if (columns[index].property !== '@_CHECKBOX_@') {\r\n            $header.append($div);\r\n        } else {\r\n            $header.append(checkBoxMarkup);\r\n        }\r\n\r\n        $both = $header.add($div);\r\n        $span = $div.find(chevron);\r\n        $spans = $span.add($header.find(chevron));\r\n\r\n        if (this.options.actions && columns[index].property === '@_ACTIONS_@') {\r\n            var width = this.actions_width;\r\n            $header.css('width', width);\r\n            $div.css('width', width);\r\n        }\r\n\r\n        className = columns[index].className;\r\n        if (className !== undefined) {\r\n            $both.addClass(className);\r\n        }\r\n\r\n\r\n        sortable = columns[index].sortable;\r\n        if (sortable) {\r\n            $both.addClass('sortable');\r\n            $div.on('click.lark.repeaterList', function onClickRepeaterList () {\r\n                if (!self.isDisabled) {\r\n                    self.sortProperty = (typeof sortable === 'string') ? sortable : columns[index].property;\r\n                    if ($div.hasClass('sorted')) {\r\n                        if ($span.hasClass(chevUp)) {\r\n                            $spans.removeClass(chevUp).addClass(chevDown);\r\n                            self.sortDirection = 'desc';\r\n                        } else if (!self.options.sortClearing) {\r\n                            $spans.removeClass(chevDown).addClass(chevUp);\r\n                            self.sortDirection = 'asc';\r\n                        } else {\r\n                            $both.removeClass('sorted');\r\n                            $spans.removeClass(chevDown);\r\n                            self.sortDirection = null;\r\n                            self.sortProperty = null;\r\n                        }\r\n                    } else {\r\n                        $tr.find(`th, .${self.options.headingClass}`).removeClass('sorted');\r\n                        $spans.removeClass(chevDown).addClass(chevUp);\r\n                        self.sortDirection = 'asc';\r\n                        $both.addClass('sorted');\r\n                    }\r\n\r\n                    self.repeater.render({\r\n                        clearInfinite: true,\r\n                        pageIncrement: null\r\n                    });\r\n                }\r\n            });\r\n        }\r\n\r\n        if (columns[index].sortDirection === 'asc' || columns[index].sortDirection === 'desc') {\r\n            $tr.find(`th, .${this.options.headingClass}`).removeClass('sorted');\r\n            $both.addClass('sortable sorted');\r\n            if (columns[index].sortDirection === 'asc') {\r\n                $spans.addClass(chevUp);\r\n                this.sortDirection = 'asc';\r\n            } else {\r\n                $spans.addClass(chevDown);\r\n                this.sortDirection = 'desc';\r\n            }\r\n\r\n            this.sortProperty = (typeof sortable === 'string') ? sortable : columns[index].property;\r\n        }\r\n\r\n        $tr.append($header);\r\n    },\r\n\r\n\r\n    renderRow : function renderRow ($tbody, rows, index) {\r\n\r\n        function onClickRowRepeaterList (view) {\r\n            var repeater = view.repeater;\r\n            var isMulti = repeater.options.selectable === 'multi';\r\n            var isActions = repeater.options.actions;\r\n            var $repeater = repeater.$();\r\n\r\n            if (!repeater.isDisabled) {\r\n                var $item = $(this);\r\n                var index = $(this).index() + 1;\r\n                var $frozenRow = $repeater.find('.frozen-column-wrapper tr:nth-child(' + index + ')');\r\n                var $actionsRow = $repeater.find('.actions-column-wrapper tr:nth-child(' + index + ')');\r\n                var $checkBox = $repeater.find('.frozen-column-wrapper tr:nth-child(' + index + ') .checkbox-inline');\r\n\r\n                if ($item.is('.selected')) {\r\n                    $item.removeClass('selected');\r\n                    if (isMulti) {\r\n                        $checkBox.click();\r\n                        $frozenRow.removeClass('selected');\r\n                        if (isActions) {\r\n                            $actionsRow.removeClass('selected');\r\n                        }\r\n                    } else {\r\n                        $item.find(`.${view.options.checkClass}`).remove();\r\n                    }\r\n\r\n                    $repeater.trigger('deselected.lark.repeaterList', $item);\r\n                } else {\r\n                    if (!isMulti) {\r\n                        repeater.$canvas.find(`.${view.options.checkClass}`).remove();\r\n                        repeater.$canvas.find(`.${view.options.viewClass} tbody tr.selected`).each(function deslectRow () {\r\n                            $(this).removeClass('selected');\r\n                            $repeater.trigger('deselected.lark.repeaterList', $(this));\r\n                        });\r\n                        $item.find('td:first').prepend(`<div class=\"${view.options.checkClass}\"><span class=\"glyphicon glyphicon-ok\"></span></div>`);\r\n                        $item.addClass('selected');\r\n                        $frozenRow.addClass('selected');\r\n                    } else {\r\n                        $checkBox.click();\r\n                        $item.addClass('selected');\r\n                        $frozenRow.addClass('selected');\r\n                        if (isActions) {\r\n                            $actionsRow.addClass('selected');\r\n                        }\r\n                    }\r\n                    $repeater.trigger('selected.lark.repeaterList', $item);\r\n                }\r\n\r\n                view.toggleActionsHeaderButton(repeater);\r\n            }\r\n        }\r\n\r\n\r\n        var $row = $('<tr></tr>');\r\n\r\n        if (this.options.selectable) {\r\n            $row.data('item_data', rows[index]);\r\n\r\n            if (this.options.selectable !== 'action') {\r\n                $row.addClass('selectable');\r\n                $row.attr('tabindex', 0);   // allow items to be tabbed to / focused on\r\n\r\n                var repeater = this;\r\n                $row.on('click.lark.repeaterList', function callOnClickRowRepeaterList() {\r\n                    onClickRowRepeaterList.call(this, repeater);\r\n                });\r\n\r\n                // allow selection via enter key\r\n                $row.keyup(function onRowKeyup (e) {\r\n                    if (e.keyCode === 13) {\r\n                        // triggering a standard click event to be caught by the row click handler above\r\n                        $row.trigger('click.lark.repeaterList');\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        if (this.options.actions && !this.options.selectable) {\r\n            $row.data('item_data', rows[index]);\r\n        }\r\n\r\n        var columns = [];\r\n        for (var i = 0, length = this.columns.length; i < length; i++) {\r\n            columns.push(this.renderColumn($row, rows, index, this.columns, i));\r\n        }\r\n\r\n        $tbody.append($row);\r\n\r\n        if (this.options.columnRendered) {\r\n            for (var columnIndex = 0, colLength = columns.length; columnIndex < colLength; columnIndex++) {\r\n                if (!(this.columns[columnIndex].property === '@_CHECKBOX_@' || this.columns[columnIndex].property === '@_ACTIONS_@')) {\r\n                    this.options.columnRendered({\r\n                        container: $row,\r\n                        columnAttr: this.columns[columnIndex].property,\r\n                        item: columns[columnIndex],\r\n                        rowData: rows[index]\r\n                    }, function noop () {});\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.options.rowRendered) {\r\n            this.options.rowRendered({\r\n                container: $tbody,\r\n                item: $row,\r\n                rowData: rows[index]\r\n            }, function noop () {});\r\n        }\r\n    },\r\n\r\n    renderTbody : function renderTbody ($table, data) {\r\n        var $tbody = $table.find('tbody');\r\n        var $empty;\r\n\r\n        if ($tbody.length < 1) {\r\n            $tbody = $('<tbody data-container=\"true\"></tbody>');\r\n            $table.append($tbody);\r\n        }\r\n\r\n        if (typeof data.error === 'string' && data.error.length > 0) {\r\n            $empty = $('<tr class=\"empty text-danger\"><td colspan=\"' + this.columns.length + '\"></td></tr>');\r\n            $empty.find('td').append(data.error);\r\n            $tbody.append($empty);\r\n        } else if (data.items && data.items.length < 1) {\r\n            $empty = $('<tr class=\"empty\"><td colspan=\"' + this.columns.length + '\"></td></tr>');\r\n            $empty.find('td').append(this.options.noItemsHTML);\r\n            $tbody.append($empty);\r\n        }\r\n    },\r\n\r\n    renderThead : function renderThead ($table, data) {\r\n        var columns = data.columns || [];\r\n        var $thead = $table.find('thead');\r\n        var i;\r\n        var length;\r\n        var $tr;\r\n\r\n        if (this.firstRender || this.areDifferentColumns(this.columns, columns) || $thead.length === 0) {\r\n            $thead.remove();\r\n\r\n            // noItems is set in `before` method\r\n\r\n            if (this.options.selectable === 'multi' && !this.noItems) {\r\n                var checkboxColumn = {\r\n                    label: 'c',\r\n                    property: '@_CHECKBOX_@',\r\n                    sortable: false\r\n                };\r\n                columns.splice(0, 0, checkboxColumn);\r\n            }\r\n\r\n            this.columns = columns;\r\n            this.firstRender = false;\r\n            this.repeater.$loader.removeClass('noHeader');\r\n\r\n            // keep action column header even when empty, you'll need it later....\r\n            if (this.options.actions) {\r\n                var actionsColumn = {\r\n                    label: this.options.actions.label || '<span class=\"actions-hidden\">a</span>',\r\n                    property: '@_ACTIONS_@',\r\n                    sortable: false,\r\n                    width: this.actions_width\r\n                };\r\n                columns.push(actionsColumn);\r\n            }\r\n\r\n\r\n            $thead = $('<thead data-preserve=\"deep\"><tr></tr></thead>');\r\n            $tr = $thead.find('tr');\r\n            for (i = 0, length = columns.length; i < length; i++) {\r\n                this.renderHeader($tr, columns, i);\r\n            }\r\n            $table.prepend($thead);\r\n\r\n            if (this.options.selectable === 'multi' && !this.noItems) {\r\n                // after checkbox column is created need to get width of checkbox column from\r\n                // its css class\r\n                var checkboxWidth = this.repeater.$().find(`.${this.options.tableWrapperClass} .header-checkbox`).outerWidth();\r\n                var selectColumn = $.grep(columns, function grepColumn (column) {\r\n                    return column.property === '@_CHECKBOX_@';\r\n                })[0];\r\n                selectColumn.width = checkboxWidth;\r\n            }\r\n            this.sizeColumns($tr);\r\n        }\r\n    },\r\n\r\n    sizeColumns : function sizeColumns ($tr) {\r\n        var automaticallyGeneratedWidths = [];\r\n        var self = this;\r\n        var i;\r\n        var length;\r\n        var newWidth;\r\n        var widthTaken;\r\n\r\n        if (this.options.columnSizing) {\r\n            i = 0;\r\n            widthTaken = 0;\r\n            $tr.find('th').each(function eachTH () {\r\n                var $th = $(this);\r\n                var width;\r\n                if (self.columns[i].width !== undefined) {\r\n                    width = self.columns[i].width;\r\n                    $th.outerWidth(width);\r\n                    widthTaken += $th.outerWidth();\r\n                    self.columns[i]._auto_width = width;\r\n                } else {\r\n                    var outerWidth = $th.find(`.${self.options.headingClass}`).outerWidth();\r\n                    automaticallyGeneratedWidths.push({\r\n                        col: $th,\r\n                        index: i,\r\n                        minWidth: outerWidth\r\n                    });\r\n                }\r\n\r\n                i++;\r\n            });\r\n\r\n            length = automaticallyGeneratedWidths.length;\r\n            if (length > 0) {\r\n                var canvasWidth = this.repeater.$canvas.find(`.${this.options.tableWrapperClass}`).outerWidth();\r\n                newWidth = Math.floor((canvasWidth - widthTaken) / length);\r\n                for (i = 0; i < length; i++) {\r\n                    if (automaticallyGeneratedWidths[i].minWidth > newWidth) {\r\n                        newWidth = automaticallyGeneratedWidths[i].minWidth;\r\n                    }\r\n                    automaticallyGeneratedWidths[i].col.outerWidth(newWidth);\r\n                    this.columns[automaticallyGeneratedWidths[i].index]._auto_width = newWidth;\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    specialBrowserClass : function specialBrowserClass () {\r\n        var ua = window.navigator.userAgent;\r\n        var msie = ua.indexOf('MSIE ');\r\n        var firefox = ua.indexOf('Firefox');\r\n\r\n        if (msie > 0 ) {\r\n            return 'ie-' + parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);\r\n        } else if (firefox > 0) {\r\n            return 'firefox';\r\n        }\r\n\r\n        return '';\r\n    },\r\n\r\n    toggleActionsHeaderButton : function toggleActionsHeaderButton () {\r\n        var selectedSelector = `.${this.options.tableWrapperClass} > table .selected`;\r\n        var $actionsColumn = this.repeater.$().find('.table-actions');\r\n        var $selected;\r\n\r\n        if (this.options.selectable === 'action') {\r\n            selectedSelector = `.${this.options.tableWrapperClass} > table tr`;\r\n        }\r\n\r\n        $selected = this.repeater.$canvas.find( selectedSelector );\r\n\r\n        if ($selected.length > 0) {\r\n            $actionsColumn.find('thead .btn').removeAttr('disabled');\r\n        } else {\r\n            $actionsColumn.find('thead .btn').attr('disabled', 'disabled');\r\n        }\r\n    }\r\n\r\n\r\n  });\r\n\r\n\r\n\r\n\r\n     viewTypeRegistry[\"table\"] = {\r\n        name : \"table\",\r\n        ctor : TableView\r\n    }; \r\n\r\n    return TableView;\r\n\r\n});"]}