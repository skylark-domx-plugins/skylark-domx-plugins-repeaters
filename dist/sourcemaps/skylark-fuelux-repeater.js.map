{"version":3,"sources":["skylark-fuelux-repeater.js"],"names":["define","langx","browser","eventer","noder","geom","$","plugins","popups","Dropdown","ComboBox","Plugin","inherit","klassName","pluginName","options","autoResizeMenu","filterOnKeypress","showOptionsOnKeypress","filter","list","predicate","self","visible","$dropMenu","find","remove","each","i","$li","this","text","trim","removeClass","addClass","substr","length","append","_construct","elm","overrided","$element","$input","$button","plugin","$inputGroupBtn","on","proxy","itemclicked","inputchanged","menuShown","keypress","setDefaultSelection","items","children","val","_destroy","attr","outerHTML","doSelect","$item","$selectedItem","clearSelection","resizeMenu","width","outerWidth","selectedItem","item","data","txt","mixin","notFound","selectByText","textContent","innerText","toLowerCase","selectByValue","value","selector","selectBySelector","selectByIndex","index","removeData","removeAttr","enable","disable","e","target","parent","trigger","synthetic","preventDefault","focus","IS_NAVIGATIONAL","which","hasClass","toggle","selected","$selected","next","prev","previousKeyPress","extra","prototype","getValue","register","SearchBox","clearOnEmpty","searchOnKeyPress","allowCancel","_elm","$repeater","closest","$icon","buttonclicked","clearPending","activeSearch","search","searchText","clear","action","currentTarget","is","skylark","elmx","fx","SelectList","Repeater","dataSource","callback","count","end","page","pages","start","defaultView","dropPagingCap","staticHeight","views","addons","throb","params","$btn","currentView","$canvas","$count","$end","$filters","$loader","$pageSize","$nextBtn","$pages","$prevBtn","$primaryPaging","$search","$secondaryPaging","$start","$viewport","$views","currentPage","isDisabled","infiniteScrollingCallback","infiniteScrollingCont","infiniteScrollingEnabled","infiniteScrollingEnd","infiniteScrollingOptions","lastPageInput","pageIncrement","resizeTimeout","stamp","Date","getTime","Math","floor","random","storedDataSourceOpts","syncingViewButtonState","viewType","render","clearInfinite","previous","evt","pageInputChange","keyCode","viewChanged","window","clearTimeout","setTimeout","resize","initViewTypes","changeView","opts","preserve","scan","empty","undefined","_view","cleared","clearPreservedDataSourceOptions","destroy","markup","scall","infinitescroll","off","enabled","status","parseInt","html","getDataOptions","dataSourceOptions","preserveDataSourceOptions","returnOptions","view","pageIndex","pageSize","searchValue","dataOptions","infiniteScrolling","footer","viewport","css","height","outerHeight","hide","cont","show","infiniteScrollPaging","NaN","initInfiniteScrolling","helpers","_views","viewTypes","isArray","setting","constructor","Error","ctor","push","isPlainObject","name","itemization","dataFromCombobox","pageInc","pagination","totalPages","currenPageOutput","dropMenu","l","prevView","split","syncViewButtonState","_throbber","className","beforeRender","viewTypeObj","dataSourceReturnedData","doRender","viewportMargins","currentHiddenElement","scrubbedElements","previousProperties","$hiddenElements","parentsUntil","currentElementIndex","style","bottom","top","staticHeightValue","headerHeight","footerHeight","bottomMargin","topMargin","forEach","element","renderItems","container","parents","$itemToCheck","prop","getNestedProperty","obj","property","replace","str","singleQuoteProp","doubleQuoteProp","arrayIndex","dotProp","getDataProperty","key","dataset","_","b","toUpperCase","getAttribute","test","parseJSON","ignore","getItemProperty","state","d","afterRender","callNextInit","currentViewType","nextViewType","initViewType","currentViewtype","initialize","call","renderOptions","keep","pres","detach","attach","ViewBase","Evented","controlsClass","fullScreen","_create$Item","template","itemData","invalid","indexOf","substring","init","repeater","hasControls","that","initOptions","cache","defaults","ctors","unshift","superclass","hasOwnProperty","Object","defineProperty","close","getSelectedItems","addItem","$parent","response","$container","before","addBefore","$dataContainer","renderItem","subset","objectAndPropsToRepeatOnString","repeat","objectAndPropsToRepeatOn","objectToRepeatOn","propsToRepeatOn","slice","console","warn","subItemIndex","addSubItem","after","addAfter","LinearView","alignment","infiniteScroll","itemRendered","noItemsHTML","selectable","clearSelectedItems","setSelectedItems","force","n","compareItemIndex","compareItemSelector","selectItem","$itm","select","thumbnail_clearSelectedItems","infScroll","$cont","$thumbnail","SliderView","slidesContainer","titleElement","displayClass","singleClass","leftEdgeClass","rightEdgeClass","playingClass","slideClass","slideLoadingClass","slideErrorClass","slideContentClass","toggleClass","prevClass","nextClass","closeClass","playPauseClass","displayTransition","clearSlides","toggleControlsOnReturn","toggleControlsOnSlideClick","toggleSlideshowOnSpace","enableKeyboardNavigation","closeOnEscape","closeOnSlideClick","closeOnSwipeUpOrDown","emulateTouchEvents","stopTouchEventsPropagation","hidePageScrollbars","disableScroll","carousel","continuous","unloadElements","startSlideshow","slideshowInterval","preloadRange","transitionSpeed","slideshowTransitionSpeed","event","onslide","onslideend","onslidecomplete","indicatorContainer","activeIndicatorClass","thumbnailProperty","thumbnailIndicators","indicators","support","touch","ontouchstart","DocumentTouch","document","transitions","webkitTransition","prefix","MozTransition","OTransition","transition","elementTests","translateZ","body","appendChild","getComputedStyle","getPropertyValue","transform","translate","backgroundSize","contain","cover","removeChild","createElement","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","cancelAnimationFrame","webkitCancelRequestAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","helper","num","initStartIndex","initView","initEventListeners","ontransitionend","play","slide","to","speed","timeout","direction","naturalDirection","diff","circle","abs","positions","slideWidth","move","animate","getIndex","getNumber","dist","translateX","x","y","slides","translateY","from","timer","setInterval","timeElap","left","clearInterval","time","interval","animationFrameId","pause","add","concat","Array","addSlide","positionSlide","initSlides","resetSlides","unloadAllSlides","returnValue","stopPropagation","cancelBubble","onresize","onmousedown","nodeName","originalEvent","touches","pageX","pageY","onmousemove","touchStart","ontouchmove","onmouseup","ontouchend","onmouseout","related","relatedTarget","contains","now","isScrolling","touchDelta","touchDeltaX","indices","scale","pop","indexForward","indexBackward","distanceForward","distanceBackward","isShortDuration","Number","isValidSlide","isPastBounds","slideHeight","ontouchcancel","onkeydown","toggleControls","toggleSlideshow","handleClick","srcElement","parentNode","getNodeIndex","isTarget","onclick","updateEdgeClasses","handleSlide","loadElements","setTitle","setActiveIndicator","firstChild","title","alt","createTextNode","func","args","wait","apply","loadElement","elements","proxyListener","limit","min","j","unloadSlide","createIndicator","thumbnailUrl","thumbnail","indicator","indicatorPrototype","cloneNode","getElementsByTagName","src","backgroundImage","addIndicator","setAttribute","activeIndicator","slidePrototype","reload","imagePrototype","elementPrototype","clientWidth","clientHeight","len","getItemUrl","type","destroyEventListeners","first","log","bodyOverflowStyle","overflow","display","TableView","columnRendered","columnSizing","columnSyncing","highlightSortedColumn","sortClearing","rowRendered","frozenColumns","actions","viewClass","tableWrapperClass","checkClass","headingClass","actionsPlaceHolderClass","highlightColumn","tbody","col","positionHeadings","$wrapper","offsetLeft","offset","scrollLeft","$heading","itms","checkIfItemMatchesValue","rowIndex","slct","$frozenCols","prepend","sizeHeadings","$table","$th","setFrozenColumns","frozenTable","repeaterWrapper","numFrozenColumns","$frozenColumnWrapper","insertBefore","$frozenColumn","clone","$frozenThead","$frozenTheadWrapper","$checkboxLabel","sizeFrozenColumns","click","positionColumns","scrollTop","frozenEnabled","actionsEnabled","canvasWidth","tableWidth","actionsWidth","shouldScroll","createItemActions","actionsHtml","$actionsTable","$actionsColumnWrapper","$actionsColumn","$actionsCells","rowNumber","id","exceptActionRows","inArray","actionsDropdown","label","sizeActionsTable","actionName","row","rows","getActionItems","selectorIndex","createItemActions_1","actions_width","selectedObj","actionObj","grep","selectedRowsL","clickedRow","rowData","clickAction","$actionsTableHeader","columnWidth","frozenOptionsInitialize","$checkboxes","$headerCheckbox","$everyTable","checkbox","$rowCheckboxes","$checkAll","revertCheckbox","$checkbox","revertingCheckbox","numSelected","sortDirection","sortProperty","toggleActionsHeaderButton","specialBrowserClass","noItems","sizeColumns","firstRender","$listContainer","renderThead","renderTbody","renderRow","$sorted","renderColumn","$row","columns","columnIndex","content","$col","_auto_width","checkBoxMarkup","renderHeader","$tr","$both","sortable","$span","$spans","chevDown","chevUp","$div","checkAllID","$header","$tbody","isMulti","isActions","$frozenRow","$actionsRow","$checkBox","keyup","colLength","columnAttr","$empty","error","$thead","oldCols","newCols","newColsL","areDifferentColumns","splice","actionsColumn","checkboxWidth","selectColumn","column","newWidth","widthTaken","automaticallyGeneratedWidths","minWidth","ua","navigator","userAgent","msie","firefox","selectedSelector","TileView","center","justify","right","thumbnail_injectSpacers","main"],"mappings":"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","file":"../skylark-fuelux-repeater.js","sourcesContent":["define('skylark-domx-plugins-popups/combobox',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-domx-plugins-base\",\r\n  \"./popups\",\r\n  \"./dropdown\"\r\n],function(langx,browser,eventer,noder,geom,$,plugins,popups,Dropdown){\r\n\r\n\r\n\t// COMBOBOX CONSTRUCTOR AND PROTOTYPE\r\n\r\n\tvar ComboBox = plugins.Plugin.inherit({\r\n\t\tklassName: \"ComboBox\",\r\n\r\n\t\tpluginName : \"lark.popups.combobox\",\r\n\r\n\t\toptions : {\r\n\r\n\t\t\tautoResizeMenu: true,\r\n\t\t\tfilterOnKeypress: false,\r\n\t\t\tshowOptionsOnKeypress: false,\r\n\t\t\tfilter: function filter (list, predicate, self) {\r\n\t\t\t\tvar visible = 0;\r\n\t\t\t\tself.$dropMenu.find('.empty-indicator').remove();\r\n\r\n\t\t\t\tlist.each(function (i) {\r\n\t\t\t\t\tvar $li = $(this);\r\n\t\t\t\t\tvar text = $(this).text().trim();\r\n\r\n\t\t\t\t\t$li.removeClass();\r\n\r\n\t\t\t\t\tif (text === predicate) {\r\n\t\t\t\t\t\t$li.addClass('text-success');\r\n\t\t\t\t\t\tvisible++;\r\n\t\t\t\t\t} else if (text.substr(0, predicate.length) === predicate) {\r\n\t\t\t\t\t\t$li.addClass('text-info');\r\n\t\t\t\t\t\tvisible++;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t$li.addClass('hidden');\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif (visible === 0) {\r\n\t\t\t\t\tself.$dropMenu.append('<li class=\"empty-indicator text-muted\"><em>No Matches</em></li>');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n    \t_construct : function(elm,options) {\r\n      \t\tthis.overrided(elm,options);\r\n      \t\tthis.$element = this.$();\r\n\r\n\t\t\tthis.$dropMenu = this.$element.find('.dropdown-menu');\r\n\t\t\tthis.$input = this.$element.find('input');\r\n\t\t\tthis.$button = this.$element.find('.btn');\r\n\t\t\tthis.$button.plugin(\"lark.popups.dropdown\");\r\n\t\t\tthis.$inputGroupBtn = this.$element.find('.input-group-btn');\r\n\r\n\t\t\tthis.$element.on('click.lark', 'a', langx.proxy(this.itemclicked, this));\r\n\t\t\tthis.$element.on('change.lark', 'input', langx.proxy(this.inputchanged, this));\r\n\t\t\tthis.$element.on('shown.bs.dropdown', langx.proxy(this.menuShown, this));\r\n\t\t\tthis.$input.on('keyup.lark', langx.proxy(this.keypress, this));\r\n\r\n\t\t\t// set default selection\r\n\t\t\tthis.setDefaultSelection();\r\n\r\n\t\t\t// if dropdown is empty, disable it\r\n\t\t\tvar items = this.$dropMenu.children('li');\r\n\t\t\tif( items.length === 0) {\r\n\t\t\t\tthis.$button.addClass('disabled');\r\n\t\t\t}\r\n\r\n\t\t\t// filter on load in case the first thing they do is press navigational key to pop open the menu\r\n\t\t\tif (this.options.filterOnKeypress) {\r\n\t\t\t\tthis.options.filter(this.$dropMenu.find('li'), this.$input.val(), this);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_destroy: function () {\r\n\t\t\tthis.$element.remove();\r\n\t\t\t// remove any external bindings\r\n\t\t\t// [none]\r\n\r\n\t\t\t// set input value attrbute in markup\r\n\t\t\tthis.$element.find('input').each(function () {\r\n\t\t\t\t$(this).attr('value', $(this).val());\r\n\t\t\t});\r\n\r\n\t\t\t// empty elements to return to original markup\r\n\t\t\t// [none]\r\n\r\n\t\t\treturn this.$element[0].outerHTML;\r\n\t\t},\r\n\r\n\t\tdoSelect: function ($item) {\r\n\r\n\t\t\tif (typeof $item[0] !== 'undefined') {\r\n\t\t\t\t// remove selection from old item, may result in remove and\r\n\t\t\t\t// re-addition of class if item is the same\r\n\t\t\t\tthis.$element.find('li.selected:first').removeClass('selected');\r\n\r\n\t\t\t\t// add selection to new item\r\n\t\t\t\tthis.$selectedItem = $item;\r\n\t\t\t\tthis.$selectedItem.addClass('selected');\r\n\r\n\t\t\t\t// update input\r\n\t\t\t\tthis.$input.val(this.$selectedItem.text().trim());\r\n\t\t\t} else {\r\n\t\t\t\t// this is a custom input, not in the menu\r\n\t\t\t\tthis.$selectedItem = null;\r\n\t\t\t\tthis.$element.find('li.selected:first').removeClass('selected');\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tclearSelection: function () {\r\n\t\t\tthis.$selectedItem = null;\r\n\t\t\tthis.$input.val('');\r\n\t\t\tthis.$dropMenu.find('li').removeClass('selected');\r\n\t\t},\r\n\r\n\t\tmenuShown: function () {\r\n\t\t\tif (this.options.autoResizeMenu) {\r\n\t\t\t\tthis.resizeMenu();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tresizeMenu: function () {\r\n\t\t\tvar width = this.$element.outerWidth();\r\n\t\t\tthis.$dropMenu.outerWidth(width);\r\n\t\t},\r\n\r\n\t\tselectedItem: function () {\r\n\t\t\tvar item = this.$selectedItem;\r\n\t\t\tvar data = {};\r\n\r\n\t\t\tif (item) {\r\n\t\t\t\tvar txt = this.$selectedItem.text().trim();\r\n\t\t\t\tdata = langx.mixin({\r\n\t\t\t\t\ttext: txt\r\n\t\t\t\t}, this.$selectedItem.data());\r\n\t\t\t} else {\r\n\t\t\t\tdata = {\r\n\t\t\t\t\ttext: this.$input.val().trim(),\r\n\t\t\t\t\tnotFound: true\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\t\t},\r\n\r\n\t\tselectByText: function (text) {\r\n\t\t\tvar $item = $([]);\r\n\t\t\tthis.$element.find('li').each(function () {\r\n\t\t\t\tif ((this.textContent || this.innerText || $(this).text() || '').trim().toLowerCase() === (text || '').trim().toLowerCase()) {\r\n\t\t\t\t\t$item = $(this);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tthis.doSelect($item);\r\n\t\t},\r\n\r\n\t\tselectByValue: function (value) {\r\n\t\t\tvar selector = 'li[data-value=\"' + value + '\"]';\r\n\t\t\tthis.selectBySelector(selector);\r\n\t\t},\r\n\r\n\t\tselectByIndex: function (index) {\r\n\t\t\t// zero-based index\r\n\t\t\tvar selector = 'li:eq(' + index + ')';\r\n\t\t\tthis.selectBySelector(selector);\r\n\t\t},\r\n\r\n\t\tselectBySelector: function (selector) {\r\n\t\t\tvar $item = this.$element.find(selector);\r\n\t\t\tthis.doSelect($item);\r\n\t\t},\r\n\r\n\t\tsetDefaultSelection: function () {\r\n\t\t\tvar selector = 'li[data-selected=true]:first';\r\n\t\t\tvar item = this.$element.find(selector);\r\n\r\n\t\t\tif (item.length > 0) {\r\n\t\t\t\t// select by data-attribute\r\n\t\t\t\tthis.selectBySelector(selector);\r\n\t\t\t\titem.removeData('selected');\r\n\t\t\t\titem.removeAttr('data-selected');\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tenable: function () {\r\n\t\t\tthis.$element.removeClass('disabled');\r\n\t\t\tthis.$input.removeAttr('disabled');\r\n\t\t\tthis.$button.removeClass('disabled');\r\n\t\t},\r\n\r\n\t\tdisable: function () {\r\n\t\t\tthis.$element.addClass('disabled');\r\n\t\t\tthis.$input.attr('disabled', true);\r\n\t\t\tthis.$button.addClass('disabled');\r\n\t\t},\r\n\r\n\t\titemclicked: function (e) {\r\n\t\t\tthis.$selectedItem = $(e.target).parent();\r\n\r\n\t\t\t// set input text and trigger input change event marked as synthetic\r\n\t\t\tthis.$input.val(this.$selectedItem.text().trim()).trigger('change', {\r\n\t\t\t\tsynthetic: true\r\n\t\t\t});\r\n\r\n\t\t\t// pass object including text and any data-attributes\r\n\t\t\t// to onchange event\r\n\t\t\tvar data = this.selectedItem();\r\n\r\n\t\t\t// trigger changed event\r\n\t\t\tthis.$element.trigger('changed.lark', data);\r\n\r\n\t\t\te.preventDefault();\r\n\r\n\t\t\t// return focus to control after selecting an option\r\n\t\t\tthis.$element.find('.dropdown-toggle').focus();\r\n\t\t},\r\n\r\n\t\tkeypress: function (e) {\r\n\t\t\tvar ENTER = 13;\r\n\t\t\t//var TAB = 9;\r\n\t\t\tvar ESC = 27;\r\n\t\t\tvar LEFT = 37;\r\n\t\t\tvar UP = 38;\r\n\t\t\tvar RIGHT = 39;\r\n\t\t\tvar DOWN = 40;\r\n\r\n\t\t\tvar IS_NAVIGATIONAL = (\r\n\t\t\t\te.which === UP ||\r\n\t\t\t\te.which === DOWN ||\r\n\t\t\t\te.which === LEFT ||\r\n\t\t\t\te.which === RIGHT\r\n\t\t\t);\r\n\r\n\t\t\tif(this.options.showOptionsOnKeypress && !this.$inputGroupBtn.hasClass('open')){\r\n\t\t\t\tthis.$button.plugin(\"lark.popups.dropdown\").toggle();\r\n\t\t\t\tthis.$input.focus();\r\n\t\t\t}\r\n\r\n\t\t\tif (e.which === ENTER) {\r\n\t\t\t\te.preventDefault();\r\n\r\n\t\t\t\tvar selected = this.$dropMenu.find('li.selected').text().trim();\r\n\t\t\t\tif(selected.length > 0){\r\n\t\t\t\t\tthis.selectByText(selected);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.selectByText(this.$input.val());\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.$inputGroupBtn.removeClass('open');\r\n\t\t\t} else if (e.which === ESC) {\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\tthis.clearSelection();\r\n\t\t\t\tthis.$inputGroupBtn.removeClass('open');\r\n\t\t\t} else if (this.options.showOptionsOnKeypress) {\r\n\t\t\t\tif (e.which === DOWN || e.which === UP) {\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\tvar $selected = this.$dropMenu.find('li.selected');\r\n\t\t\t\t\tif ($selected.length > 0) {\r\n\t\t\t\t\t\tif (e.which === DOWN) {\r\n\t\t\t\t\t\t\t$selected = $selected.next(':not(.hidden)');\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t$selected = $selected.prev(':not(.hidden)');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ($selected.length === 0){\r\n\t\t\t\t\t\tif (e.which === DOWN) {\r\n\t\t\t\t\t\t\t$selected = this.$dropMenu.find('li:not(.hidden):first');\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t$selected = this.$dropMenu.find('li:not(.hidden):last');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.doSelect($selected);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Avoid filtering on navigation key presses\r\n\t\t\tif (this.options.filterOnKeypress && !IS_NAVIGATIONAL) {\r\n\t\t\t\tthis.options.filter(this.$dropMenu.find('li'), this.$input.val(), this);\r\n\t\t\t}\r\n\r\n\t\t\tthis.previousKeyPress = e.which;\r\n\t\t},\r\n\r\n\t\tinputchanged: function (e, extra) {\r\n\t\t\tvar val = $(e.target).val();\r\n\t\t\t// skip processing for internally-generated synthetic event\r\n\t\t\t// to avoid double processing\r\n\t\t\tif (extra && extra.synthetic) {\r\n\t\t\t\tthis.selectByText(val);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.selectByText(val);\r\n\r\n\t\t\t// find match based on input\r\n\t\t\t// if no match, pass the input value\r\n\t\t\tvar data = this.selectedItem();\r\n\t\t\tif (data.text.length === 0) {\r\n\t\t\t\tdata = {\r\n\t\t\t\t\ttext: val\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\t// trigger changed event\r\n\t\t\tthis.$element.trigger('changed.lark', data);\r\n\t\t}\r\n\r\n\t});\r\n\r\n\r\n\r\n\tComboBox.prototype.getValue = ComboBox.prototype.selectedItem;\r\n\r\n    plugins.register(ComboBox);\r\n\r\n\treturn popups.ComboBox = ComboBox;\r\n});\r\n\ndefine('skylark-fuelux-repeater/searchbox',[\n  \"skylark-langx/langx\",\n  \"skylark-domx-browser\",\n  \"skylark-domx-eventer\",\n  \"skylark-domx-noder\",\n  \"skylark-domx-geom\",\n  \"skylark-domx-query\",\n  \"skylark-domx-plugins-base\"\n],function(langx,browser,eventer,noder,geom,$,plugins){\n\n\n\t// SEARCH CONSTRUCTOR AND PROTOTYPE\n\n\tvar SearchBox = plugins.Plugin.inherit({\n\t\tklassName: \"SearchBox\",\n\n\t\tpluginName: \"lark.fuelux.searchbox\",\n\n\t\toptions : {\n\t\t\tclearOnEmpty: false,\n\t\t\tsearchOnKeyPress: false,\n\t\t\tallowCancel: false\n\t\t},\n\t\n    \t_construct : function(elm,options) {\n      \t\tthis.overrided(elm,options);\n      \t\t\n      \t\tthis.$element = $(this._elm);\n\t\t\tthis.$repeater = this.$element.closest('.repeater');\n\n\t\t\tif (this.$element.attr('data-searchOnKeyPress') === 'true'){\n\t\t\t\tthis.options.searchOnKeyPress = true;\n\t\t\t}\n\n\t\t\tthis.$button = this.$element.find('button');\n\t\t\tthis.$input = this.$element.find('input');\n\t\t\tthis.$icon = this.$element.find('.glyphicon, .fuelux-icon');\n\n\t\t\tthis.$button.on('click.lark.search', langx.proxy(this.buttonclicked, this));\n\t\t\tthis.$input.on('keyup.lark.search', langx.proxy(this.keypress, this));\n\n\t\t\tif (this.$repeater.length > 0) {\n\t\t\t\tthis.$repeater.on('rendered.lark.repeater', langx.proxy(this.clearPending, this));\n\t\t\t}\n\n\t\t\tthis.activeSearch = '';\n\t\t},\n\n\t\t_destroy: function () {\n\t\t\tthis.$element.remove();\n\t\t\t// any external bindings\n\t\t\t// [none]\n\t\t\t// set input value attrbute\n\t\t\tthis.$element.find('input').each(function () {\n\t\t\t\t$(this).attr('value', $(this).val());\n\t\t\t});\n\t\t\t// empty elements to return to original markup\n\t\t\t// [none]\n\t\t\t// returns string of markup\n\t\t\treturn this.$element[0].outerHTML;\n\t\t},\n\n\t\tsearch: function (searchText) {\n\t\t\tif (this.$icon.hasClass('glyphicon')) {\n\t\t\t\tthis.$icon.removeClass('glyphicon-search').addClass('glyphicon-remove');\n\t\t\t}\n\t\t\tif (this.$icon.hasClass('fuelux-icon')) {\n\t\t\t\tthis.$icon.removeClass('fuelux-icon-search').addClass('fuelux-icon-remove');\n\t\t\t}\n\n\t\t\tthis.activeSearch = searchText;\n\t\t\tthis.$element.addClass('searched pending');\n\t\t\tthis.$element.trigger('searched.lark.search', searchText);\n\t\t},\n\n\t\tclear: function () {\n\t\t\tif (this.$icon.hasClass('glyphicon')) {\n\t\t\t\tthis.$icon.removeClass('glyphicon-remove').addClass('glyphicon-search');\n\t\t\t}\n\t\t\tif (this.$icon.hasClass('fuelux-icon')) {\n\t\t\t\tthis.$icon.removeClass('fuelux-icon-remove').addClass('fuelux-icon-search');\n\t\t\t}\n\n\t\t\tif (this.$element.hasClass('pending')) {\n\t\t\t\tthis.$element.trigger('canceled.lark.search');\n\t\t\t}\n\n\t\t\tthis.activeSearch = '';\n\t\t\tthis.$input.val('');\n\t\t\tthis.$element.trigger('cleared.lark.search');\n\t\t\tthis.$element.removeClass('searched pending');\n\t\t},\n\n\t\tclearPending: function () {\n\t\t\tthis.$element.removeClass('pending');\n\t\t},\n\n\t\taction: function () {\n\t\t\tvar val = this.$input.val();\n\n\t\t\tif (val && val.length > 0) {\n\t\t\t\tthis.search(val);\n\t\t\t} else {\n\t\t\t\tthis.clear();\n\t\t\t}\n\t\t},\n\n\t\tbuttonclicked: function (e) {\n\t\t\te.preventDefault();\n\t\t\tif ($(e.currentTarget).is('.disabled, :disabled')) return;\n\n\t\t\tif (this.$element.hasClass('pending') || this.$element.hasClass('searched')) {\n\t\t\t\tthis.clear();\n\t\t\t} else {\n\t\t\t\tthis.action();\n\t\t\t}\n\t\t},\n\n\t\tkeypress: function (e) {\n\t\t\tvar ENTER_KEY_CODE = 13;\n\t\t\tvar TAB_KEY_CODE = 9;\n\t\t\tvar ESC_KEY_CODE = 27;\n\n\t\t\tif (e.which === ENTER_KEY_CODE) {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.action();\n\t\t\t} else if (e.which === TAB_KEY_CODE) {\n\t\t\t\te.preventDefault();\n\t\t\t} else if (e.which === ESC_KEY_CODE) {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.clear();\n\t\t\t} else if (this.options.searchOnKeyPress) {\n\t\t\t\t// search on other keypress\n\t\t\t\tthis.action();\n\t\t\t}\n\t\t},\n\n\t\tdisable: function () {\n\t\t\tthis.$element.addClass('disabled');\n\t\t\tthis.$input.attr('disabled', 'disabled');\n\n\t\t\tif (!this.options.allowCancel) {\n\t\t\t\tthis.$button.addClass('disabled');\n\t\t\t}\n\t\t},\n\n\t\tenable: function () {\n\t\t\tthis.$element.removeClass('disabled');\n\t\t\tthis.$input.removeAttr('disabled');\n\t\t\tthis.$button.removeClass('disabled');\n\t\t}\n\t});\n\n    plugins.register(SearchBox);\n\n\treturn \tSearchBox;\n});\n\ndefine('skylark-fuelux-repeater/repeater',[\r\n  \"skylark-langx/skylark\",\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-velm\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-domx-fx\",\r\n  \"skylark-domx-plugins-base\",\r\n  \"skylark-domx-plugins-popups/select-list\",\r\n  \"skylark-domx-plugins-popups/combobox\",\r\n  \"./searchbox\"  \r\n],function(skylark,langx,browser,eventer,noder,geom,elmx,$,fx,plugins,SelectList,ComboBox){\r\n\r\n\t// REPEATER CONSTRUCTOR AND PROTOTYPE\r\n\r\n\tvar Repeater = plugins.Plugin.inherit({\r\n\t\tklassName: \"Repeater\",\r\n\r\n\t\tpluginName: \"lark.fuelux.repeater\",\r\n\r\n\t\toptions : {\r\n\t\t\tdataSource: function dataSource (options, callback) {\r\n\t\t\t\tcallback({ count: 0, end: 0, items: [], page: 0, pages: 1, start: 0 });\r\n\t\t\t},\r\n\t\t\tdefaultView: -1, // should be a string value. -1 means it will grab the active view from the view controls\r\n\t\t\tdropPagingCap: 10,\r\n\t\t\tstaticHeight: -1, // normally true or false. -1 means it will look for data-staticheight on the element\r\n\t\t\tviews: null, // can be set to an object to configure multiple views of the same type,\r\n\t\t\tsearchOnKeyPress: false,\r\n\t\t\tallowCancel: true,\r\n\r\n\t\t\taddons : {\r\n\t\t\t\tviews : [\"table\",\"tile\"]\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t    throb: function(params) {\r\n\t      return fx.throb(this._elm,params);\r\n\t    },\r\n\r\n//\t\t_init : function(element,options) {\r\n\t    _construct : function(elm,options) {\r\n\t\t    this.overrided(elm,options);\r\n\t\t\tvar self = this;\r\n\t\t\tvar $btn;\r\n\t\t\tvar currentView;\r\n\r\n\t\t\tthis.$element = $(this._elm); //$(element);\r\n\r\n\t\t\tthis.$canvas = this.$element.find('.repeater-canvas');\r\n\t\t\tthis.$count = this.$element.find('.repeater-count');\r\n\t\t\tthis.$end = this.$element.find('.repeater-end');\r\n\t\t\tthis.$filters = this.$element.find('.repeater-filters');\r\n\t\t\tthis.$loader = this.$element.find('.repeater-loader');\r\n\t\t\tthis.$pageSize = this.$element.find('.repeater-itemization .selectlist');\r\n\t\t\tthis.$nextBtn = this.$element.find('.repeater-next');\r\n\t\t\tthis.$pages = this.$element.find('.repeater-pages');\r\n\t\t\tthis.$prevBtn = this.$element.find('.repeater-prev');\r\n\t\t\tthis.$primaryPaging = this.$element.find('.repeater-primaryPaging');\r\n\t\t\tthis.$search = this.$element.find('.repeater-search').find('.search');\r\n\t\t\tthis.$secondaryPaging = this.$element.find('.repeater-secondaryPaging');\r\n\t\t\tthis.$start = this.$element.find('.repeater-start');\r\n\t\t\tthis.$viewport = this.$element.find('.repeater-viewport');\r\n\t\t\tthis.$views = this.$element.find('.repeater-views');\r\n\r\n\t\t\tthis.$element.on('mousedown.bs.dropdown.data-api', '[data-toggle=\"dropdown\"]',function(e) {\r\n\t\t\t\t$(this).plugin(\"lark.popups.dropdown\");\r\n\t\t\t}); \r\n\r\n\t\t\tthis.currentPage = 0;\r\n\t\t\tthis.currentView = null;\r\n\t\t\tthis.isDisabled = false;\r\n\t\t\tthis.infiniteScrollingCallback = function noop () {};\r\n\t\t\tthis.infiniteScrollingCont = null;\r\n\t\t\tthis.infiniteScrollingEnabled = false;\r\n\t\t\tthis.infiniteScrollingEnd = null;\r\n\t\t\tthis.infiniteScrollingOptions = {};\r\n\t\t\tthis.lastPageInput = 0;\r\n\t\t\t//this.options = langx.mixin({}, $.fn.repeater.defaults, options);\r\n\t\t\tthis.pageIncrement = 0;// store direction navigated\r\n\t\t\tthis.resizeTimeout = {};\r\n\t\t\tthis.stamp = new Date().getTime() + (Math.floor(Math.random() * 100) + 1);\r\n\t\t\tthis.storedDataSourceOpts = null;\r\n\t\t\tthis.syncingViewButtonState = false;\r\n//\t\t\tthis.viewOptions = {};\r\n\t\t\tthis.viewType = null;\r\n\r\n\t\t\tthis.$filters.plugin(\"lark.popups.selectlist\");\r\n\t\t\tthis.$pageSize.plugin(\"lark.popups.selectlist\");\r\n\t\t\tthis.$primaryPaging.find('.combobox').plugin(\"lark.popups.combobox\");\r\n\t\t\tthis.$search.plugin(\"lark.fuelux.searchbox\",{\r\n\t\t\t\tsearchOnKeyPress: this.options.searchOnKeyPress,\r\n\t\t\t\tallowCancel: this.options.allowCancel\r\n\t\t\t});\r\n\r\n\t\t\tthis.$filters.on('changed.lark.selectlist', function onFiltersChanged (e, value) {\r\n\t\t\t\tself.$element.trigger('filtered.lark.repeater', value);\r\n\t\t\t\tself.render({\r\n\t\t\t\t\tclearInfinite: true,\r\n\t\t\t\t\tpageIncrement: null\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\tthis.$nextBtn.on('click.lark.repeater', langx.proxy(this.next, this));\r\n\t\t\tthis.$pageSize.on('changed.lark.selectlist', function onPageSizeChanged (e, value) {\r\n\t\t\t\tself.$element.trigger('pageSizeChanged.lark.repeater', value);\r\n\t\t\t\tself.render({\r\n\t\t\t\t\tpageIncrement: null\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\tthis.$prevBtn.on('click.lark.repeater', langx.proxy(this.previous, this));\r\n\t\t\tthis.$primaryPaging.find('.combobox').on('changed.lark.combobox', function onPrimaryPagingChanged (evt, data) {\r\n\t\t\t\tself.pageInputChange(data.text, data);\r\n\t\t\t});\r\n\t\t\tthis.$search.on('searched.lark.search cleared.lark.search', function onSearched (e, value) {\r\n\t\t\t\tself.$element.trigger('searchChanged.lark.repeater', value);\r\n\t\t\t\tself.render({\r\n\t\t\t\t\tclearInfinite: true,\r\n\t\t\t\t\tpageIncrement: null\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\tthis.$search.on('canceled.lark.search', function onSearchCanceled (e, value) {\r\n\t\t\t\tself.$element.trigger('canceled.lark.repeater', value);\r\n\t\t\t\tself.render({\r\n\t\t\t\t\tclearInfinite: true,\r\n\t\t\t\t\tpageIncrement: null\r\n\t\t\t\t});\r\n\t\t\t});\r\n\r\n\t\t\tthis.$secondaryPaging.on('blur.lark.repeater', function onSecondaryPagingBlur () {\r\n\t\t\t\tself.pageInputChange(self.$secondaryPaging.val());\r\n\t\t\t});\r\n\t\t\tthis.$secondaryPaging.on('keyup', function onSecondaryPagingKeyup (e) {\r\n\t\t\t\tif (e.keyCode === 13) {\r\n\t\t\t\t\tself.pageInputChange(self.$secondaryPaging.val());\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tthis.$views.find('input').on('change.lark.repeater', langx.proxy(this.viewChanged, this));\r\n\r\n\t\t\t$(window).on('resize.lark.repeater.' + this.stamp, function onResizeRepeater () {\r\n\t\t\t\tclearTimeout(self.resizeTimeout);\r\n\t\t\t\tself.resizeTimeout = setTimeout(function resizeTimeout () {\r\n\t\t\t\t\tself.resize();\r\n\t\t\t\t\tself.$element.trigger('resized.lark.repeater');\r\n\t\t\t\t}, 75);\r\n\t\t\t});\r\n\r\n\t\t\t//this.$loader.loader();\r\n\t\t\t//this.$loader.loader('pause');\r\n\t\t\tif (this.options.defaultView !== -1) {\r\n\t\t\t\tcurrentView = this.options.defaultView;\r\n\t\t\t} else {\r\n\t\t\t\t$btn = this.$views.find('label.active input');\r\n\t\t\t\tcurrentView = ($btn.length > 0) ? $btn.val() : 'table';\r\n\t\t\t}\r\n\r\n\t\t\t//this.setViewOptions(currentView); // by lwf\r\n\r\n\t\t\tthis.initViewTypes(function initViewTypes () {\r\n\t\t\t\tself.resize();\r\n\t\t\t\tself.$element.trigger('resized.lark.repeater');\r\n\t\t\t\tself.render({\r\n\t\t\t\t\tchangeView: currentView\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tclear: function clear (opts) {\r\n\t\t\tvar options = opts || {};\r\n\r\n\t\t\tif (!options.preserve) {\r\n\t\t\t\t// Just trash everything because preserve is false\r\n\t\t\t\tthis.$canvas.empty();\r\n\t\t\t} else if (!this.infiniteScrollingEnabled || options.clearInfinite) {\r\n\t\t\t\t// Preserve clear only if infiniteScrolling is disabled or if specifically told to do so\r\n\t\t\t\tscan(this.$canvas);\r\n\t\t\t} // Otherwise don't clear because infiniteScrolling is enabled\r\n\r\n\t\t\t// If viewChanged and current viewTypeObj has a cleared function, call it\r\n\t\t\tvar viewChanged = (options.viewChanged !== undefined) ? options.viewChanged : false;\r\n\t\t\t/* lwf\r\n\t\t\tvar viewTypeObj = $.fn.repeater.viewTypes[this.viewType] || {};\r\n\t\t\tif (!viewChanged && viewTypeObj.cleared) {\r\n\t\t\t\tviewTypeObj.cleared.call(this, {\r\n\t\t\t\t\toptions: options\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t*/\r\n\t\t\tif (this._view) {\r\n\t\t\t\tthis._view.cleared({\r\n\t\t\t\t\toptions: options\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tclearPreservedDataSourceOptions: function clearPreservedDataSourceOptions () {\r\n\t\t\tthis.storedDataSourceOpts = null;\r\n\t\t},\r\n\r\n\t\tdestroy: function destroy () {\r\n\t\t\tvar markup;\r\n\t\t\t// set input value attrbute in markup\r\n\t\t\tthis.$element.find('input').each(function eachInput () {\r\n\t\t\t\t$(this).attr('value', $(this).val());\r\n\t\t\t});\r\n\r\n\t\t\t// empty elements to return to original markup\r\n\t\t\tthis.$canvas.empty();\r\n\t\t\tmarkup = this.$element[0].outerHTML;\r\n\r\n\t\t\t// destroy components and remove leftover\r\n\t\t\tlangx.scall(this.$element.find('.combobox').plugin(\"lark.popups.combobox\"),\"destroy\");\r\n\t\t\tlangx.scall(this.$element.find('.selectlist').plugin(\"lark.popups.selectlist\"),\"destroy\");\r\n\t\t\tlangx.scall(this.$element.find('.search').plugin(\"lark.fuelux.searchbox\"),\"destroy\");\r\n\t\t\tif (this.infiniteScrollingEnabled) {\r\n\t\t\t\t$(this.infiniteScrollingCont).infinitescroll('destroy');\r\n\t\t\t}\r\n\r\n\t\t\tthis.$element.remove();\r\n\r\n\t\t\t// any external events\r\n\t\t\t$(window).off('resize.lark.repeater.' + this.stamp);\r\n\r\n\t\t\treturn markup;\r\n\t\t},\r\n\r\n\t\tdisable: function disable () {\r\n\t\t\t//var viewTypeObj = $.fn.repeater.viewTypes[this.viewType] || {};\r\n\r\n\t\t\tlangx.scall(this.$search.plugin(\"lark.fuelux.searchbox\"),\"disable\");\r\n\t\t\tlangx.scall(this.$filters.plugin(\"lark.popups.selectlist\"),\"disable\");\r\n\t\t\tthis.$views.find('label, input').addClass('disabled').attr('disabled', 'disabled');\r\n\t\t\tlangx.scall(this.$pageSize.plugin(\"lark.popups.selectlist\"),\"disable\");\r\n\t\t\tlangx.scall(this.$primaryPaging.find('.combobox').plugin(\"lark.popups.combobox\"),\"disable\");\r\n\t\t\tthis.$secondaryPaging.attr('disabled', 'disabled');\r\n\t\t\tthis.$prevBtn.attr('disabled', 'disabled');\r\n\t\t\tthis.$nextBtn.attr('disabled', 'disabled');\r\n\r\n\t\t\t/* lwf\r\n\t\t\tif (viewTypeObj.enabled) {\r\n\t\t\t\tviewTypeObj.enabled.call(this, {\r\n\t\t\t\t\tstatus: false\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t*/\r\n\t\t\tif (this._view) {\r\n\t\t\t\tthis._view.enabled({\r\n\t\t\t\t\tstatus: false\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tthis.isDisabled = true;\r\n\t\t\tthis.$element.addClass('disabled');\r\n\t\t\tthis.$element.trigger('disabled.lark.repeater');\r\n\t\t},\r\n\r\n\t\tenable: function enable () {\r\n\t\t\t//var viewTypeObj = $.fn.repeater.viewTypes[this.viewType] || {};\r\n\r\n\t\t\tlangx.scall(this.$search.plugin(\"lark.fuelux.searchbox\"),\"enable\");\r\n\t\t\tlangx.scall(this.$filters.plugin(\"lark.popups.selectlist\"),\"enable\")\r\n\t\t\tthis.$views.find('label, input').removeClass('disabled').removeAttr('disabled');\r\n\t\t\tlangx.scall(this.$pageSize.plugin(\"lark.popups.selectlist\"),\"enable\")\r\n\t\t\tlangx.scall(this.$primaryPaging.find('.combobox').plugin(\"lark.popups.combobox\"),\"enable\");\r\n\t\t\tthis.$secondaryPaging.removeAttr('disabled');\r\n\r\n\t\t\tif (!this.$prevBtn.hasClass('page-end')) {\r\n\t\t\t\tthis.$prevBtn.removeAttr('disabled');\r\n\t\t\t}\r\n\t\t\tif (!this.$nextBtn.hasClass('page-end')) {\r\n\t\t\t\tthis.$nextBtn.removeAttr('disabled');\r\n\t\t\t}\r\n\r\n\t\t\t// is 0 or 1 pages, if using $primaryPaging (combobox)\r\n\t\t\t// if using selectlist allow user to use selectlist to select 0 or 1\r\n\t\t\tif (this.$prevBtn.hasClass('page-end') && this.$nextBtn.hasClass('page-end')) {\r\n\t\t\t\tlangx.scall(this.$primaryPaging.plugin(\"lark.popups.combobox\"),\"disable\");\r\n\t\t\t}\r\n\r\n\t\t\t// if there are no items\r\n\t\t\tif (parseInt(this.$count.html(), 10) !== 0) {\r\n\t\t\t\tlangx.scall(this.$pageSize.plugin(\"lark.popups.selectlist\"),\"enable\");\r\n\t\t\t} else {\r\n\t\t\t\tlangx.scall(this.$pageSize.plugin(\"lark.popups.selectlist\"),\"disable\");\r\n\t\t\t}\r\n\r\n\t\t\t/* lwf\r\n\t\t\tif (viewTypeObj.enabled) {\r\n\t\t\t\tviewTypeObj.enabled.call(this, {\r\n\t\t\t\t\tstatus: true\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t*/\r\n\t\t\tif (this._view) {\r\n\t\t\t\tthis._view.enabled({\r\n\t\t\t\t\tstatus: true\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tthis.isDisabled = false;\r\n\t\t\tthis.$element.removeClass('disabled');\r\n\t\t\tthis.$element.trigger('enabled.lark.repeater');\r\n\t\t},\r\n\r\n\t\tgetDataOptions: function getDataOptions (opts) {\r\n\t\t\tvar options = opts || {};\r\n\t\t\tif (options.pageIncrement !== undefined) {\r\n\t\t\t\tif (options.pageIncrement === null) {\r\n\t\t\t\t\tthis.currentPage = 0;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.currentPage += options.pageIncrement;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar dataSourceOptions = {};\r\n\t\t\tif (options.dataSourceOptions) {\r\n\t\t\t\tdataSourceOptions = options.dataSourceOptions;\r\n\r\n\t\t\t\tif (options.preserveDataSourceOptions) {\r\n\t\t\t\t\tif (this.storedDataSourceOpts) {\r\n\t\t\t\t\t\tthis.storedDataSourceOpts = langx.mixin(this.storedDataSourceOpts, dataSourceOptions);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.storedDataSourceOpts = dataSourceOptions;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this.storedDataSourceOpts) {\r\n\t\t\t\tdataSourceOptions = langx.mixin(this.storedDataSourceOpts, dataSourceOptions);\r\n\t\t\t}\r\n\r\n\t\t\tvar returnOptions = {\r\n\t\t\t\tview: this.currentView,\r\n\t\t\t\tpageIndex: this.currentPage,\r\n\t\t\t\tfilter: {\r\n\t\t\t\t\ttext: 'All',\r\n\t\t\t\t\tvalue: 'all'\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tif (this.$filters.length > 0) {\r\n\t\t\t\treturnOptions.filter = this.$filters.plugin(\"lark.popups.selectlist\").selectedItem();\r\n\t\t\t}\r\n\r\n\t\t\tif (!this.infiniteScrollingEnabled) {\r\n\t\t\t\treturnOptions.pageSize = 25;\r\n\r\n\t\t\t\tif (this.$pageSize.length > 0) {\r\n\t\t\t\t\treturnOptions.pageSize = parseInt(this.$pageSize.plugin(\"lark.popups.selectlist\").selectedItem().value, 10);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar searchValue = this.$search && this.$search.find('input') && this.$search.find('input').val();\r\n\t\t\tif (searchValue !== '') {\r\n\t\t\t\treturnOptions.search = searchValue;\r\n\t\t\t}\r\n\r\n\t\t\t/* lwf\r\n\t\t\tvar viewType = $.fn.repeater.viewTypes[this.viewType] || {};\r\n\t\t\tvar addViewTypeData = viewType.dataOptions;\r\n\t\t\tif (addViewTypeData) {\r\n\t\t\t\treturnOptions = addViewTypeData.call(this, returnOptions);\r\n\t\t\t}\r\n\t\t\t*/\r\n\t\t\tif (this._view) {\r\n\t\t\t\treturnOptions = this._view.dataOptions(returnOptions);\r\n\t\t\t}\r\n\r\n\r\n\t\t\treturnOptions = langx.mixin(returnOptions, dataSourceOptions);\r\n\r\n\t\t\treturn returnOptions;\r\n\t\t},\r\n\r\n\t\tinfiniteScrolling: function infiniteScrolling (enable, opts) {\r\n\t\t\tvar footer = this.$element.find('.repeater-footer');\r\n\t\t\tvar viewport = this.$element.find('.repeater-viewport');\r\n\t\t\tvar options = opts || {};\r\n\r\n\t\t\tif (enable) {\r\n\t\t\t\tthis.infiniteScrollingEnabled = true;\r\n\t\t\t\tthis.infiniteScrollingEnd = options.end;\r\n\t\t\t\tdelete options.dataSource;\r\n\t\t\t\tdelete options.end;\r\n\t\t\t\tthis.infiniteScrollingOptions = options;\r\n\t\t\t\tviewport.css({\r\n\t\t\t\t\theight: viewport.height() + footer.outerHeight()\r\n\t\t\t\t});\r\n\t\t\t\tfooter.hide();\r\n\t\t\t} else {\r\n\t\t\t\tvar cont = this.infiniteScrollingCont;\r\n\t\t\t\tvar data = cont.data();\r\n\t\t\t\tdelete data.infinitescroll;\r\n\t\t\t\tcont.off('scroll');\r\n\t\t\t\tcont.removeClass('infinitescroll');\r\n\r\n\t\t\t\tthis.infiniteScrollingCont = null;\r\n\t\t\t\tthis.infiniteScrollingEnabled = false;\r\n\t\t\t\tthis.infiniteScrollingEnd = null;\r\n\t\t\t\tthis.infiniteScrollingOptions = {};\r\n\t\t\t\tviewport.css({\r\n\t\t\t\t\theight: viewport.height() - footer.outerHeight()\r\n\t\t\t\t});\r\n\t\t\t\tfooter.show();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tinfiniteScrollPaging: function infiniteScrollPaging (data) {\r\n\t\t\tvar end = (this.infiniteScrollingEnd !== true) ? this.infiniteScrollingEnd : undefined;\r\n\t\t\tvar page = data.page;\r\n\t\t\tvar pages = data.pages;\r\n\r\n\t\t\tthis.currentPage = (page !== undefined) ? page : NaN;\r\n\r\n\t\t\tif (data.end === true || (this.currentPage + 1) >= pages) {\r\n\t\t\t\tthis.infiniteScrollingCont.infinitescroll('end', end);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tinitInfiniteScrolling: function initInfiniteScrolling () {\r\n\t\t\tvar cont = this.$canvas.find('[data-infinite=\"true\"]:first');\r\n\r\n\t\t\tcont = (cont.length < 1) ? this.$canvas : cont;\r\n\t\t\tif (cont.data('lark.infinitescroll')) {\r\n\t\t\t\tcont.infinitescroll('enable');\r\n\t\t\t} else {\r\n\t\t\t\tvar self = this;\r\n\t\t\t\tvar opts = langx.mixin({}, this.infiniteScrollingOptions);\r\n\t\t\t\topts.dataSource = function dataSource (helpers, callback) {\r\n\t\t\t\t\tself.infiniteScrollingCallback = callback;\r\n\t\t\t\t\tself.render({\r\n\t\t\t\t\t\tpageIncrement: 1\r\n\t\t\t\t\t});\r\n\t\t\t\t};\r\n\t\t\t\tcont.infinitescroll(opts);\r\n\t\t\t\tthis.infiniteScrollingCont = cont;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tinitViewTypes: function initViewTypes (callback) {\r\n\t\t\t/*\r\n\t\t\tvar viewTypes = [];\r\n\r\n\t\t\tfor (var key in $.fn.repeater.viewTypes) {\r\n\t\t\t\tif ({}.hasOwnProperty.call($.fn.repeater.viewTypes, key)) {\r\n\t\t\t\t\tviewTypes.push($.fn.repeater.viewTypes[key]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t*/\r\n\r\n\t\t\tvar views = this._views = [];\r\n\t\t\tvar viewTypes = this.options.addons.views;\r\n\t\t\tif (langx.isArray(viewTypes)) {\r\n\t\t\t\tfor (var i = 0; i< viewTypes.length; i++) {\r\n\t\t\t\t\tvar setting = this.constructor.addons.views[viewTypes[i]];\r\n\t\t\t\t\tif (!setting) {\r\n\t\t\t\t\t\tthrow new Error(\"The view type \" + viewTypes[i] + \" is not defined!\");\r\n\t\t\t\t\t} \r\n\t\t\t\t\tvar ctor = setting.ctor;\r\n\t\t\t\t\tthis._views.push(this._views[viewTypes[i]] = new ctor(this));\r\n\r\n\t\t\t\t}\t\t\t\t\r\n\t\t\t} else if (langx.isPlainObject(viewTypes)) {\r\n\t\t\t\tfor (var name in viewTypes) {\r\n\t\t\t\t\tvar setting = this.constructor.addons.views[name];\r\n\t\t\t\t\tif (!setting) {\r\n\t\t\t\t\t\tthrow new Error(\"The view type \" + viewTypes[i] + \" is not defined!\");\r\n\t\t\t\t\t} \r\n\t\t\t\t\tvar ctor = setting.ctor;\r\n\t\t\t\t\tthis._views.push(this._views[name] = new ctor(this,viewTypes[name]));\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\r\n\t\t\t/*\r\n\t\t\tif (views.length > 0) {\r\n\t\t\t\tinitViewType.call(this, 0, viewTypes, callback);\r\n\t\t\t} else {\r\n\t\t\t\tcallback();\r\n\t\t\t}\r\n\t\t\t*/\r\n\t\t\tcallback();\t\t\t\r\n\t\t},\r\n\r\n\t\titemization: function itemization (data) {\r\n\t\t\tthis.$count.html((data.count !== undefined) ? data.count : '?');\r\n\t\t\tthis.$end.html((data.end !== undefined) ? data.end : '?');\r\n\t\t\tthis.$start.html((data.start !== undefined) ? data.start : '?');\r\n\t\t},\r\n\r\n\t\tnext: function next () {\r\n\t\t\tthis.$nextBtn.attr('disabled', 'disabled');\r\n\t\t\tthis.$prevBtn.attr('disabled', 'disabled');\r\n\t\t\tthis.pageIncrement = 1;\r\n\t\t\tthis.$element.trigger('nextClicked.lark.repeater');\r\n\t\t\tthis.render({\r\n\t\t\t\tpageIncrement: this.pageIncrement\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tpageInputChange: function pageInputChange (val, dataFromCombobox) {\r\n\t\t\t// dataFromCombobox is a proxy for data from combobox's changed event,\r\n\t\t\t// if no combobox is present data will be undefined\r\n\t\t\tvar pageInc;\r\n\t\t\tif (val !== this.lastPageInput) {\r\n\t\t\t\tthis.lastPageInput = val;\r\n\t\t\t\tvar value = parseInt(val, 10) - 1;\r\n\t\t\t\tpageInc = value - this.currentPage;\r\n\t\t\t\tthis.$element.trigger('pageChanged.lark.repeater', [value, dataFromCombobox]);\r\n\t\t\t\tthis.render({\r\n\t\t\t\t\tpageIncrement: pageInc\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tpagination: function pagination (data) {\r\n\t\t\tthis.$primaryPaging.removeClass('active');\r\n\t\t\tthis.$secondaryPaging.removeClass('active');\r\n\r\n\t\t\tvar totalPages = data.pages;\r\n\t\t\tthis.currentPage = (data.page !== undefined) ? data.page : NaN;\r\n\t\t\t// set paging to 0 if total pages is 0, otherwise use one-based index\r\n\t\t\tvar currenPageOutput = totalPages === 0 ? 0 : this.currentPage + 1;\r\n\r\n\t\t\tif (totalPages <= this.options.dropPagingCap) {\r\n\t\t\t\tthis.$primaryPaging.addClass('active');\r\n\t\t\t\tvar dropMenu = this.$primaryPaging.find('.dropdown-menu');\r\n\t\t\t\tdropMenu.empty();\r\n\t\t\t\tfor (var i = 0; i < totalPages; i++) {\r\n\t\t\t\t\tvar l = i + 1;\r\n\t\t\t\t\tdropMenu.append('<li data-value=\"' + l + '\"><a href=\"#\">' + l + '</a></li>');\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.$primaryPaging.find('input.form-control').val(currenPageOutput);\r\n\t\t\t} else {\r\n\t\t\t\tthis.$secondaryPaging.addClass('active');\r\n\t\t\t\tthis.$secondaryPaging.val(currenPageOutput);\r\n\t\t\t}\r\n\r\n\t\t\tthis.lastPageInput = this.currentPage + 1 + '';\r\n\r\n\t\t\tthis.$pages.html('' + totalPages);\r\n\r\n\t\t\t// this is not the last page\r\n\t\t\tif ((this.currentPage + 1) < totalPages) {\r\n\t\t\t\tthis.$nextBtn.removeAttr('disabled');\r\n\t\t\t\tthis.$nextBtn.removeClass('page-end');\r\n\t\t\t} else {\r\n\t\t\t\tthis.$nextBtn.attr('disabled', 'disabled');\r\n\t\t\t\tthis.$nextBtn.addClass('page-end');\r\n\t\t\t}\r\n\r\n\t\t\t// this is not the first page\r\n\t\t\tif ((this.currentPage - 1) >= 0) {\r\n\t\t\t\tthis.$prevBtn.removeAttr('disabled');\r\n\t\t\t\tthis.$prevBtn.removeClass('page-end');\r\n\t\t\t} else {\r\n\t\t\t\tthis.$prevBtn.attr('disabled', 'disabled');\r\n\t\t\t\tthis.$prevBtn.addClass('page-end');\r\n\t\t\t}\r\n\r\n\t\t\t// return focus to next/previous buttons after navigating\r\n\t\t\tif (this.pageIncrement !== 0) {\r\n\t\t\t\tif (this.pageIncrement > 0) {\r\n\t\t\t\t\tif (this.$nextBtn.is(':disabled')) {\r\n\t\t\t\t\t\t// if you can't focus, go the other way\r\n\t\t\t\t\t\tthis.$prevBtn.focus();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.$nextBtn.focus();\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (this.$prevBtn.is(':disabled')) {\r\n\t\t\t\t\t// if you can't focus, go the other way\r\n\t\t\t\t\tthis.$nextBtn.focus();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.$prevBtn.focus();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tprevious: function previous () {\r\n\t\t\tthis.$nextBtn.attr('disabled', 'disabled');\r\n\t\t\tthis.$prevBtn.attr('disabled', 'disabled');\r\n\t\t\tthis.pageIncrement = -1;\r\n\t\t\tthis.$element.trigger('previousClicked.lark.repeater');\r\n\t\t\tthis.render({\r\n\t\t\t\tpageIncrement: this.pageIncrement\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t// This functions more as a \"pre-render\" than a true \"render\"\r\n\t\trender: function render (opts) {\r\n\t\t\tthis.disable();\r\n\r\n\t\t\tvar viewChanged = false;\r\n\t\t\t//var viewTypeObj = $.fn.repeater.viewTypes[this.viewType] || {};\r\n\t\t\tvar options = opts || {};\r\n\r\n\t\t\tif (options.changeView && (this.currentView !== options.changeView)) {\r\n\t\t\t\tvar prevView = this.currentView;\r\n\t\t\t\tthis.currentView = options.changeView;\r\n\t\t\t\tthis.viewType = this.currentView.split('.')[0];\r\n\r\n\t\t\t\tthis._view = this._views[this.viewType];\r\n\r\n\t\t\t\t//this.setViewOptions(this.currentView);\r\n\r\n\t\t\t\tthis.$element.attr('data-currentview', this.currentView);\r\n\t\t\t\tthis.$element.attr('data-viewtype', this.viewType);\r\n\t\t\t\tviewChanged = true;\r\n\t\t\t\toptions.viewChanged = viewChanged;\r\n\r\n\t\t\t\tthis.$element.trigger('viewChanged.lark.repeater', this.currentView);\r\n\r\n\t\t\t\tif (this.infiniteScrollingEnabled) {\r\n\t\t\t\t\tthis.infiniteScrolling(false);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t/* lwf\r\n\t\t\t\tviewTypeObj = $.fn.repeater.viewTypes[this.viewType] || {};\r\n\t\t\t\tif (viewTypeObj.selected) {\r\n\t\t\t\t\tviewTypeObj.selected.call(this, {\r\n\t\t\t\t\t\tprevView: prevView\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\t*/\r\n\t\t\t\tthis._view.selected({\r\n\t\t\t\t\tprevView: prevView\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t\tthis.syncViewButtonState();\r\n\r\n\t\t\toptions.preserve = (options.preserve !== undefined) ? options.preserve : !viewChanged;\r\n\t\t\tthis.clear(options);\r\n\r\n\t\t\tif (!this.infiniteScrollingEnabled || (this.infiniteScrollingEnabled && viewChanged)) {\r\n\t\t\t\t//this.$loader.show().loader('play');\r\n\t\t\t\tthis._throbber = this.throb({\r\n\t\t\t\t\tclassName : \"throbWrap\"\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tvar dataOptions = this.getDataOptions(options);\r\n\r\n\t\t\tvar beforeRender = this.options.dataSource;\r\n\t\t\tvar self = this;\r\n\t\t\tvar viewTypeObj = this._view;\r\n\t\t\tbeforeRender(\r\n\t\t\t\tdataOptions,\r\n\t\t\t\t// this serves as a bridge function to pass all required data through to the actual function\r\n\t\t\t\t// that does the rendering for us.\r\n\t\t\t\tfunction callDoRender (dataSourceReturnedData) {\r\n\t\t\t\t\tself.doRender({\r\n\t\t\t\t\t\tdata: dataSourceReturnedData,\r\n\t\t\t\t\t\tdataOptions: dataOptions,\r\n\t\t\t\t\t\toptions: options,\r\n\t\t\t\t\t\tviewChanged: viewChanged,\r\n\t\t\t\t\t\tviewTypeObj: viewTypeObj\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t},\r\n\r\n\t\tresize: function resize () {\r\n\t\t\tvar staticHeight = (this.options.staticHeight === -1) ? this.$element.attr('data-staticheight') : this.options.staticHeight;\r\n\t\t\tvar viewTypeObj = {};\r\n\t\t\tvar height;\r\n\t\t\tvar viewportMargins;\r\n\t\t\tvar scrubbedElements = [];\r\n\t\t\tvar previousProperties = [];\r\n\t\t\t//var $hiddenElements = this.$element.parentsUntil(':visible').addBack(); // del addBack() not supported by skyalrk\r\n\t\t\tvar $hiddenElements = this.$element.parentsUntil(':visible');\r\n\t\t\tvar currentHiddenElement;\r\n\t\t\tvar currentElementIndex = 0;\r\n\r\n\t\t\t// Set parents to 'display:block' until repeater is visible again\r\n\t\t\twhile (currentElementIndex < $hiddenElements.length && this.$element.is(':hidden')) {\r\n\t\t\t\tcurrentHiddenElement = $hiddenElements[currentElementIndex];\r\n\t\t\t\t// Only set display property on elements that are explicitly hidden (i.e. do not inherit it from their parent)\r\n\t\t\t\tif ($(currentHiddenElement).is(':hidden')) {\r\n\t\t\t\t\tpreviousProperties.push(currentHiddenElement.style['display']);\r\n\t\t\t\t\tcurrentHiddenElement.style['display'] = 'block';\r\n\t\t\t\t\tscrubbedElements.push(currentHiddenElement);\r\n\t\t\t\t}\r\n\t\t\t\tcurrentElementIndex++;\r\n\t\t\t}\r\n\r\n\t\t\t//if (this.viewType) {\r\n\t\t\t//\tviewTypeObj = $.fn.repeater.viewTypes[this.viewType] || {};\r\n\t\t\t//}\r\n\r\n\t\t\tif (staticHeight !== undefined && staticHeight !== false && staticHeight !== 'false') {\r\n\t\t\t\tthis.$canvas.addClass('scrolling');\r\n\t\t\t\tviewportMargins = {\r\n\t\t\t\t\tbottom: this.$viewport.css('margin-bottom'),\r\n\t\t\t\t\ttop: this.$viewport.css('margin-top')\r\n\t\t\t\t};\r\n\r\n\t\t\t\tvar staticHeightValue = (staticHeight === 'true' || staticHeight === true) ? this.$element.height() : parseInt(staticHeight, 10);\r\n\t\t\t\tvar headerHeight = this.$element.find('.repeater-header').outerHeight();\r\n\t\t\t\tvar footerHeight = this.$element.find('.repeater-footer').outerHeight();\r\n\t\t\t\tvar bottomMargin = (viewportMargins.bottom === 'auto') ? 0 : parseInt(viewportMargins.bottom, 10);\r\n\t\t\t\tvar topMargin = (viewportMargins.top === 'auto') ? 0 : parseInt(viewportMargins.top, 10);\r\n\r\n\t\t\t\theight = staticHeightValue - headerHeight - footerHeight - bottomMargin - topMargin;\r\n\t\t\t\tthis.$viewport.outerHeight(height);\r\n\t\t\t} else {\r\n\t\t\t\tthis.$canvas.removeClass('scrolling');\r\n\t\t\t}\r\n\r\n\r\n\r\n\t\t\t/* lwf\r\n\t\t\tif (viewTypeObj.resize) {\r\n\t\t\t\tviewTypeObj.resize.call(this, {\r\n\t\t\t\t\theight: this.$element.outerHeight(),\r\n\t\t\t\t\twidth: this.$element.outerWidth()\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t*/\r\n\t\t\tif (this._view) {\r\n\t\t\t\tthis._view.resize({\r\n\t\t\t\t\theight: this.$element.outerHeight(),\r\n\t\t\t\t\twidth: this.$element.outerWidth()\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tscrubbedElements.forEach(function (element, i) {\r\n\t\t\t\telement.style['display'] = previousProperties[i];\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t// e.g. \"Rows\" or \"Thumbnails\"\r\n\t\trenderItems: function renderItems (viewTypeObj, data, callback) {\r\n\t\t\tviewTypeObj.render({\r\n\t\t\t\tcontainer: this.$canvas,\r\n\t\t\t\tdata: data\r\n\t\t\t}, callback);\r\n\t\t\tcallback(data);\r\n\t\t},\r\n\r\n\t\t/* // by lwf\r\n\t\tsetViewOptions: function setViewOptions (curView) {\r\n\t\t\tvar opts = {};\r\n\t\t\tvar viewName = curView.split('.')[1];\r\n\r\n\t\t\tif (this.options.views) {\r\n\t\t\t\topts = this.options.views[viewName] || this.options.views[curView] || {};\r\n\t\t\t} else {\r\n\t\t\t\topts = {};\r\n\t\t\t}\r\n\r\n\t\t\tthis.viewOptions = langx.mixin({}, this.options, opts);\r\n\t\t},\r\n\t\t*/\r\n\t\tviewChanged: function viewChanged (e) {\r\n\t\t\tvar $selected = $(e.target);\r\n\t\t\tvar val = $selected.val();\r\n\r\n\t\t\tif (!this.syncingViewButtonState) {\r\n\t\t\t\tif (this.isDisabled || $selected.parents('label:first').hasClass('disabled')) {\r\n\t\t\t\t\tthis.syncViewButtonState();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.render({\r\n\t\t\t\t\t\tchangeView: val,\r\n\t\t\t\t\t\tpageIncrement: null\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tsyncViewButtonState: function syncViewButtonState () {\r\n\t\t\tvar $itemToCheck = this.$views.find('input[value=\"' + this.currentView + '\"]');\r\n\r\n\t\t\tthis.syncingViewButtonState = true;\r\n\t\t\tthis.$views.find('input').prop('checked', false);\r\n\t\t\tthis.$views.find('label.active').removeClass('active');\r\n\r\n\t\t\tif ($itemToCheck.length > 0) {\r\n\t\t\t\t$itemToCheck.prop('checked', true);\r\n\t\t\t\t$itemToCheck.parents('label:first').addClass('active');\r\n\t\t\t}\r\n\t\t\tthis.syncingViewButtonState = false;\r\n\t\t},\r\n\r\n\t\tgetNestedProperty: function (obj, property) {\r\n\t\t\tproperty.replace(\r\n\t\t\t\t// Matches native JavaScript notation in a String,\r\n\t\t\t\t// e.g. '[\"doubleQuoteProp\"].dotProp[2]'\r\n\t\t\t\t// eslint-disable-next-line no-useless-escape\r\n\t\t\t\t/\\[(?:'([^']+)'|\"([^\"]+)\"|(\\d+))\\]|(?:(?:^|\\.)([^\\.\\[]+))/g,\r\n\t\t\t\tfunction (str, singleQuoteProp, doubleQuoteProp, arrayIndex, dotProp) {\r\n\t\t\t\t\tvar prop =\r\n\t\t\t\t\t\tdotProp ||\r\n\t\t\t\t\t\tsingleQuoteProp ||\r\n\t\t\t\t\t\tdoubleQuoteProp ||\r\n\t\t\t\t\t\t(arrayIndex && parseInt(arrayIndex, 10))\r\n\t\t\t\t\tif (str && obj) {\r\n\t\t\t\t\t\tobj = obj[prop]\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\treturn obj\r\n\t\t},\r\n\r\n\t\tgetDataProperty: function (obj, property) {\r\n\t\t\tvar key\r\n\t\t\tvar prop\r\n\t\t\tif (obj.dataset) {\r\n\t\t\t\tkey = property.replace(/-([a-z])/g, function (_, b) {\r\n\t\t\t\t\treturn b.toUpperCase()\r\n\t\t\t\t})\r\n\t\t\t\tprop = obj.dataset[key]\r\n\t\t\t} else if (obj.getAttribute) {\r\n\t\t\t\tprop = obj.getAttribute(\r\n\t\t\t\t\t'data-' + property.replace(/([A-Z])/g, '-$1').toLowerCase()\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\tif (typeof prop === 'string') {\r\n\t\t\t\t// eslint-disable-next-line no-useless-escape\r\n\t\t\t\tif (\r\n\t\t\t\t\t/^(true|false|null|-?\\d+(\\.\\d+)?|\\{[\\s\\S]*\\}|\\[[\\s\\S]*\\])$/.test(prop)\r\n\t\t\t\t) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\treturn $.parseJSON(prop)\r\n\t\t\t\t\t} catch (ignore) {}\r\n\t\t\t\t}\r\n\t\t\t\treturn prop\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tgetItemProperty: function (obj, property) {\r\n\t\t\tvar prop = this.getDataProperty(obj, property)\r\n\t\t\tif (prop === undefined) {\r\n\t\t\t\tprop = obj[property]\r\n\t\t\t}\r\n\t\t\tif (prop === undefined) {\r\n\t\t\t\tprop = this.getNestedProperty(obj, property)\r\n\t\t\t}\r\n\t\t\treturn prop\r\n\t\t},\r\n\r\n\t\t// This does the actual rendering of the repeater\r\n\t\tdoRender : function doRender (state) {\r\n\t\t\tvar data = state.data || {};\r\n\r\n\t\t\tif (this.infiniteScrollingEnabled) {\r\n\t\t\t\t// pass empty object because data handled in infiniteScrollPaging method\r\n\t\t\t\tthis.infiniteScrollingCallback({});\r\n\t\t\t} else {\r\n\t\t\t\tthis.itemization(data);\r\n\t\t\t\tthis.pagination(data);\r\n\t\t\t}\r\n\r\n\t\t\tvar self = this;\r\n\t\t\tthis.renderItems(\r\n\t\t\t\tstate.viewTypeObj,\r\n\t\t\t\tdata,\r\n\t\t\t\tfunction callAfterRender (d) {\r\n\t\t\t\t\tstate.data = d;\r\n\t\t\t\t\tself.afterRender(state);\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t},\r\n\r\n\t\tcallNextInit : function callNextInit (currentViewType, viewTypes, callback) {\r\n\t\t\tvar nextViewType = currentViewType + 1;\r\n\t\t\tif (nextViewType < viewTypes.length) {\r\n\t\t\t\tthis.initViewType(nextViewType, viewTypes, callback);\r\n\t\t\t} else {\r\n\t\t\t\tcallback();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tinitViewType : function initViewType (currentViewtype, viewTypes, callback) {\r\n\t\t\tvar self = this;\r\n\t\t\tif (viewTypes[currentViewtype].initialize) {\r\n\t\t\t\tviewTypes[currentViewtype].initialize.call(this, {}, function afterInitialize () {\r\n\t\t\t\t\tself.callNextInit(currentViewtype, viewTypes, callback);\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tself.callNextInit(currentViewtype, viewTypes, callback);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// Does all of our cleanup post-render\r\n\t\tafterRender : function afterRender (state) {\r\n\t\t\tvar data = state.data || {};\r\n\r\n\t\t\tif (this.infiniteScrollingEnabled) {\r\n\t\t\t\tif (state.viewChanged || state.options.clearInfinite) {\r\n\t\t\t\t\tthis.initInfiniteScrolling();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.infiniteScrollPaging(data, state.options);\r\n\t\t\t}\r\n\r\n\t\t\t//this.$loader.hide().loader('pause');\r\n\t\t\tif (this._throbber) {\r\n\t\t\t\tthis._throbber.remove();\r\n\t\t\t\tthis._throbber = null;\r\n\t\t\t}\r\n\t\t\tthis.enable();\r\n\r\n\t\t\tthis.$search.trigger('rendered.lark.repeater', {\r\n\t\t\t\tdata: data,\r\n\t\t\t\toptions: state.dataOptions,\r\n\t\t\t\trenderOptions: state.options\r\n\t\t\t});\r\n\t\t\tthis.$element.trigger('rendered.lark.repeater', {\r\n\t\t\t\tdata: data,\r\n\t\t\t\toptions: state.dataOptions,\r\n\t\t\t\trenderOptions: state.options\r\n\t\t\t});\r\n\r\n\t\t\t// for maintaining support of 'loaded' event\r\n\t\t\tthis.$element.trigger('loaded.lark.repeater', state.dataOptions);\r\n\t\t}\r\n\t});\r\n\r\n\tvar logWarn = function logWarn (msg) {\r\n\t\tif (window.console && window.console.warn) {\r\n\t\t\twindow.console.warn(msg);\r\n\t\t}\r\n\t};\r\n\r\n\tvar scan = function scan (cont) {\r\n\t\tvar keep = [];\r\n\t\tcont.children().each(function eachContainerChild () {\r\n\t\t\tvar item = $(this);\r\n\t\t\tvar pres = item.attr('data-preserve');\r\n\t\t\tif (pres === 'deep') {\r\n\t\t\t\titem.detach();\r\n\t\t\t\tkeep.push(item);\r\n\t\t\t} else if (pres === 'shallow') {\r\n\t\t\t\tscan(item);\r\n\t\t\t\titem.detach();\r\n\t\t\t\tkeep.push(item);\r\n\t\t\t}\r\n\t\t});\r\n\t\tcont.empty();\r\n\t\tcont.append(keep);\r\n\t};\r\n\r\n\r\n\r\n\r\n\r\n\tRepeater.addons = {};\r\n\r\n   plugins.register(Repeater);\r\n\r\n\r\n\treturn skylark.attach(\"intg.lark.Repeater\",Repeater);\r\n\r\n});\r\n\ndefine('skylark-fuelux-repeater/views',[\r\n\t\"./repeater\"\r\n],function(Repeater){\r\n\treturn Repeater.addons.views = {};\r\n});\ndefine('skylark-fuelux-repeater/views/view-base',[\r\n\t\"skylark-langx/langx\",\r\n\t\"skylark-domx-noder\",\r\n\t\"skylark-domx-query\",\r\n\t\"../views\",\t\r\n],function(langx,noder,$,views) {\r\n\r\n\tvar ViewBase = langx.Evented.inherit({\r\n\t    klassName: \"ViewBase\",\r\n\r\n\t    options : {\r\n\t      // The class to add when the gallery controls are visible:\r\n\t      controlsClass: \"skylarkui-repeater-controls\",\r\n\t\t    // Defines if the gallery should open in fullscreen mode:\r\n\t\t    fullScreen: false\r\n\r\n\t    },\r\n\r\n\r\n    \t_create$Item : function (template,itemData) {\r\n        \tvar invalid = false;\r\n\r\n        \tfunction replace() {\r\n            \tvar end, start, val;\r\n\r\n            \tstart = template.indexOf('{{');\r\n            \tend = template.indexOf('}}', start + 2);\r\n\r\n            \tif (start > -1 && end > -1) {\r\n                \tval = langx.trim(template.substring(start + 2, end));\r\n                \tval = (itemData[val] !== undefined) ? itemData[val] : '';\r\n                \ttemplate = template.substring(0, start) + val + template.substring(end + 2);\r\n            \t} else {\r\n                \tinvalid = true;\r\n            \t}\r\n       \t\t}\r\n\r\n        \twhile (!invalid && template.search('{{') >= 0) {\r\n            \treplace(template);\r\n        \t}\r\n\r\n        \treturn $(template);\r\n    \t},\t    \r\n\t    \r\n  \t\tinit : function (repeater,options) {\r\n  \t\t\tvar that = this,\r\n  \t\t\t\thasControls;\r\n  \t\t\tthis.repeater = repeater;\r\n  \t\t\tthis.initOptions(options);\r\n  \t        if (this.options.fullScreen) {\r\n  \t          noder.fullScreen(this.container[0]);\r\n  \t        }\r\n  \t        this.repeater.on(\"item.running\",function(e){\r\n  \t            if (that.container.hasClass(that.options.controlsClass)) {\r\n  \t              hasControls = true\r\n  \t              that.container.removeClass(that.options.controlsClass);\r\n  \t            } else {\r\n  \t              hasControls = false\r\n  \t            }\r\n  \t        });\r\n\r\n  \t        this.repeater.on(\"item.running\",function(e){\r\n  \t            if (hasControls) {\r\n  \t              that.container.addClass(that.options.controlsClass);\r\n  \t            }\r\n  \t        });\r\n  \t\t},\r\n\r\n\t    //initOptions: function (options) {\r\n\t    //  // Create a copy of the prototype options:\r\n\t    //  this.options = langx.mixin({}, this.options,options);\r\n\t    //},\r\n\r\n      initOptions : function(options) {\r\n        var ctor = this.constructor,\r\n            cache = ctor.cache = ctor.cache || {},\r\n            defaults = cache.defaults;\r\n        if (!defaults) {\r\n          var  ctors = [];\r\n          do {\r\n            ctors.unshift(ctor);\r\n            if (ctor === Plugin) {\r\n              break;\r\n            }\r\n            ctor = ctor.superclass;\r\n          } while (ctor);\r\n\r\n          defaults = cache.defaults = {};\r\n          for (var i=0;i<ctors.length;i++) {\r\n            ctor = ctors[i];\r\n            if (ctor.prototype.hasOwnProperty(\"options\")) {\r\n              langx.mixin(defaults,ctor.prototype.options,true);\r\n            }\r\n            if (ctor.hasOwnProperty(\"options\")) {\r\n              langx.mixin(defaults,ctor.options,true);\r\n            }\r\n          }\r\n        }\r\n        Object.defineProperty(this,\"options\",{\r\n          value :langx.mixin({},defaults,options,true)\r\n        });\r\n\r\n        //return this.options = langx.mixin({},defaults,options);\r\n        return this.options;\r\n      },\r\n\r\n\r\n\t    close: function () {\r\n      \t\tif (noder.fullScreen() === this.container[0]) {\r\n        \t\tnoder.fullScreen(false);\r\n      \t\t}\r\n    \t},\r\n\r\n    \tgetValue : function() {\r\n    \t\treturn this.getSelectedItems();\r\n    \t},\r\n\r\n    \tcleared : function() {\r\n\r\n    \t},\r\n\r\n    \tselected : function() {\r\n\r\n    \t},\r\n\r\n\t    dataOptions: function (options) {\r\n\t    \treturn options;\r\n\t    },\r\n\r\n\t    enabled : function(helpers){\r\n\t    \t\r\n\t    },\r\n\r\n      addItem : function addItem ($parent, response) {\r\n        var action;\r\n        if (response) {\r\n          action = (response.action) ? response.action : 'append';\r\n          if (action !== 'none' && response.item !== undefined) {\r\n            var $container = (response.container !== undefined) ? $(response.container) : $parent;\r\n            $container[action](response.item);\r\n          }\r\n        }\r\n      },\r\n\r\n      render : function(helpers) {\r\n        if (this.before) {\r\n          var addBefore = this.before(helpers);\r\n          this.addItem(helpers.container, addBefore);\r\n        }\r\n\r\n        var $dataContainer = helpers.container.find('[data-container=\"true\"]:last');\r\n        var $container = ($dataContainer.length > 0) ? $dataContainer : helpers.container;\r\n\r\n        // It appears that the following code would theoretically allow you to pass a deeply\r\n        // nested value to \"repeat on\" to be added to the repeater.\r\n        // eg. `data.foo.bar.items`\r\n        if (this.renderItem) {\r\n          var subset;\r\n          var objectAndPropsToRepeatOnString = this.repeat || 'data.items';\r\n          var objectAndPropsToRepeatOn = objectAndPropsToRepeatOnString.split('.');\r\n          var objectToRepeatOn = objectAndPropsToRepeatOn[0];\r\n\r\n          if (objectToRepeatOn === 'data' || objectToRepeatOn === 'this') {\r\n            subset = (objectToRepeatOn === 'this') ? this : helpers.data;\r\n\r\n            // Extracts subset from object chain (get `items` out of `foo.bar.items`). I think....\r\n            var propsToRepeatOn = objectAndPropsToRepeatOn.slice(1);\r\n            for (var prop = 0; prop < propsToRepeatOn.length; prop++) {\r\n              if (subset[propsToRepeatOn[prop]] !== undefined) {\r\n                subset = subset[propsToRepeatOn[prop]];\r\n              } else {\r\n                subset = [];\r\n                console.warn('WARNING: Repeater unable to find property to iterate renderItem on.');\r\n                break;\r\n              }\r\n            }\r\n\r\n            for (var subItemIndex = 0; subItemIndex < subset.length; subItemIndex++) {\r\n              var addSubItem = this.renderItem({\r\n                container: $container,\r\n                data: helpers.data,\r\n                index: subItemIndex,\r\n                subset: subset\r\n              });\r\n              this.addItem($container, addSubItem);\r\n            }\r\n          } else {\r\n            console.warn('WARNING: Repeater plugin \"repeat\" value must start with either \"data\" or \"this\"');\r\n          }\r\n        }\r\n\r\n        if (this.after) {\r\n          var addAfter = this.after(helpers);\r\n          this.addItem(helpers.container, addAfter);\r\n        }    \r\n      }\r\n\r\n\t});\r\n\r\n\treturn views.ViewBase = ViewBase;\r\n});\r\n\ndefine('skylark-fuelux-repeater/views/linear-view',[\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-eventer\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-geom\",\r\n    \"skylark-domx-query\",\r\n    \"../views\",   \r\n    \"./view-base\"\r\n], function(langx, browser, eventer, noder, geom, $, views, ViewBase) {\r\n\r\n\r\n  var LinearView = ViewBase.inherit({\r\n    klassName : \"LinearView\",\r\n\r\n    options: {\r\n        alignment: 'left',\r\n        infiniteScroll: false,\r\n        itemRendered: null,\r\n        noItemsHTML: 'no items found',\r\n        selectable: false,\r\n\r\n        template : '<ul class=\"clearfix repeater-linear\" data-container=\"true\" data-infinite=\"true\" data-preserve=\"shallow\"></ul>',\r\n        item : {\r\n            template: '<li class=\"repeater-item\"><img  src=\"{{ThumbnailImage}}\" class=\"thumb\"/><h4 class=\"title\">{{name}}</h4></div>'\r\n        },\r\n    },\r\n\r\n    //ADDITIONAL METHODS\r\n    clearSelectedItems : function() {\r\n        this.repeater.$canvas.find('.repeater-linear .selectable.selected').removeClass('selected');\r\n    },\r\n\r\n    getSelectedItems : function() {\r\n        var selected = [];\r\n        this.repeater.$canvas.find('.repeater-linear .selectable.selected').each(function() {\r\n            selected.push($(this));\r\n        });\r\n        return selected;\r\n    },\r\n\r\n    setSelectedItems : function(items, force) {\r\n        var selectable = this.options.selectable;\r\n        var self = this;\r\n        var i, $item, l, n;\r\n\r\n        //this function is necessary because lint yells when a function is in a loop\r\n        function compareItemIndex() {\r\n            if (n === items[i].index) {\r\n                $item = $(this);\r\n                return false;\r\n            } else {\r\n                n++;\r\n            }\r\n        }\r\n\r\n        //this function is necessary because lint yells when a function is in a loop\r\n        function compareItemSelector() {\r\n            $item = $(this);\r\n            if ($item.is(items[i].selector)) {\r\n                selectItem($item, items[i].selected);\r\n            }\r\n        }\r\n\r\n        function selectItem($itm, select) {\r\n            select = (select !== undefined) ? select : true;\r\n            if (select) {\r\n                if (!force && selectable !== 'multi') {\r\n                    self.thumbnail_clearSelectedItems();\r\n                }\r\n\r\n                $itm.addClass('selected');\r\n            } else {\r\n                $itm.removeClass('selected');\r\n            }\r\n        }\r\n\r\n        if (!langx.isArray(items)) {\r\n            items = [items];\r\n        }\r\n\r\n        if (force === true || selectable === 'multi') {\r\n            l = items.length;\r\n        } else if (selectable) {\r\n            l = (items.length > 0) ? 1 : 0;\r\n        } else {\r\n            l = 0;\r\n        }\r\n\r\n        for (i = 0; i < l; i++) {\r\n            if (items[i].index !== undefined) {\r\n                $item = $();\r\n                n = 0;\r\n                this.repeater.$canvas.find('.repeater-linear .selectable').each(compareItemIndex);\r\n                if ($item.length > 0) {\r\n                    selectItem($item, items[i].selected);\r\n                }\r\n\r\n            } else if (items[i].selector) {\r\n                this.repeater.$canvas.find('.repeater-linear .selectable').each(compareItemSelector);\r\n            }\r\n        }\r\n    },\r\n\r\n    selected: function() {\r\n        var infScroll = this.options.infiniteScroll;\r\n        var opts;\r\n        if (infScroll) {\r\n            opts = (typeof infScroll === 'object') ? infScroll : {};\r\n            this.infiniteScrolling(true, opts);\r\n        }\r\n    },\r\n    before: function(helpers) {\r\n        var alignment = this.options.alignment;\r\n        var $cont = this.repeater.$canvas.find('.repeater-linear');\r\n        var data = helpers.data;\r\n        var response = {};\r\n        var $empty, validAlignments;\r\n\r\n        if ($cont.length < 1) {\r\n            $cont = $(this.options.template);\r\n\r\n            response.item = $cont;\r\n        } else {\r\n            response.action = 'none';\r\n        }\r\n\r\n        return response;\r\n    },\r\n\r\n    renderItem: function(helpers) {\r\n        var selectable = this.options.selectable;\r\n        var selected = 'selected';\r\n        var self = this;\r\n        var $item = this._create$Item(this.options.item.template,helpers.subset[helpers.index]);\r\n\r\n        $item.data('item_data', helpers.data.items[helpers.index]);\r\n\r\n        if (selectable) {\r\n            $item.addClass('selectable');\r\n            $item.on('click', function() {\r\n                if (self.isDisabled) return;\r\n\r\n                if (!$item.hasClass(selected)) {\r\n                    if (selectable !== 'multi') {\r\n                        self.repeater.$canvas.find('.repeater-linear .selectable.selected').each(function() {\r\n                            var $itm = $(this);\r\n                            $itm.removeClass(selected);\r\n                            self.repeater.$element.trigger('deselected.lark.repeaterList', $itm);\r\n                        });\r\n                    }\r\n\r\n                    $item.addClass(selected);\r\n                    self.repeater.$element.trigger('selected.lark.repeaterList', $item);\r\n                } else {\r\n                    $item.removeClass(selected);\r\n                    self.repeater.$element.trigger('deselected.lark.repeaterList', $item);\r\n                }\r\n            });\r\n        }\r\n\r\n        helpers.container.append($item);\r\n\r\n\r\n        if (this.options.itemRendered) {\r\n            this.options.itemRendered({\r\n                container: helpers.container,\r\n                item: $thumbnail,\r\n                itemData: helpers.subset[helpers.index]\r\n            }, function() {});\r\n        }\r\n\r\n        return false;\r\n    }\r\n    \r\n  });\r\n\r\n\r\n    views[\"linear\"] = {\r\n        name : \"linear\",\r\n        ctor : LinearView\r\n    };\r\n\r\n    return LinearView;\r\n    \r\n});\n/* global define, window, document, DocumentTouch */\r\n\r\ndefine('skylark-fuelux-repeater/views/slider-view',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-query\",\r\n  \"../views\", \r\n   \"./view-base\"\r\n],function (langx,noder,$,views,ViewBase) {\r\n  'use strict'\r\n\r\n  var SliderView = ViewBase.inherit({\r\n    klassName : \"SliderView\",\r\n\r\n    options: {\r\n      // The Id, element or querySelector of the repeater view:\r\n      container: null,\r\n      // The tag name, Id, element or querySelector of the slides container:\r\n      slidesContainer: 'div.slides',\r\n      // The tag name, Id, element or querySelector of the title element:\r\n      titleElement: 'h3',\r\n      // The class to add when the gallery is visible:\r\n      displayClass: 'slider-display',\r\n      // The class to add when the gallery only displays one element:\r\n      singleClass: 'slider-single',\r\n      // The class to add when the left edge has been reached:\r\n      leftEdgeClass: 'slider-left',\r\n      // The class to add when the right edge has been reached:\r\n      rightEdgeClass: 'slider-right',\r\n      // The class to add when the automatic slideshow is active:\r\n      playingClass: 'slider-playing',\r\n      // The class for all slides:\r\n      slideClass: 'slide',\r\n      // The slide class for loading elements:\r\n      slideLoadingClass: 'slide-loading',\r\n      // The slide class for elements that failed to load:\r\n      slideErrorClass: 'slide-error',\r\n      // The class for the content element loaded into each slide:\r\n      slideContentClass: 'slide-content',\r\n      // The class for the \"toggle\" control:\r\n      toggleClass: 'toggle',\r\n      // The class for the \"prev\" control:\r\n      prevClass: 'prev',\r\n      // The class for the \"next\" control:\r\n      nextClass: 'next',\r\n      // The class for the \"close\" control:\r\n      closeClass: 'close',\r\n\r\n      // The class for the \"play-pause\" toggle control:\r\n      playPauseClass: 'play-pause',\r\n      // The list object property (or data attribute) with the object type:\r\n      //--- typeProperty: 'type',\r\n      // The list object property (or data attribute) with the object title:\r\n      //--- titleProperty: 'title',\r\n      // The list object property (or data attribute) with the object alt text:\r\n      //--- altTextProperty: 'alt',\r\n      // The list object property (or data attribute) with the object URL:\r\n      //--- urlProperty: 'href',\r\n      // The list object property (or data attribute) with the object srcset URL(s):\r\n      //--- srcsetProperty: 'urlset',\r\n      // The gallery listens for transitionend events before triggering the\r\n      // opened and closed events, unless the following option is set to false:\r\n      displayTransition: true,\r\n      // Defines if the gallery slides are cleared from the gallery modal,\r\n      // or reused for the next gallery initialization:\r\n      clearSlides: true,\r\n      // Defines if images should be stretched to fill the available space,\r\n      // while maintaining their aspect ratio (will only be enabled for browsers\r\n      // supporting background-size=\"contain\", which excludes IE < 9).\r\n      // Set to \"cover\", to make images cover all available space (requires\r\n      // support for background-size=\"cover\", which excludes IE < 9):\r\n      //--- stretchImages: false,\r\n      // Toggle the controls on pressing the Return key:\r\n      toggleControlsOnReturn: true,\r\n      // Toggle the controls on slide click:\r\n      toggleControlsOnSlideClick: true,\r\n      // Toggle the automatic slideshow interval on pressing the Space key:\r\n      toggleSlideshowOnSpace: true,\r\n      // Navigate the gallery by pressing left and right on the keyboard:\r\n      enableKeyboardNavigation: true,\r\n      // Close the gallery on pressing the Esc key:\r\n      closeOnEscape: true,\r\n      // Close the gallery when clicking on an empty slide area:\r\n      closeOnSlideClick: true,\r\n      // Close the gallery by swiping up or down:\r\n      closeOnSwipeUpOrDown: true,\r\n      // Emulate touch events on mouse-pointer devices such as desktop browsers:\r\n      emulateTouchEvents: true,\r\n      // Stop touch events from bubbling up to ancestor elements of the Gallery:\r\n      stopTouchEventsPropagation: false,\r\n      // Hide the page scrollbars:\r\n      hidePageScrollbars: false,\r\n      // Stops any touches on the container from scrolling the page:\r\n      disableScroll: true,\r\n      // Carousel mode (shortcut for carousel specific options):\r\n      carousel: false,\r\n      // Allow continuous navigation, moving from last to first\r\n      // and from first to last slide:\r\n      continuous: true,\r\n      // Remove elements outside of the preload range from the DOM:\r\n      unloadElements: true,\r\n      // Start with the automatic slideshow:\r\n      startSlideshow: true,\r\n      // Delay in milliseconds between slides for the automatic slideshow:\r\n      slideshowInterval: 5000,\r\n      // The starting index as integer.\r\n      // Can also be an object of the given list,\r\n      // or an equal object with the same url property:\r\n      index: 0,\r\n      // The number of elements to load around the current index:\r\n      preloadRange: 2,\r\n      // The transition speed between slide changes in milliseconds:\r\n      transitionSpeed: 400,\r\n      // The transition speed for automatic slide changes, set to an integer\r\n      // greater 0 to override the default transition speed:\r\n      slideshowTransitionSpeed: undefined,\r\n      // The event object for which the default action will be canceled\r\n      // on Gallery initialization (e.g. the click event to open the Gallery):\r\n      event: undefined,\r\n\r\n      // Callback function executed on slide change.\r\n      // Is called with the gallery instance as \"this\" object and the\r\n      // current index and slide as arguments:\r\n      onslide: undefined,\r\n      // Callback function executed after the slide change transition.\r\n      // Is called with the gallery instance as \"this\" object and the\r\n      // current index and slide as arguments:\r\n      onslideend: undefined,\r\n      // Callback function executed on slide content load.\r\n      // Is called with the gallery instance as \"this\" object and the\r\n      // slide index and slide element as arguments:\r\n      onslidecomplete: undefined,\r\n\r\n\r\n      // The tag name, Id, element or querySelector of the indicator container:\r\n      indicatorContainer: 'ol',\r\n      // The class for the active indicator:\r\n      activeIndicatorClass: 'active',\r\n      // The list object property (or data attribute) with the thumbnail URL,\r\n      // used as alternative to a thumbnail child element:\r\n      thumbnailProperty: 'ThumbnailImage',\r\n      // Defines if the gallery indicators should display a thumbnail:\r\n      thumbnailIndicators: true,\r\n\r\n      indicators : {\r\n            // Hide the page scrollbars:\r\n          hidePageScrollbars: false,\r\n\r\n          // The tag name, Id, element or querySelector of the indicator container:\r\n          indicatorContainer: 'ol',\r\n          // The class for the active indicator:\r\n          activeIndicatorClass: 'active',\r\n          // The list object property (or data attribute) with the thumbnail URL,\r\n          // used as alternative to a thumbnail child element:\r\n          thumbnailProperty: 'thumbnail',\r\n          // Defines if the gallery indicators should display a thumbnail:\r\n          thumbnailIndicators: true\r\n      },\r\n\r\n\r\n\r\n      \"template\" :'<div class=\"repeater-slider\">' + \r\n                  '<div class=\"slides\"></div>' +\r\n                  '<h3 class=\"title\"></h3>' +\r\n                  '<a class=\"prev\">‹</a>' +\r\n                  '<a class=\"next\">›</a>' +\r\n                  '<a class=\"play-pause\"></a>' +\r\n                  '<ol class=\"indicator\"></ol>' +\r\n                  \"</div>\",\r\n\r\n      \"item\" : {\r\n        \"template\" : '<img height=\"75\" src=\"{{ThumbnailImage}}\" width=\"65\"/>' \r\n      }\r\n    },\r\n\r\n    /*---\r\n    carouselOptions: {\r\n      hidePageScrollbars: false,\r\n      toggleControlsOnReturn: false,\r\n      toggleSlideshowOnSpace: false,\r\n      enableKeyboardNavigation: false,\r\n      closeOnEscape: false,\r\n      closeOnSlideClick: false,\r\n      closeOnSwipeUpOrDown: false,\r\n      disableScroll: false,\r\n      startSlideshow: true\r\n    },\r\n    */\r\n    \r\n    // Detect touch, transition, transform and background-size support:\r\n    support: (function (element) {\r\n      var support = {\r\n        touch:\r\n          window.ontouchstart !== undefined ||\r\n          (window.DocumentTouch && document instanceof DocumentTouch)\r\n      }\r\n      var transitions = {\r\n        webkitTransition: {\r\n          end: 'webkitTransitionEnd',\r\n          prefix: '-webkit-'\r\n        },\r\n        MozTransition: {\r\n          end: 'transitionend',\r\n          prefix: '-moz-'\r\n        },\r\n        OTransition: {\r\n          end: 'otransitionend',\r\n          prefix: '-o-'\r\n        },\r\n        transition: {\r\n          end: 'transitionend',\r\n          prefix: ''\r\n        }\r\n      }\r\n      var prop\r\n      for (prop in transitions) {\r\n        if (\r\n          transitions.hasOwnProperty(prop) &&\r\n          element.style[prop] !== undefined\r\n        ) {\r\n          support.transition = transitions[prop]\r\n          support.transition.name = prop\r\n          break\r\n        }\r\n      }\r\n      function elementTests () {\r\n        var transition = support.transition\r\n        var prop\r\n        var translateZ\r\n        document.body.appendChild(element)\r\n        if (transition) {\r\n          prop = transition.name.slice(0, -9) + 'ransform'\r\n          if (element.style[prop] !== undefined) {\r\n            element.style[prop] = 'translateZ(0)'\r\n            translateZ = window\r\n              .getComputedStyle(element)\r\n              .getPropertyValue(transition.prefix + 'transform')\r\n            support.transform = {\r\n              prefix: transition.prefix,\r\n              name: prop,\r\n              translate: true,\r\n              translateZ: !!translateZ && translateZ !== 'none'\r\n            }\r\n          }\r\n        }\r\n        if (element.style.backgroundSize !== undefined) {\r\n          support.backgroundSize = {}\r\n          element.style.backgroundSize = 'contain'\r\n          support.backgroundSize.contain =\r\n            window\r\n              .getComputedStyle(element)\r\n              .getPropertyValue('background-size') === 'contain'\r\n          element.style.backgroundSize = 'cover'\r\n          support.backgroundSize.cover =\r\n            window\r\n              .getComputedStyle(element)\r\n              .getPropertyValue('background-size') === 'cover'\r\n        }\r\n        document.body.removeChild(element)\r\n      }\r\n      if (document.body) {\r\n        elementTests()\r\n      } else {\r\n        $(document).on('DOMContentLoaded', elementTests)\r\n      }\r\n      return support\r\n      // Test element, has to be standard HTML and must not be hidden\r\n      // for the CSS3 tests using window.getComputedStyle to be applicable:\r\n    })(document.createElement('div')),\r\n\r\n    requestAnimationFrame:\r\n      window.requestAnimationFrame ||\r\n      window.webkitRequestAnimationFrame ||\r\n      window.mozRequestAnimationFrame,\r\n\r\n    cancelAnimationFrame:\r\n      window.cancelAnimationFrame ||\r\n      window.webkitCancelRequestAnimationFrame ||\r\n      window.webkitCancelAnimationFrame ||\r\n      window.mozCancelAnimationFrame,\r\n\r\n    render: function (helper){\r\n      //this.overrided(repeater,options);\r\n\r\n      this.container = this.repeater.$canvas.find('.repeater-slider');\r\n\r\n      if (this.container.length < 1) {\r\n        this.container = $(this.options.template);\r\n        this.repeater.$canvas.append(this.container);\r\n      } \r\n      this.list = helper.data.items;\r\n      //this.options.container = helper.container;\r\n      this.num = this.list.length;\r\n\r\n      this.initStartIndex()\r\n      this.initView();\r\n\r\n      this.initEventListeners()\r\n      // Load the slide at the given index:\r\n      this.onslide(this.index)\r\n      // Manually trigger the slideend event for the initial slide:\r\n      this.ontransitionend()\r\n      // Start the automatic slideshow if applicable:\r\n      if (this.options.startSlideshow) {\r\n        this.play()\r\n      }\r\n\r\n    },\r\n\r\n    slide: function (to, speed) {\r\n      window.clearTimeout(this.timeout)\r\n      var index = this.index\r\n      var direction\r\n      var naturalDirection\r\n      var diff\r\n      if (index === to || this.num === 1) {\r\n        return\r\n      }\r\n      if (!speed) {\r\n        speed = this.options.transitionSpeed\r\n      }\r\n      if (this.support.transform) {\r\n        if (!this.options.continuous) {\r\n          to = this.circle(to)\r\n        }\r\n        // 1: backward, -1: forward:\r\n        direction = Math.abs(index - to) / (index - to)\r\n        // Get the actual position of the slide:\r\n        if (this.options.continuous) {\r\n          naturalDirection = direction\r\n          direction = -this.positions[this.circle(to)] / this.slideWidth\r\n          // If going forward but to < index, use to = slides.length + to\r\n          // If going backward but to > index, use to = -slides.length + to\r\n          if (direction !== naturalDirection) {\r\n            to = -direction * this.num + to\r\n          }\r\n        }\r\n        diff = Math.abs(index - to) - 1\r\n        // Move all the slides between index and to in the right direction:\r\n        while (diff) {\r\n          diff -= 1\r\n          this.move(\r\n            this.circle((to > index ? to : index) - diff - 1),\r\n            this.slideWidth * direction,\r\n            0\r\n          )\r\n        }\r\n        to = this.circle(to)\r\n        this.move(index, this.slideWidth * direction, speed)\r\n        this.move(to, 0, speed)\r\n        if (this.options.continuous) {\r\n          this.move(\r\n            this.circle(to - direction),\r\n            -(this.slideWidth * direction),\r\n            0\r\n          )\r\n        }\r\n      } else {\r\n        to = this.circle(to)\r\n        this.animate(index * -this.slideWidth, to * -this.slideWidth, speed)\r\n      }\r\n      this.onslide(to)\r\n    },\r\n\r\n    getIndex: function () {\r\n      return this.index\r\n    },\r\n\r\n    getNumber: function () {\r\n      return this.num\r\n    },\r\n\r\n    prev: function () {\r\n      if (this.options.continuous || this.index) {\r\n        this.slide(this.index - 1)\r\n      }\r\n    },\r\n\r\n    next: function () {\r\n      if (this.options.continuous || this.index < this.num - 1) {\r\n        this.slide(this.index + 1)\r\n      }\r\n    },\r\n\r\n    circle: function (index) {\r\n      // Always return a number inside of the slides index range:\r\n      return (this.num + index % this.num) % this.num\r\n    },\r\n\r\n    move: function (index, dist, speed) {\r\n      this.translateX(index, dist, speed)\r\n      this.positions[index] = dist\r\n    },\r\n\r\n    translate: function (index, x, y, speed) {\r\n      var style = this.slides[index].style\r\n      var transition = this.support.transition\r\n      var transform = this.support.transform\r\n      style[transition.name + 'Duration'] = speed + 'ms'\r\n      style[transform.name] =\r\n        'translate(' +\r\n        x +\r\n        'px, ' +\r\n        y +\r\n        'px)' +\r\n        (transform.translateZ ? ' translateZ(0)' : '')\r\n    },\r\n\r\n    translateX: function (index, x, speed) {\r\n      this.translate(index, x, 0, speed)\r\n    },\r\n\r\n    translateY: function (index, y, speed) {\r\n      this.translate(index, 0, y, speed)\r\n    },\r\n\r\n    animate: function (from, to, speed) {\r\n      if (!speed) {\r\n        this.slidesContainer[0].style.left = to + 'px'\r\n        return\r\n      }\r\n      var that = this\r\n      var start = new Date().getTime()\r\n      var timer = window.setInterval(function () {\r\n        var timeElap = new Date().getTime() - start\r\n        if (timeElap > speed) {\r\n          that.slidesContainer[0].style.left = to + 'px'\r\n          that.ontransitionend()\r\n          window.clearInterval(timer)\r\n          return\r\n        }\r\n        that.slidesContainer[0].style.left =\r\n          (to - from) * (Math.floor(timeElap / speed * 100) / 100) + from + 'px'\r\n      }, 4)\r\n    },\r\n\r\n    play: function (time) {\r\n      var that = this\r\n      window.clearTimeout(this.timeout)\r\n      this.interval = time || this.options.slideshowInterval;\r\n      this.timeout = this.setTimeout(\r\n        (!this.requestAnimationFrame && this.slide) ||\r\n          function (to, speed) {\r\n            that.animationFrameId = that.requestAnimationFrame.call(\r\n              window,\r\n              function () {\r\n                that.slide(to, speed)\r\n              }\r\n            )\r\n          },\r\n        [this.index + 1, this.options.slideshowTransitionSpeed],\r\n        this.interval\r\n      )\r\n\r\n      this.container.addClass(this.options.playingClass)\r\n    },\r\n\r\n    pause: function () {\r\n      window.clearTimeout(this.timeout)\r\n      this.interval = null\r\n      if (this.cancelAnimationFrame) {\r\n        this.cancelAnimationFrame.call(window, this.animationFrameId)\r\n        this.animationFrameId = null\r\n      }\r\n      this.container.removeClass(this.options.playingClass)\r\n    },\r\n\r\n    add: function (list) {\r\n      var i\r\n      if (!list.concat) {\r\n        // Make a real array out of the list to add:\r\n        list = Array.prototype.slice.call(list)\r\n      }\r\n      if (!this.list.concat) {\r\n        // Make a real array out of the Gallery list:\r\n        this.list = Array.prototype.slice.call(this.list)\r\n      }\r\n      this.list = this.list.concat(list)\r\n      this.num = this.list.length\r\n      if (this.num > 2 && this.options.continuous === null) {\r\n        this.options.continuous = true\r\n        this.container.removeClass(this.options.leftEdgeClass)\r\n      }\r\n      this.container\r\n        .removeClass(this.options.rightEdgeClass)\r\n        .removeClass(this.options.singleClass)\r\n      for (i = this.num - list.length; i < this.num; i += 1) {\r\n        this.addSlide(i)\r\n        this.positionSlide(i)\r\n      }\r\n      this.positions.length = this.num\r\n      this.initSlides(true)\r\n    },\r\n\r\n    resetSlides: function () {\r\n      this.slidesContainer.empty()\r\n      this.unloadAllSlides()\r\n      this.slides = []\r\n\r\n      this.indicatorContainer.empty();\r\n      this.indicators = [];\r\n\r\n    },\r\n\r\n    preventDefault: function (event) {\r\n      if (event.preventDefault) {\r\n        event.preventDefault()\r\n      } else {\r\n        event.returnValue = false\r\n      }\r\n    },\r\n\r\n    stopPropagation: function (event) {\r\n      if (event.stopPropagation) {\r\n        event.stopPropagation()\r\n      } else {\r\n        event.cancelBubble = true\r\n      }\r\n    },\r\n\r\n    onresize: function () {\r\n      this.initSlides(true)\r\n    },\r\n\r\n    onmousedown: function (event) {\r\n      // Trigger on clicks of the left mouse button only\r\n      // and exclude video & audio elements:\r\n      if (\r\n        event.which &&\r\n        event.which === 1 &&\r\n        event.target.nodeName !== 'VIDEO' &&\r\n        event.target.nodeName !== 'AUDIO'\r\n      ) {\r\n        // Preventing the default mousedown action is required\r\n        // to make touch emulation work with Firefox:\r\n        event.preventDefault()\r\n        ;(event.originalEvent || event).touches = [\r\n          {\r\n            pageX: event.pageX,\r\n            pageY: event.pageY\r\n          }\r\n        ]\r\n        this.ontouchstart(event)\r\n      }\r\n    },\r\n\r\n    onmousemove: function (event) {\r\n      if (this.touchStart) {\r\n        ;(event.originalEvent || event).touches = [\r\n          {\r\n            pageX: event.pageX,\r\n            pageY: event.pageY\r\n          }\r\n        ]\r\n        this.ontouchmove(event)\r\n      }\r\n    },\r\n\r\n    onmouseup: function (event) {\r\n      if (this.touchStart) {\r\n        this.ontouchend(event)\r\n        delete this.touchStart\r\n      }\r\n    },\r\n\r\n    onmouseout: function (event) {\r\n      if (this.touchStart) {\r\n        var target = event.target\r\n        var related = event.relatedTarget\r\n        if (!related || (related !== target && !noder.contains(target, related))) {\r\n          this.onmouseup(event)\r\n        }\r\n      }\r\n    },\r\n\r\n    ontouchstart: function (event) {\r\n      if (this.options.stopTouchEventsPropagation) {\r\n        this.stopPropagation(event)\r\n      }\r\n      // jQuery doesn't copy touch event properties by default,\r\n      // so we have to access the originalEvent object:\r\n      var touches = (event.originalEvent || event).touches[0]\r\n      this.touchStart = {\r\n        // Remember the initial touch coordinates:\r\n        x: touches.pageX,\r\n        y: touches.pageY,\r\n        // Store the time to determine touch duration:\r\n        time: Date.now()\r\n      }\r\n      // Helper variable to detect scroll movement:\r\n      this.isScrolling = undefined\r\n      // Reset delta values:\r\n      this.touchDelta = {}\r\n    },\r\n\r\n    ontouchmove: function (event) {\r\n      if (this.options.stopTouchEventsPropagation) {\r\n        this.stopPropagation(event)\r\n      }\r\n      // jQuery doesn't copy touch event properties by default,\r\n      // so we have to access the originalEvent object:\r\n      var touches = (event.originalEvent || event).touches[0]\r\n      var scale = (event.originalEvent || event).scale\r\n      var index = this.index\r\n      var touchDeltaX\r\n      var indices\r\n      // Ensure this is a one touch swipe and not, e.g. a pinch:\r\n      if (touches.length > 1 || (scale && scale !== 1)) {\r\n        return\r\n      }\r\n      if (this.options.disableScroll) {\r\n        event.preventDefault()\r\n      }\r\n      // Measure change in x and y coordinates:\r\n      this.touchDelta = {\r\n        x: touches.pageX - this.touchStart.x,\r\n        y: touches.pageY - this.touchStart.y\r\n      }\r\n      touchDeltaX = this.touchDelta.x\r\n      // Detect if this is a vertical scroll movement (run only once per touch):\r\n      if (this.isScrolling === undefined) {\r\n        this.isScrolling =\r\n          this.isScrolling ||\r\n          Math.abs(touchDeltaX) < Math.abs(this.touchDelta.y)\r\n      }\r\n      if (!this.isScrolling) {\r\n        // Always prevent horizontal scroll:\r\n        event.preventDefault()\r\n        // Stop the slideshow:\r\n        window.clearTimeout(this.timeout)\r\n        if (this.options.continuous) {\r\n          indices = [this.circle(index + 1), index, this.circle(index - 1)]\r\n        } else {\r\n          // Increase resistance if first slide and sliding left\r\n          // or last slide and sliding right:\r\n          this.touchDelta.x = touchDeltaX =\r\n            touchDeltaX /\r\n            ((!index && touchDeltaX > 0) ||\r\n            (index === this.num - 1 && touchDeltaX < 0)\r\n              ? Math.abs(touchDeltaX) / this.slideWidth + 1\r\n              : 1)\r\n          indices = [index]\r\n          if (index) {\r\n            indices.push(index - 1)\r\n          }\r\n          if (index < this.num - 1) {\r\n            indices.unshift(index + 1)\r\n          }\r\n        }\r\n        while (indices.length) {\r\n          index = indices.pop()\r\n          this.translateX(index, touchDeltaX + this.positions[index], 0)\r\n        }\r\n      } else {\r\n        this.translateY(index, this.touchDelta.y + this.positions[index], 0)\r\n      }\r\n    },\r\n\r\n    ontouchend: function (event) {\r\n      if (this.options.stopTouchEventsPropagation) {\r\n        this.stopPropagation(event)\r\n      }\r\n      var index = this.index\r\n      var speed = this.options.transitionSpeed\r\n      var slideWidth = this.slideWidth\r\n      var isShortDuration = Number(Date.now() - this.touchStart.time) < 250\r\n      // Determine if slide attempt triggers next/prev slide:\r\n      var isValidSlide =\r\n        (isShortDuration && Math.abs(this.touchDelta.x) > 20) ||\r\n        Math.abs(this.touchDelta.x) > slideWidth / 2\r\n      // Determine if slide attempt is past start or end:\r\n      var isPastBounds =\r\n        (!index && this.touchDelta.x > 0) ||\r\n        (index === this.num - 1 && this.touchDelta.x < 0)\r\n      var isValidClose =\r\n        !isValidSlide &&\r\n        this.options.closeOnSwipeUpOrDown &&\r\n        ((isShortDuration && Math.abs(this.touchDelta.y) > 20) ||\r\n          Math.abs(this.touchDelta.y) > this.slideHeight / 2)\r\n      var direction\r\n      var indexForward\r\n      var indexBackward\r\n      var distanceForward\r\n      var distanceBackward\r\n      if (this.options.continuous) {\r\n        isPastBounds = false\r\n      }\r\n      // Determine direction of swipe (true: right, false: left):\r\n      direction = this.touchDelta.x < 0 ? -1 : 1\r\n      if (!this.isScrolling) {\r\n        if (isValidSlide && !isPastBounds) {\r\n          indexForward = index + direction\r\n          indexBackward = index - direction\r\n          distanceForward = slideWidth * direction\r\n          distanceBackward = -slideWidth * direction\r\n          if (this.options.continuous) {\r\n            this.move(this.circle(indexForward), distanceForward, 0)\r\n            this.move(this.circle(index - 2 * direction), distanceBackward, 0)\r\n          } else if (indexForward >= 0 && indexForward < this.num) {\r\n            this.move(indexForward, distanceForward, 0)\r\n          }\r\n          this.move(index, this.positions[index] + distanceForward, speed)\r\n          this.move(\r\n            this.circle(indexBackward),\r\n            this.positions[this.circle(indexBackward)] + distanceForward,\r\n            speed\r\n          )\r\n          index = this.circle(indexBackward)\r\n          this.onslide(index)\r\n        } else {\r\n          // Move back into position\r\n          if (this.options.continuous) {\r\n            this.move(this.circle(index - 1), -slideWidth, speed)\r\n            this.move(index, 0, speed)\r\n            this.move(this.circle(index + 1), slideWidth, speed)\r\n          } else {\r\n            if (index) {\r\n              this.move(index - 1, -slideWidth, speed)\r\n            }\r\n            this.move(index, 0, speed)\r\n            if (index < this.num - 1) {\r\n              this.move(index + 1, slideWidth, speed)\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n          // Move back into position\r\n          this.translateY(index, 0, speed)\r\n      }\r\n    },\r\n\r\n    ontouchcancel: function (event) {\r\n      if (this.touchStart) {\r\n        this.ontouchend(event)\r\n        delete this.touchStart\r\n      }\r\n    },\r\n\r\n    ontransitionend: function (event) {\r\n      var slide = this.slides[this.index]\r\n      if (!event || slide === event.target) {\r\n        if (this.interval) {\r\n          this.play()\r\n        }\r\n        this.setTimeout(this.options.onslideend, [this.index, slide])\r\n      }\r\n    },\r\n\r\n    onkeydown: function (event) {\r\n      switch (event.which || event.keyCode) {\r\n        case 13: // Return\r\n          if (this.options.toggleControlsOnReturn) {\r\n            this.preventDefault(event)\r\n            this.toggleControls()\r\n          }\r\n          break\r\n        case 27: // Esc\r\n          break\r\n        case 32: // Space\r\n          if (this.options.toggleSlideshowOnSpace) {\r\n            this.preventDefault(event)\r\n            this.toggleSlideshow()\r\n          }\r\n          break\r\n        case 37: // Left\r\n          if (this.options.enableKeyboardNavigation) {\r\n            this.preventDefault(event)\r\n            this.prev()\r\n          }\r\n          break\r\n        case 39: // Right\r\n          if (this.options.enableKeyboardNavigation) {\r\n            this.preventDefault(event)\r\n            this.next()\r\n          }\r\n          break\r\n      }\r\n    },\r\n\r\n    handleClick: function (event) {\r\n      var options = this.options\r\n      var target = event.target || event.srcElement\r\n      var parent = target.parentNode\r\n\r\n      if (parent === this.indicatorContainer[0]) {\r\n        // Click on indicator element\r\n        this.preventDefault(event)\r\n        this.slide(this.getNodeIndex(target))\r\n      } else if (parent.parentNode === this.indicatorContainer[0]) {\r\n        // Click on indicator child element\r\n        this.preventDefault(event)\r\n        this.slide(this.getNodeIndex(parent))\r\n      } else {\r\n        function isTarget (className) {\r\n          return $(target).hasClass(className) || $(parent).hasClass(className)\r\n        }\r\n\r\n\r\n        if (isTarget(options.toggleClass)) {\r\n          // Click on \"toggle\" control\r\n          this.preventDefault(event)\r\n          this.toggleControls()\r\n        } else if (isTarget(options.prevClass)) {\r\n          // Click on \"prev\" control\r\n          this.preventDefault(event)\r\n          this.prev()\r\n        } else if (isTarget(options.nextClass)) {\r\n          // Click on \"next\" control\r\n          this.preventDefault(event)\r\n          this.next()\r\n        } else if (isTarget(options.playPauseClass)) {\r\n          // Click on \"play-pause\" control\r\n          this.preventDefault(event)\r\n          this.toggleSlideshow()\r\n        } else if (parent === this.slidesContainer[0]) {\r\n          // Click on slide background\r\n          if (options.toggleControlsOnSlideClick) {\r\n            this.preventDefault(event)\r\n            this.toggleControls()\r\n          }\r\n        } else if (\r\n          parent.parentNode &&\r\n          parent.parentNode === this.slidesContainer[0]\r\n        ) {\r\n          // Click on displayed element\r\n          if (options.toggleControlsOnSlideClick) {\r\n            this.preventDefault(event)\r\n            this.toggleControls()\r\n          }\r\n        }\r\n      }\r\n    },\r\n\r\n    onclick: function (event) {\r\n      if (\r\n        this.options.emulateTouchEvents &&\r\n        this.touchDelta &&\r\n        (Math.abs(this.touchDelta.x) > 20 || Math.abs(this.touchDelta.y) > 20)\r\n      ) {\r\n        delete this.touchDelta\r\n        return\r\n      }\r\n      return this.handleClick(event)\r\n    },\r\n\r\n    updateEdgeClasses: function (index) {\r\n      if (!index) {\r\n        this.container.addClass(this.options.leftEdgeClass)\r\n      } else {\r\n        this.container.removeClass(this.options.leftEdgeClass)\r\n      }\r\n      if (index === this.num - 1) {\r\n        this.container.addClass(this.options.rightEdgeClass)\r\n      } else {\r\n        this.container.removeClass(this.options.rightEdgeClass)\r\n      }\r\n    },\r\n\r\n    handleSlide: function (index) {\r\n      if (!this.options.continuous) {\r\n        this.updateEdgeClasses(index)\r\n      }\r\n      this.loadElements(index)\r\n      if (this.options.unloadElements) {\r\n        this.unloadElements(index)\r\n      }\r\n      this.setTitle(index)\r\n\r\n      this.setActiveIndicator(index)\r\n\r\n    },\r\n\r\n    onslide: function (index) {\r\n      this.index = index\r\n      this.handleSlide(index)\r\n      this.setTimeout(this.options.onslide, [index, this.slides[index]])\r\n    },\r\n\r\n    setTitle: function (index) {\r\n      var firstChild = this.slides[index].firstChild\r\n      var text = firstChild.title || firstChild.alt\r\n      var titleElement = this.titleElement\r\n      if (titleElement.length) {\r\n        this.titleElement.empty()\r\n        if (text) {\r\n          titleElement[0].appendChild(document.createTextNode(text))\r\n        }\r\n      }\r\n    },\r\n\r\n    setTimeout: function (func, args, wait) {\r\n      var that = this\r\n      return (\r\n        func &&\r\n        window.setTimeout(function () {\r\n          func.apply(that, args || [])\r\n        }, wait || 0)\r\n      )\r\n    },\r\n\r\n    createElement: function (obj, callback) {\r\n      var $item = this._create$Item(this.options.item.template,obj);\r\n      $item.find(\"img\").on('load error', callback);\r\n\r\n      $item.addClass(this.options.slideContentClass);\r\n      return $item;\r\n    },\r\n\r\n    loadElement: function (index) {\r\n      if (!this.elements[index]) {\r\n        if (this.slides[index].firstChild) {\r\n          this.elements[index] = $(this.slides[index]).hasClass(\r\n            this.options.slideErrorClass\r\n          )\r\n            ? 3\r\n            : 2\r\n        } else {\r\n          this.elements[index] = 1 // Loading\r\n          $(this.slides[index]).append(            \r\n            this.createElement(this.list[index], this.proxyListener)\r\n          );\r\n          //$(this.slides[index]).addClass(this.options.slideLoadingClass).append(            \r\n          //  this.createElement(this.list[index], this.proxyListener)\r\n          //);\r\n        }\r\n      }\r\n    },\r\n\r\n    loadElements: function (index) {\r\n      var limit = Math.min(this.num, this.options.preloadRange * 2 + 1)\r\n      var j = index\r\n      var i\r\n      for (i = 0; i < limit; i += 1) {\r\n        // First load the current slide element (0),\r\n        // then the next one (+1),\r\n        // then the previous one (-2),\r\n        // then the next after next (+2), etc.:\r\n        j += i * (i % 2 === 0 ? -1 : 1)\r\n        // Connect the ends of the list to load slide elements for\r\n        // continuous navigation:\r\n        j = this.circle(j)\r\n        this.loadElement(j)\r\n      }\r\n    },\r\n\r\n    unloadElements: function (index) {\r\n      var i, diff\r\n      for (i in this.elements) {\r\n        if (this.elements.hasOwnProperty(i)) {\r\n          diff = Math.abs(index - i)\r\n          if (\r\n            diff > this.options.preloadRange &&\r\n            diff + this.options.preloadRange < this.num\r\n          ) {\r\n            this.unloadSlide(i)\r\n            delete this.elements[i]\r\n          }\r\n        }\r\n      }\r\n    },\r\n\r\n\r\n    createIndicator: function (obj) {\r\n      var repeater = this.repeater,\r\n          indicator = this.indicatorPrototype.cloneNode(false)\r\n      var title = repeater.getItemProperty(obj,\"title\")\r\n      var thumbnailProperty = this.options.thumbnailProperty\r\n      var thumbnailUrl\r\n      var thumbnail\r\n      if (this.options.thumbnailIndicators) {\r\n        if (thumbnailProperty) {\r\n          thumbnailUrl = repeater.getItemProperty(obj, thumbnailProperty)\r\n        }\r\n        if (thumbnailUrl === undefined) {\r\n          thumbnail = obj.getElementsByTagName && $(obj).find('img')[0]\r\n          if (thumbnail) {\r\n            thumbnailUrl = thumbnail.src\r\n          }\r\n        }\r\n        if (thumbnailUrl) {\r\n          indicator.style.backgroundImage = 'url(\"' + thumbnailUrl + '\")'\r\n        }\r\n      }\r\n      if (title) {\r\n        indicator.title = title;\r\n      }\r\n      return indicator;\r\n    },\r\n\r\n    addIndicator: function (index) {\r\n      if (this.indicatorContainer.length) {\r\n        var indicator = this.createIndicator(this.list[index])\r\n        indicator.setAttribute('data-index', index)\r\n        this.indicatorContainer[0].appendChild(indicator)\r\n        this.indicators.push(indicator)\r\n      }\r\n    },\r\n\r\n    setActiveIndicator: function (index) {\r\n      if (this.indicators) {\r\n        if (this.activeIndicator) {\r\n          this.activeIndicator.removeClass(this.options.activeIndicatorClass)\r\n        }\r\n        this.activeIndicator = $(this.indicators[index])\r\n        this.activeIndicator.addClass(this.options.activeIndicatorClass)\r\n      }\r\n    },\r\n\r\n\r\n    addSlide: function (index) {\r\n      var slide = this.slidePrototype.cloneNode(false)\r\n      slide.setAttribute('data-index', index)\r\n      this.slidesContainer[0].appendChild(slide)\r\n      this.slides.push(slide)\r\n\r\n      this.addIndicator(index)\r\n    },\r\n\r\n    positionSlide: function (index) {\r\n      var slide = this.slides[index]\r\n      slide.style.width = this.slideWidth + 'px'\r\n      if (this.support.transform) {\r\n        slide.style.left = index * -this.slideWidth + 'px'\r\n        this.move(\r\n          index,\r\n          this.index > index\r\n            ? -this.slideWidth\r\n            : this.index < index ? this.slideWidth : 0,\r\n          0\r\n        )\r\n      }\r\n    },\r\n\r\n    initSlides: function (reload) {\r\n      var clearSlides, i\r\n      if (!reload) {\r\n        // indicator\r\n        this.indicatorContainer = this.container.find(\r\n          this.options.indicatorContainer\r\n        )\r\n        if (this.indicatorContainer.length) {\r\n          this.indicatorPrototype = document.createElement('li')\r\n          this.indicators = this.indicatorContainer[0].children\r\n        }\r\n\r\n        this.positions = []\r\n        this.positions.length = this.num\r\n        this.elements = {}\r\n        this.imagePrototype = document.createElement('img')\r\n        this.elementPrototype = document.createElement('div')\r\n        this.slidePrototype = document.createElement('div')\r\n        $(this.slidePrototype).addClass(this.options.slideClass)\r\n        this.slides = this.slidesContainer[0].children\r\n        clearSlides =\r\n          this.options.clearSlides || this.slides.length !== this.num\r\n      }\r\n      this.slideWidth = this.container[0].clientWidth\r\n      this.slideHeight = this.container[0].clientHeight\r\n      this.slidesContainer[0].style.width = this.num * this.slideWidth + 'px'\r\n      if (clearSlides) {\r\n        this.resetSlides()\r\n      }\r\n      for (i = 0; i < this.num; i += 1) {\r\n        if (clearSlides) {\r\n          this.addSlide(i)\r\n        }\r\n        this.positionSlide(i)\r\n      }\r\n      // Reposition the slides before and after the given index:\r\n      if (this.options.continuous && this.support.transform) {\r\n        this.move(this.circle(this.index - 1), -this.slideWidth, 0)\r\n        this.move(this.circle(this.index + 1), this.slideWidth, 0)\r\n      }\r\n      if (!this.support.transform) {\r\n        this.slidesContainer[0].style.left =\r\n          this.index * -this.slideWidth + 'px'\r\n      }\r\n    },\r\n\r\n    unloadSlide: function (index) {\r\n      var slide, firstChild\r\n      slide = this.slides[index]\r\n      firstChild = slide.firstChild\r\n      if (firstChild !== null) {\r\n        slide.removeChild(firstChild)\r\n      }\r\n    },\r\n\r\n    unloadAllSlides: function () {\r\n      var i, len\r\n      for (i = 0, len = this.slides.length; i < len; i++) {\r\n        this.unloadSlide(i)\r\n      }\r\n    },\r\n\r\n    toggleControls: function () {\r\n\r\n      var controlsClass = this.options.controlsClass\r\n      if (this.container.hasClass(controlsClass)) {\r\n        this.container.removeClass(controlsClass)\r\n      } else {\r\n        this.container.addClass(controlsClass)\r\n      }\r\n    },\r\n\r\n    toggleSlideshow: function () {\r\n      if (!this.interval) {\r\n        this.play()\r\n      } else {\r\n        this.pause()\r\n      }\r\n    },\r\n\r\n    getNodeIndex: function (element) {\r\n      return parseInt(element.getAttribute('data-index'), 10)\r\n    },\r\n\r\n    initStartIndex: function () {\r\n      var repeater = this.repeater,\r\n          index = this.options.index;\r\n      var i\r\n      // Check if the index is given as a list object:\r\n      if (index && typeof index !== 'number') {\r\n        for (i = 0; i < this.num; i += 1) {\r\n          if (\r\n            this.list[i] === index || repeater.getItemUrl(this.list[i]) ===  repeater.getItemUrl(index) ) {\r\n            index = i\r\n            break\r\n          }\r\n        }\r\n      }\r\n      // Make sure the index is in the list range:\r\n      this.index = this.circle(parseInt(index, 10) || 0)\r\n    },\r\n\r\n    initEventListeners: function () {\r\n      var that = this\r\n      var slidesContainer = this.slidesContainer\r\n      function proxyListener (event) {\r\n        var type =\r\n          that.support.transition && that.support.transition.end === event.type\r\n            ? 'transitionend'\r\n            : event.type\r\n        that['on' + type](event)\r\n      }\r\n      $(window).on('resize', proxyListener)\r\n      $(document.body).on('keydown', proxyListener)\r\n      this.container.on('click', proxyListener)\r\n      if (this.support.touch) {\r\n        slidesContainer.on(\r\n          'touchstart touchmove touchend touchcancel',\r\n          proxyListener\r\n        )\r\n      } else if (this.options.emulateTouchEvents && this.support.transition) {\r\n        slidesContainer.on(\r\n          'mousedown mousemove mouseup mouseout',\r\n          proxyListener\r\n        )\r\n      }\r\n      if (this.support.transition) {\r\n        slidesContainer.on(this.support.transition.end, proxyListener)\r\n      }\r\n      this.proxyListener = proxyListener\r\n    },\r\n\r\n    destroyEventListeners: function () {\r\n      var slidesContainer = this.slidesContainer\r\n      var proxyListener = this.proxyListener\r\n      $(window).off('resize', proxyListener)\r\n      $(document.body).off('keydown', proxyListener)\r\n      this.container.off('click', proxyListener)\r\n      if (this.support.touch) {\r\n        slidesContainer.off(\r\n          'touchstart touchmove touchend touchcancel',\r\n          proxyListener\r\n        )\r\n      } else if (this.options.emulateTouchEvents && this.support.transition) {\r\n        slidesContainer.off(\r\n          'mousedown mousemove mouseup mouseout',\r\n          proxyListener\r\n        )\r\n      }\r\n      if (this.support.transition) {\r\n        slidesContainer.off(this.support.transition.end, proxyListener)\r\n      }\r\n    },\r\n\r\n\r\n    initView: function () {\r\n      var that = this\r\n\r\n      /*\r\n      this.container = $(this.options.container)\r\n      if (!this.container.length) {\r\n        console.log(\r\n          'blueimp Gallery: Widget container not found.',\r\n          this.options.container\r\n        )\r\n        return false\r\n      }\r\n      */\r\n\r\n      this.slidesContainer = this.container\r\n        .find(this.options.slidesContainer)\r\n        .first()\r\n      if (!this.slidesContainer.length) {\r\n        console.log(\r\n          'blueimp Gallery: Slides container not found.',\r\n          this.options.slidesContainer\r\n        )\r\n        return false\r\n      }\r\n      this.titleElement = this.container.find(this.options.titleElement).first()\r\n      if (this.num === 1) {\r\n        this.container.addClass(this.options.singleClass)\r\n      }\r\n      if (this.options.hidePageScrollbars) {\r\n        // Hide the page scrollbars:\r\n        this.bodyOverflowStyle = document.body.style.overflow\r\n        document.body.style.overflow = 'hidden'\r\n      }\r\n      this.container[0].style.display = 'block'\r\n      this.initSlides()\r\n      this.container.addClass(this.options.displayClass)\r\n    },\r\n\r\n    initOptions: function (options) {\r\n      // Create a copy of the prototype options:\r\n      this.overrided(langx.mixin({}, SliderView.prototype.options,options));\r\n\r\n      if (this.num < 3) {\r\n        // 1 or 2 slides cannot be displayed continuous,\r\n        // remember the original option by setting to null instead of false:\r\n        this.options.continuous = this.options.continuous ? null : false\r\n      }\r\n      if (!this.support.transition) {\r\n        this.options.emulateTouchEvents = false\r\n      }\r\n      if (this.options.event) {\r\n        this.preventDefault(this.options.event)\r\n      }\r\n    }\r\n  });\r\n\r\n  views[\"slider\"] = {\r\n    \"name\" :  \"slider\",\r\n    \"ctor\" :  SliderView\r\n  };\r\n\r\n  return SliderView;\r\n\r\n});\r\n\ndefine('skylark-fuelux-repeater/views/table-view',[\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-eventer\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-geom\",\r\n    \"skylark-domx-query\",\r\n    \"../views\",   \r\n    \"./view-base\"\r\n], function(langx, browser, eventer, noder, geom, $, views, ViewBase) {\r\n\r\n  var TableView = ViewBase.inherit({\r\n    klassName : \"TableView\",\r\n\r\n    options: {\r\n        columnRendered: null,\r\n        columnSizing: true,\r\n        columnSyncing: true,\r\n        highlightSortedColumn: true,\r\n        infiniteScroll: false,\r\n        noItemsHTML: 'no items found',\r\n        selectable: false,\r\n        sortClearing: false,\r\n        rowRendered: null,\r\n        frozenColumns: 0,\r\n        actions: false,\r\n\r\n        viewClass : \"repeater-table\",\r\n        tableWrapperClass : \"repeater-table-wrapper\",\r\n        checkClass : \"repeater-table-check\",\r\n        headingClass : \"repeater-table-heading\",\r\n        actionsPlaceHolderClass : \"repeater-table-actions-placeholder\"\r\n    },\r\n\r\n    clearSelectedItems : function listClearSelectedItems () {\r\n        this.repeater.$canvas.find(`.${this.options.checkClass}`).remove();\r\n        this.repeater.$canvas.find(`.${this.options.viewClass} table tbody tr.selected`).removeClass('selected');\r\n    },\r\n\r\n    highlightColumn : function listHighlightColumn (index, force) {\r\n        var tbody = this.repeater.$canvas.find(`.${this.options.tableWrapperClass} > table tbody`);\r\n        if (this.options.highlightSortedColumn || force) {\r\n            tbody.find('td.sorted').removeClass('sorted');\r\n            tbody.find('tr').each(function eachTR () {\r\n                var col = $(this).find('td:nth-child(' + (index + 1) + ')').filter(function filterChildren () { return !$(this).parent().hasClass('empty'); });\r\n                col.addClass('sorted');\r\n            });\r\n        }\r\n    },\r\n\r\n    getSelectedItems : function listGetSelectedItems () {\r\n        var selected = [];\r\n        this.repeater.$canvas.find(`.${this.options.viewClass} .${this.options.tableWrapperClass} > table tbody tr.selected`).each(function eachSelectedTR () {\r\n            var $item = $(this);\r\n            selected.push({\r\n                data: $item.data('item_data'),\r\n                element: $item\r\n            });\r\n        });\r\n        return selected;\r\n    },\r\n\r\n    positionHeadings : function listPositionHeadings () {\r\n        var $wrapper = this.repeater.$element.find(`.${this.options.tableWrapperClass}`);\r\n        var offsetLeft = $wrapper.offset().left;\r\n        var scrollLeft = $wrapper.scrollLeft();\r\n        if (scrollLeft > 0) {\r\n            $wrapper.find(`.${this.options.headingClass}`).each(function eachListHeading () {\r\n                var $heading = $(this);\r\n                var left = ($heading.parents('th:first').offset().left - offsetLeft) + 'px';\r\n                $heading.addClass('shifted').css('left', left);\r\n            });\r\n        } else {\r\n            $wrapper.find(`.${this.options.headingClass}`).each(function eachListHeading () {\r\n                $(this).removeClass('shifted').css('left', '');\r\n            });\r\n        }\r\n    },\r\n\r\n    setSelectedItems : function listSetSelectedItems (itms, force) {\r\n        var selectable = this.options.selectable;\r\n        var self = this;\r\n        var data;\r\n        var i;\r\n        var $item;\r\n        var length;\r\n\r\n        var items = itms;\r\n        if (!$.isArray(items)) {\r\n            items = [items];\r\n        }\r\n\r\n        // this function is necessary because lint yells when a function is in a loop\r\n        var checkIfItemMatchesValue = function checkIfItemMatchesValue (rowIndex) {\r\n            $item = $(this);\r\n\r\n            data = $item.data('item_data') || {};\r\n            if (data[items[i].property] === items[i].value) {\r\n                selectItem($item, items[i].selected, rowIndex);\r\n            }\r\n        };\r\n\r\n        var selectItem = function selectItem ($itm, slct, index) {\r\n            var $frozenCols;\r\n\r\n            var select = (slct !== undefined) ? slct : true;\r\n            if (select) {\r\n                if (!force && selectable !== 'multi') {\r\n                    self.clearSelectedItems();\r\n                }\r\n\r\n                if (!$itm.hasClass('selected')) {\r\n                    $itm.addClass('selected');\r\n\r\n                    if (self.options.frozenColumns || self.options.selectable === 'multi') {\r\n                        $frozenCols = self.repeater.$element.find('.frozen-column-wrapper tr:nth-child(' + (index + 1) + ')');\r\n\r\n                        $frozenCols.addClass('selected');\r\n                        $frozenCols.find('.repeater-select-checkbox').addClass('checked');\r\n                    }\r\n\r\n                    if (self.options.actions) {\r\n                        self.repeater.$element.find('.actions-column-wrapper tr:nth-child(' + (index + 1) + ')').addClass('selected');\r\n                    }\r\n\r\n                    $itm.find('td:first').prepend(`<div class=\"${this.options.checkClass}\"><span class=\"glyphicon glyphicon-ok\"></span></div>`);\r\n                }\r\n            } else {\r\n                if (self.options.frozenColumns) {\r\n                    $frozenCols = self.repeater.$element.find('.frozen-column-wrapper tr:nth-child(' + (index + 1) + ')');\r\n\r\n                    $frozenCols.addClass('selected');\r\n                    $frozenCols.find('.repeater-select-checkbox').removeClass('checked');\r\n                }\r\n\r\n                if (self.options.actions) {\r\n                    self.repeater.$element.find('.actions-column-wrapper tr:nth-child(' + (index + 1) + ')').removeClass('selected');\r\n                }\r\n\r\n                $itm.find(`.${this.options.checkClass}`).remove();\r\n                $itm.removeClass('selected');\r\n            }\r\n        };\r\n\r\n        if (force === true || selectable === 'multi') {\r\n            length = items.length;\r\n        } else if (selectable) {\r\n            length = (items.length > 0) ? 1 : 0;\r\n        } else {\r\n            length = 0;\r\n        }\r\n\r\n        for (i = 0; i < length; i++) {\r\n            if (items[i].index !== undefined) {\r\n                $item = this.repeater.$canvas.find(`.${this.options.viewClass} .${this.options.tableWrapperClass} > table tbody tr:nth-child(` + (items[i].index + 1) + ')');\r\n                if ($item.length > 0) {\r\n                    selectItem($item, items[i].selected, items[i].index);\r\n                }\r\n            } else if (items[i].property !== undefined && items[i].value !== undefined) {\r\n                this.repeater.$canvas.find(`.${this.options.viewClass} .${this.options.tableWrapperClass} > table tbody tr`).each(checkIfItemMatchesValue);\r\n            }\r\n        }\r\n    },\r\n\r\n    sizeHeadings : function listSizeHeadings () {\r\n        var $table = this.repeater.$element.find(`.${this.options.viewClass} table`);\r\n        var self = this;\r\n        $table.find('thead th').each(function eachTH () {\r\n            var $th = $(this);\r\n            var $heading = $th.find(`.${self.options.headingClass}`);\r\n            $heading.css({ height: $th.outerHeight() });\r\n            $heading.outerWidth($heading.data('forced-width') || $th.outerWidth());\r\n        });\r\n    },\r\n\r\n    setFrozenColumns : function listSetFrozenColumns () {\r\n        var frozenTable = this.repeater.$canvas.find('.table-frozen');\r\n        var $wrapper = this.repeater.$element.find('.repeater-canvas');\r\n        var $table = this.repeater.$element.find(`.${this.options.viewClass} .${this.options.tableWrapperClass} > table`);\r\n        var repeaterWrapper = this.repeater.$element.find(`.${this.options.viewClass}`);\r\n        var numFrozenColumns = this.options.frozenColumns;\r\n        var self = this;\r\n\r\n        if (this.options.selectable === 'multi') {\r\n            numFrozenColumns = numFrozenColumns + 1;\r\n            $wrapper.addClass('multi-select-enabled');\r\n        }\r\n\r\n        if (frozenTable.length < 1) {\r\n            // setup frozen column markup\r\n            // main wrapper and remove unneeded columns\r\n            var $frozenColumnWrapper = $('<div class=\"frozen-column-wrapper\"></div>').insertBefore($table);\r\n            var $frozenColumn = $table.clone().addClass('table-frozen');\r\n            $frozenColumn.find('th:not(:lt(' + numFrozenColumns + '))').remove();\r\n            $frozenColumn.find('td:not(:nth-child(n+0):nth-child(-n+' + numFrozenColumns + '))').remove();\r\n\r\n            // need to set absolute heading for vertical scrolling\r\n            var $frozenThead = $frozenColumn.clone().removeClass('table-frozen');\r\n            $frozenThead.find('tbody').remove();\r\n            var $frozenTheadWrapper = $('<div class=\"frozen-thead-wrapper\"></div>').append($frozenThead);\r\n\r\n            // this gets a little messy with all the cloning. We need to make sure the ID and FOR\r\n            // attribs are unique for the 'top most' cloned checkbox\r\n            var $checkboxLabel = $frozenTheadWrapper.find('th label.checkbox-custom.checkbox-inline');\r\n            $checkboxLabel.attr('id', $checkboxLabel.attr('id') + '_cloned');\r\n\r\n            $frozenColumnWrapper.append($frozenColumn);\r\n            repeaterWrapper.append($frozenTheadWrapper);\r\n            this.repeater.$canvas.addClass('frozen-enabled');\r\n        }\r\n\r\n        this.sizeFrozenColumns();\r\n\r\n        $(`.frozen-thead-wrapper .${this.options.headingClass}`).on('click', function onClickHeading () {\r\n            var index = $(this).parent('th').index();\r\n            index = index + 1;\r\n            self.repeater.$element.find(`.${this.options.tableWrapperClass} > table thead th:nth-child(` + index + `) .${this.options.headingClass}`)[0].click();\r\n        });\r\n    },\r\n\r\n    positionColumns : function listPositionColumns () {\r\n        var $wrapper = this.repeater.$element.find('.repeater-canvas');\r\n        var scrollTop = $wrapper.scrollTop();\r\n        var scrollLeft = $wrapper.scrollLeft();\r\n        var frozenEnabled = this.options.frozenColumns || this.options.selectable === 'multi';\r\n        var actionsEnabled = this.options.actions;\r\n\r\n        var canvasWidth = this.repeater.$element.find('.repeater-canvas').outerWidth();\r\n        var tableWidth = this.repeater.$element.find(`.${this.options.viewClass} .${this.options.tableWrapperClass} > table`).outerWidth();\r\n\r\n        var actionsWidth = this.repeater.$element.find('.table-actions') ? this.repeater.$element.find('.table-actions').outerWidth() : 0;\r\n\r\n        var shouldScroll = (tableWidth - (canvasWidth - actionsWidth)) >= scrollLeft;\r\n\r\n\r\n        if (scrollTop > 0) {\r\n            $wrapper.find(`.${this.options.headingClass}`).css('top', scrollTop);\r\n        } else {\r\n            $wrapper.find(`.${this.options.headingClass}`).css('top', '0');\r\n        }\r\n\r\n        if (scrollLeft > 0) {\r\n            if (frozenEnabled) {\r\n                $wrapper.find('.frozen-thead-wrapper').css('left', scrollLeft);\r\n                $wrapper.find('.frozen-column-wrapper').css('left', scrollLeft);\r\n            }\r\n            if (actionsEnabled && shouldScroll) {\r\n                $wrapper.find('.actions-thead-wrapper').css('right', -scrollLeft);\r\n                $wrapper.find('.actions-column-wrapper').css('right', -scrollLeft);\r\n            }\r\n        } else {\r\n            if (frozenEnabled) {\r\n                $wrapper.find('.frozen-thead-wrapper').css('left', '0');\r\n                $wrapper.find('.frozen-column-wrapper').css('left', '0');\r\n            }\r\n            if (actionsEnabled) {\r\n                $wrapper.find('.actions-thead-wrapper').css('right', '0');\r\n                $wrapper.find('.actions-column-wrapper').css('right', '0');\r\n            }\r\n        }\r\n    },\r\n\r\n    createItemActions : function () {\r\n        var actionsHtml = '';\r\n        var self = this;\r\n        var i;\r\n        var $table = this.repeater.$element.find(`.${this.options.viewClass} .${this.options.tableWrapperClass} > table`);\r\n        var $actionsTable = this.repeater.$canvas.find('.table-actions');\r\n        var len = this.options.actions.items.length;\r\n        if (len == 1) {\r\n            var action = this.options.actions.items[0];\r\n            actionsHtml = '<a href=\"javascript:void(0)\" data-action=\"' + action.name + '\" class=\"action-item\"> ' + action.html + '</a>'\r\n            if ($actionsTable.length < 1) {\r\n                var $actionsColumnWrapper = $('<div class=\"actions-column-wrapper\" style=\"width: ' + this.options.actions.width + 'px\"></div>').insertBefore($table);\r\n                var $actionsColumn = $table.clone().addClass('table-actions');\r\n                $actionsColumn.find('th:not(:last-child)').remove();\r\n                $actionsColumn.find('tr td:not(:last-child)').remove();\r\n\r\n                var $actionsCells = $actionsColumn.find('td');\r\n\r\n                $actionsCells.each(function (rowNumber) {\r\n                    var id = $(this).parent().attr(\"id\");\r\n                    var data = $(\"#\" + id).data(\"item_data\")\r\n                    if (self.options.exceptActionRows && data && langx.inArray(self.options.exceptActionRows, data.name)) {\r\n                        $(this).html(\"-\");\r\n                    } else {\r\n                        $(this).html(actionsHtml);\r\n                    }\r\n                    $(this).find('a').attr('data-row', rowNumber + 1);\r\n                });\r\n            }\r\n        } else {\r\n            for (i = 0; i < len; i++) {\r\n                var action = this.options.actions.items[i];\r\n                var html = action.html;\r\n\r\n                actionsHtml += '<li class=\"' + action.name + '\"><a href=\"javascript:void(0)\" data-action=\"' + action.name + '\" class=\"action-item\"> ' + html + '</a></li>';\r\n            }\r\n            var actionsDropdown = '<ul class=\"ul-inline list-unstyled ul-horizontally\" role=\"menu\">' +\r\n                actionsHtml + '</ul>';\r\n            if ($actionsTable.length < 1) {\r\n                var $actionsColumnWrapper = $('<div class=\"actions-column-wrapper\" style=\"width: ' + this.options.actions.width + 'px\"></div>').insertBefore($table);\r\n                var $actionsColumn = $table.clone().addClass('table-actions');\r\n                $actionsColumn.find('th:not(:last-child)').remove();\r\n                $actionsColumn.find('tr td:not(:last-child)').remove();\r\n\r\n                // Dont show actions dropdown in header if not multi select\r\n                if (this.options.selectable === 'multi' || this.options.selectable === 'action') {\r\n                    $actionsColumn.find('thead tr').html('<th><div class=\"repeater-list-heading\">' + actionsDropdown + '</div></th>');\r\n\r\n                    if (this.options.selectable !== 'action') {\r\n                        // disable the header dropdown until an item is selected\r\n                        $actionsColumn.find('thead .btn').attr('disabled', 'disabled');\r\n                    }\r\n                } else {\r\n                    var label = this.options.actions.label || '<span class=\"actions-hidden\">a</span>';\r\n                    $actionsColumn.find('thead tr').addClass('empty-heading').html('<th>' + label + '<div class=\"repeater-list-heading\">' + label + '</div></th>');\r\n                }\r\n\r\n                // Create Actions dropdown for each cell in actions table\r\n                var $actionsCells = $actionsColumn.find('td');\r\n\r\n                $actionsCells.each(function addActionsDropdown(rowNumber) {\r\n                    $(this).html(actionsDropdown).addClass(\"r-list-action\");\r\n                    $(this).find('a').attr('data-row', rowNumber + 1);\r\n                });\r\n            }\r\n        }\r\n\r\n        $actionsColumnWrapper.append($actionsColumn);\r\n\r\n        this.repeater.$canvas.addClass('actions-enabled');\r\n        this.sizeActionsTable();\r\n\r\n        // row level actions click\r\n        this.repeater.$element.find('.table-actions tbody .action-item').on('click', function onBodyActionItemClick(e) {\r\n            if (!self.isDisabled) {\r\n                var actionName = $(this).data('action');\r\n                var row = $(this).data('row');\r\n                var selected = {\r\n                    actionName: actionName,\r\n                    rows: [row]\r\n                };\r\n                self.getActionItems(selected, e);\r\n            }\r\n        });\r\n        // bulk actions click\r\n        this.repeater.$element.find('.table-actions thead .action-item').on('click', function onHeadActionItemClick(e) {\r\n            if (!self.isDisabled) {\r\n                var actionName = $(this).data('action');\r\n                var selected = {\r\n                    actionName: actionName,\r\n                    rows: []\r\n                };\r\n\r\n                var selector = `.${this.options.tableWrapperClass} > table .selected`;\r\n\r\n                if ( self.options.selectable === 'action' ) {\r\n                    selector = `.${this.options.tableWrapperClass} > table tr`;\r\n                }\r\n\r\n                self.repeater.$element.find(selector).each(function eachSelector(selectorIndex) {\r\n                    selected.rows.push(selectorIndex + 1);\r\n                });\r\n\r\n                self.getActionItems(selected, e);\r\n            }\r\n        });\r\n    },\r\n    createItemActions_1: function  () {\r\n\r\n        var actionsHtml = '';\r\n        var self = this;\r\n        var i;\r\n        var length;\r\n        var $table = this.repeater.$element.find(`.${this.options.viewClass} .${this.options.tableWrapperClass} > table`);\r\n        var $actionsTable = this.repeater.$canvas.find('.table-actions');\r\n\r\n        for (i = 0, length = this.options.actions.items.length; i < length; i++) {\r\n            var action = this.options.actions.items[i];\r\n            var html = action.html;\r\n\r\n            actionsHtml += '<li><a href=\"#\" data-action=\"' + action.name + '\" class=\"action-item\"> ' + html + '</a></li>';\r\n        }\r\n\r\n        var actionsDropdown = '<div class=\"btn-group\">' +\r\n            '<button type=\"button\" class=\"btn btn-xs btn-default dropdown-toggle repeater-actions-button\" data-toggle=\"dropdown\" data-flip=\"auto\" aria-expanded=\"false\">' +\r\n            '<span class=\"caret\"></span>' +\r\n            '</button>' +\r\n            '<ul class=\"dropdown-menu dropdown-menu-right\" role=\"menu\">' +\r\n            actionsHtml +\r\n            '</ul></div>';\r\n\r\n        if ($actionsTable.length < 1) {\r\n            var $actionsColumnWrapper = $('<div class=\"actions-column-wrapper\" style=\"width: ' + this.actions_width + 'px\"></div>').insertBefore($table);\r\n            var $actionsColumn = $table.clone().addClass('table-actions');\r\n            $actionsColumn.find('th:not(:last-child)').remove();\r\n            $actionsColumn.find('tr td:not(:last-child)').remove();\r\n\r\n            // Dont show actions dropdown in header if not multi select\r\n            if (this.options.selectable === 'multi' || this.options.selectable === 'action') {\r\n                $actionsColumn.find('thead tr').html(`<th><div class=\"${this.options.headingClass}\">` + actionsDropdown + '</div></th>');\r\n\r\n                if (this.options.selectable !== 'action') {\r\n                    // disable the header dropdown until an item is selected\r\n                    $actionsColumn.find('thead .btn').attr('disabled', 'disabled');\r\n                }\r\n            } else {\r\n                var label = this.options.actions.label || '<span class=\"actions-hidden\">a</span>';\r\n                $actionsColumn.find('thead tr').addClass('empty-heading').html('<th>' + label + `<div class=\"${this.options.headingClass}\">` + label + '</div></th>');\r\n            }\r\n\r\n            // Create Actions dropdown for each cell in actions table\r\n            var $actionsCells = $actionsColumn.find('td');\r\n\r\n            $actionsCells.each(function addActionsDropdown (rowNumber) {\r\n                $(this).html(actionsDropdown);\r\n                $(this).find('a').attr('data-row', rowNumber + 1);\r\n            });\r\n\r\n            $actionsColumnWrapper.append($actionsColumn);\r\n\r\n            this.repeater.$canvas.addClass('actions-enabled');\r\n        }\r\n\r\n        this.sizeActionsTable();\r\n\r\n        // row level actions click\r\n        this.repeater.$element.find('.table-actions tbody .action-item').on('click', function onBodyActionItemClick (e) {\r\n            if (!self.isDisabled) {\r\n                var actionName = $(this).data('action');\r\n                var row = $(this).data('row');\r\n                var selected = {\r\n                    actionName: actionName,\r\n                    rows: [row]\r\n                };\r\n                self.getActionItems(selected, e);\r\n            }\r\n        });\r\n        // bulk actions click\r\n        this.repeater.$element.find('.table-actions thead .action-item').on('click', function onHeadActionItemClick (e) {\r\n            if (!self.isDisabled) {\r\n                var actionName = $(this).data('action');\r\n                var selected = {\r\n                    actionName: actionName,\r\n                    rows: []\r\n                };\r\n                var selector = `.${this.options.tableWrapperClass} > table .selected`;\r\n\r\n                if ( self.options.selectable === 'action' ) {\r\n                    selector = `.${this.options.tableWrapperClass} > table tr`;\r\n                }\r\n                self.repeater.$element.find(selector).each(function eachSelector (selectorIndex) {\r\n                    selected.rows.push(selectorIndex + 1);\r\n                });\r\n\r\n                self.getActionItems(selected, e);\r\n            }\r\n        });\r\n    },\r\n\r\n    getActionItems : function listGetActionItems (selected, e) {\r\n        var selectedObj = [];\r\n        var actionObj = $.grep(this.options.actions.items, function matchedActions (actions) {\r\n            return actions.name === selected.actionName;\r\n        })[0];\r\n        for (var i = 0, selectedRowsL = selected.rows.length; i < selectedRowsL; i++) {\r\n            var clickedRow = this.repeater.$canvas.find(`.${this.options.tableWrapperClass} > table tbody tr:nth-child(` + selected.rows[i] + ')');\r\n            selectedObj.push({\r\n                item: clickedRow,\r\n                rowData: clickedRow.data('item_data')\r\n            });\r\n        }\r\n        if (selectedObj.length === 1) {\r\n            selectedObj = selectedObj[0];\r\n        }\r\n\r\n        if (actionObj.clickAction) {\r\n            var callback = function noop () {};// for backwards compatibility. No idea why this was originally here...\r\n            actionObj.clickAction(selectedObj, callback, e);\r\n        }\r\n    },\r\n\r\n    sizeActionsTable : function listSizeActionsTable () {\r\n        var $actionsTable = this.repeater.$element.find(`.${this.options.viewClass} table.table-actions`);\r\n        var $actionsTableHeader = $actionsTable.find('thead tr th');\r\n        var $table = this.repeater.$element.find(`.${this.options.tableWrapperClass} > table`);\r\n\r\n        $actionsTableHeader.outerHeight($table.find('thead tr th').outerHeight());\r\n        $actionsTableHeader.find(`.${this.options.headingClass}`).outerHeight($actionsTableHeader.outerHeight());\r\n        $actionsTable.find('tbody tr td:first-child').each(function eachFirstChild (i) {\r\n            $(this).outerHeight($table.find('tbody tr:eq(' + i + ') td').outerHeight());\r\n        });\r\n    },\r\n\r\n    sizeFrozenColumns : function listSizeFrozenColumns () {\r\n        var $table = this.repeater.$element.find(`.${this.options.viewClass} .${this.options.tableWrapperClass} > table`);\r\n\r\n        this.repeater.$element.find(`.${this.options.viewClass} table.table-frozen tr`).each(function eachTR (i) {\r\n            $(this).height($table.find('tr:eq(' + i + ')').height());\r\n        });\r\n\r\n        var columnWidth = $table.find('td:eq(0)').outerWidth();\r\n        this.repeater.$element.find('.frozen-column-wrapper, .frozen-thead-wrapper').width(columnWidth);\r\n    },\r\n\r\n    frozenOptionsInitialize : function listFrozenOptionsInitialize () {\r\n        var $checkboxes = this.repeater.$element.find('.frozen-column-wrapper .checkbox-inline');\r\n        var $headerCheckbox = this.repeater.$element.find('.header-checkbox .checkbox-custom');\r\n        var $everyTable = this.repeater.$element.find(`.${this.options.viewClass} table`);\r\n        var self = this;\r\n\r\n        // Make sure if row is hovered that it is shown in frozen column as well\r\n        this.repeater.$element.find('tr.selectable').on('mouseover mouseleave', function onMouseEvents (e) {\r\n            var index = $(this).index();\r\n            index = index + 1;\r\n            if (e.type === 'mouseover') {\r\n                $everyTable.find('tbody tr:nth-child(' + index + ')').addClass('hovered');\r\n            } else {\r\n                $everyTable.find('tbody tr:nth-child(' + index + ')').removeClass('hovered');\r\n            }\r\n        });\r\n\r\n        $headerCheckbox.checkbox();\r\n        $checkboxes.checkbox();\r\n\r\n        // Row checkboxes\r\n        var $rowCheckboxes = this.repeater.$element.find('.table-frozen tbody .checkbox-inline');\r\n        var $checkAll = this.repeater.$element.find('.frozen-thead-wrapper thead .checkbox-inline input');\r\n        $rowCheckboxes.on('change', function onChangeRowCheckboxes (e) {\r\n            e.preventDefault();\r\n\r\n            if (!self.revertingCheckbox) {\r\n                if (self.isDisabled) {\r\n                    revertCheckbox($(e.currentTarget));\r\n                } else {\r\n                    var row = $(this).attr('data-row');\r\n                    row = parseInt(row, 10) + 1;\r\n                    self.repeater.$element.find(`.${this.options.tableWrapperClass} > table tbody tr:nth-child(` + row + ')').click();\r\n\r\n                    var numSelected = self.repeater.$element.find('.table-frozen tbody .checkbox-inline.checked').length;\r\n                    if (numSelected === 0) {\r\n                        $checkAll.prop('checked', false);\r\n                        $checkAll.prop('indeterminate', false);\r\n                    } else if (numSelected === $rowCheckboxes.length) {\r\n                        $checkAll.prop('checked', true);\r\n                        $checkAll.prop('indeterminate', false);\r\n                    } else {\r\n                        $checkAll.prop('checked', false);\r\n                        $checkAll.prop('indeterminate', true);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        // \"Check All\" checkbox\r\n        $checkAll.on('change', function onChangeCheckAll (e) {\r\n            if (!self.revertingCheckbox) {\r\n                if (self.isDisabled) {\r\n                    revertCheckbox($(e.currentTarget));\r\n                } else if ($(this).is(':checked')) {\r\n                    self.repeater.$element.find(`.${this.options.tableWrapperClass} > table tbody tr:not(.selected)`).click();\r\n                    self.repeater.$element.trigger('selected.lark.repeaterList', $checkboxes);\r\n                } else {\r\n                    self.repeater.$element.find(`.${this.options.tableWrapperClass} > table tbody tr.selected`).click();\r\n                    self.repeater.$element.trigger('deselected.lark.repeaterList', $checkboxes);\r\n                }\r\n            }\r\n        });\r\n\r\n        function revertCheckbox ($checkbox) {\r\n            self.revertingCheckbox = true;\r\n            $checkbox.checkbox('toggle');\r\n            delete self.revertingCheckbox;\r\n        }\r\n    },\r\n\r\n    cleared: function cleared () {\r\n        if (this.options.columnSyncing) {\r\n            this.sizeHeadings();\r\n        }\r\n    },\r\n    dataOptions: function dataOptions (options) {\r\n        if (this.sortDirection) {\r\n            options.sortDirection = this.sortDirection;\r\n        }\r\n        if (this.sortProperty) {\r\n            options.sortProperty = this.sortProperty;\r\n        }\r\n        return options;\r\n    },\r\n    enabled: function enabled (helpers) {\r\n        if (this.options.actions) {\r\n            if (!helpers.status) {\r\n                this.repeater.$canvas.find('.repeater-actions-button').attr('disabled', 'disabled');\r\n            } else {\r\n                this.repeater.$canvas.find('.repeater-actions-button').removeAttr('disabled');\r\n                toggleActionsHeaderButton.call(this);\r\n            }\r\n        }\r\n    },\r\n    initialize: function initialize (helpers, callback) {\r\n        this.sortDirection = null;\r\n        this.sortProperty = null;\r\n        this.specialBrowserClass = specialBrowserClass();\r\n        this.actions_width = (this.options.actions.width !== undefined) ? this.options.actions.width : 37;\r\n        this.noItems = false;\r\n        callback();\r\n    },\r\n    resize: function resize () {\r\n        sizeColumns.call(this, this.repeater.$element.find(`.${this.options.tableWrapperClass} > table thead tr`));\r\n        if (this.options.actions) {\r\n            this.sizeActionsTable();\r\n        }\r\n        if (this.options.frozenColumns || this.options.selectable === 'multi') {\r\n            this.sizeFrozenColumns();\r\n        }\r\n        if (this.options.columnSyncing) {\r\n            this.sizeHeadings();\r\n        }\r\n    },\r\n    selected: function selected () {\r\n        var infScroll = this.options.infiniteScroll;\r\n        var opts;\r\n\r\n        this.firstRender = true;\r\n        this.repeater.$loader.addClass('noHeader');\r\n\r\n        if (infScroll) {\r\n            opts = (typeof infScroll === 'object') ? infScroll : {};\r\n            this.repeater.infiniteScrolling(true, opts);\r\n        }\r\n    },\r\n    before: function before (helpers) {\r\n        var $listContainer = helpers.container.find(`.${this.options.viewClass}`);\r\n        var self = this;\r\n        var $table;\r\n\r\n        // this is a patch, it was pulled out of `renderThead`\r\n        if (helpers.data.count > 0) {\r\n            this.noItems = false;\r\n        } else {\r\n            this.noItems = true;\r\n        }\r\n\r\n        if ($listContainer.length < 1) {\r\n            $listContainer = $(`<div class=\"${this.options.viewClass} ` + this.specialBrowserClass + `\" data-preserve=\"shallow\"><div class=\"${this.options.tableWrapperClass}\" data-infinite=\"true\" data-preserve=\"shallow\"><table aria-readonly=\"true\" class=\"table\" data-preserve=\"shallow\" role=\"grid\"></table></div></div>`);\r\n            $listContainer.find(`.${this.options.tableWrapperClass}`).on('scroll.lark.repeaterList', function onScrollRepeaterList () {\r\n                if (self.options.columnSyncing) {\r\n                    self.positionHeadings();\r\n                }\r\n            });\r\n            if (self.options.frozenColumns || self.options.actions || self.options.selectable === 'multi') {\r\n                helpers.container.on('scroll.lark.repeaterList', function onScrollRepeaterList () {\r\n                    self.positionColumns();\r\n                });\r\n            }\r\n\r\n            helpers.container.append($listContainer);\r\n        }\r\n        helpers.container.removeClass('actions-enabled actions-enabled multi-select-enabled');\r\n\r\n        $table = $listContainer.find('table');\r\n        renderThead.call(this, $table, helpers.data);\r\n        renderTbody.call(this, $table, helpers.data);\r\n\r\n        return false;\r\n    },\r\n    renderItem: function renderItem (helpers) {\r\n        renderRow.call(this, helpers.container, helpers.subset, helpers.index);\r\n        return false;\r\n    },\r\n    after: function after () {\r\n        var $sorted;\r\n\r\n        if ((this.options.frozenColumns || this.options.selectable === 'multi') && !this.noItems) {\r\n            this.setFrozenColumns();\r\n        }\r\n\r\n        if (this.options.actions && !this.noItems) {\r\n            this.createItemActions();\r\n            this.sizeActionsTable();\r\n        }\r\n\r\n        if ((this.options.frozenColumns || this.options.actions || this.options.selectable === 'multi') && !this.noItems) {\r\n            this.positionColumns();\r\n            this.frozenOptionsInitialize();\r\n        }\r\n\r\n        if (this.options.columnSyncing) {\r\n            this.sizeHeadings();\r\n            this.positionHeadings();\r\n        }\r\n\r\n        $sorted = this.repeater.$canvas.find(`.${this.options.tableWrapperClass} > table .${this.options.headingClass}.sorted`);\r\n        if ($sorted.length > 0) {\r\n            this.highlightColumn($sorted.data('fu_item_index'));\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n\r\n  });\r\n\r\n\r\n\r\n    // ADDITIONAL METHODS\r\n    var areDifferentColumns = function areDifferentColumns (oldCols, newCols) {\r\n        if (!newCols) {\r\n            return false;\r\n        }\r\n        if (!oldCols || (newCols.length !== oldCols.length)) {\r\n            return true;\r\n        }\r\n        for (var i = 0, newColsL = newCols.length; i < newColsL; i++) {\r\n            if (!oldCols[i]) {\r\n                return true;\r\n            }\r\n\r\n            for (var j in newCols[i]) {\r\n                if (newCols[i].hasOwnProperty(j) && oldCols[i][j] !== newCols[i][j]) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    var renderColumn = function renderColumn ($row, rows, rowIndex, columns, columnIndex) {\r\n        var className = columns[columnIndex].className;\r\n        var content = rows[rowIndex][columns[columnIndex].property];\r\n        var $col = $('<td></td>');\r\n        var width = columns[columnIndex]._auto_width;\r\n\r\n        var property = columns[columnIndex].property;\r\n        if (this.options.actions !== false && property === '@_ACTIONS_@') {\r\n            content = `<div class=\"${this.options.actionsPlaceHolderClass}\" style=\"width: ` + this.actions_width  + 'px\"></div>';\r\n        }\r\n\r\n        content = (content !== undefined) ? content : '';\r\n\r\n        $col.addClass(((className !== undefined) ? className : '')).append(content);\r\n        if (width !== undefined) {\r\n            $col.outerWidth(width);\r\n        }\r\n\r\n        $row.append($col);\r\n\r\n        if (this.options.selectable === 'multi' && columns[columnIndex].property === '@_CHECKBOX_@') {\r\n            var checkBoxMarkup = '<label data-row=\"' + rowIndex + '\" class=\"checkbox-custom checkbox-inline body-checkbox repeater-select-checkbox\">' +\r\n                '<input class=\"sr-only\" type=\"checkbox\"></label>';\r\n\r\n            $col.html(checkBoxMarkup);\r\n        }\r\n\r\n        return $col;\r\n    };\r\n\r\n    var renderHeader = function renderHeader ($tr, columns, index) {\r\n        var chevDown = 'glyphicon-chevron-down';\r\n        var chevron = '.glyphicon.rlc:first';\r\n        var chevUp = 'glyphicon-chevron-up';\r\n        var $div = $(`<div class=\"${this.options.headingClass}\"><span class=\"glyphicon rlc\"></span></div>`);\r\n        var checkAllID = (this.repeater.$element.attr('id') + '_' || '') + 'checkall';\r\n\r\n        var checkBoxMarkup = `<div class=\"${this.options.headingClass} header-checkbox\">` +\r\n                '<label id=\"' + checkAllID + '\" class=\"checkbox-custom checkbox-inline\">' +\r\n                    '<input class=\"sr-only\" type=\"checkbox\" value=\"\">' +\r\n                    '<span class=\"checkbox-label\">&nbsp;</span>' +\r\n                '</label>' +\r\n            '</div>';\r\n\r\n        var $header = $('<th></th>');\r\n        var self = this;\r\n        var $both;\r\n        var className;\r\n        var sortable;\r\n        var $span;\r\n        var $spans;\r\n\r\n        $div.data('fu_item_index', index);\r\n        $div.prepend(columns[index].label);\r\n        $header.html($div.html()).find('[id]').removeAttr('id');\r\n\r\n        if (columns[index].property !== '@_CHECKBOX_@') {\r\n            $header.append($div);\r\n        } else {\r\n            $header.append(checkBoxMarkup);\r\n        }\r\n\r\n        $both = $header.add($div);\r\n        $span = $div.find(chevron);\r\n        $spans = $span.add($header.find(chevron));\r\n\r\n        if (this.options.actions && columns[index].property === '@_ACTIONS_@') {\r\n            var width = this.actions_width;\r\n            $header.css('width', width);\r\n            $div.css('width', width);\r\n        }\r\n\r\n        className = columns[index].className;\r\n        if (className !== undefined) {\r\n            $both.addClass(className);\r\n        }\r\n\r\n        sortable = columns[index].sortable;\r\n        if (sortable) {\r\n            $both.addClass('sortable');\r\n            $div.on('click.lark.repeaterList', function onClickRepeaterList () {\r\n                if (!self.isDisabled) {\r\n                    self.sortProperty = (typeof sortable === 'string') ? sortable : columns[index].property;\r\n                    if ($div.hasClass('sorted')) {\r\n                        if ($span.hasClass(chevUp)) {\r\n                            $spans.removeClass(chevUp).addClass(chevDown);\r\n                            self.sortDirection = 'desc';\r\n                        } else if (!self.options.sortClearing) {\r\n                            $spans.removeClass(chevDown).addClass(chevUp);\r\n                            self.sortDirection = 'asc';\r\n                        } else {\r\n                            $both.removeClass('sorted');\r\n                            $spans.removeClass(chevDown);\r\n                            self.sortDirection = null;\r\n                            self.sortProperty = null;\r\n                        }\r\n                    } else {\r\n                        $tr.find(`th, .${this.options.headingClass}`).removeClass('sorted');\r\n                        $spans.removeClass(chevDown).addClass(chevUp);\r\n                        self.sortDirection = 'asc';\r\n                        $both.addClass('sorted');\r\n                    }\r\n\r\n                    self.repeater.render({\r\n                        clearInfinite: true,\r\n                        pageIncrement: null\r\n                    });\r\n                }\r\n            });\r\n        }\r\n\r\n        if (columns[index].sortDirection === 'asc' || columns[index].sortDirection === 'desc') {\r\n            $tr.find(`th, .${this.options.headingClass}`).removeClass('sorted');\r\n            $both.addClass('sortable sorted');\r\n            if (columns[index].sortDirection === 'asc') {\r\n                $spans.addClass(chevUp);\r\n                this.sortDirection = 'asc';\r\n            } else {\r\n                $spans.addClass(chevDown);\r\n                this.sortDirection = 'desc';\r\n            }\r\n\r\n            this.sortProperty = (typeof sortable === 'string') ? sortable : columns[index].property;\r\n        }\r\n\r\n        $tr.append($header);\r\n    };\r\n\r\n    var onClickRowRepeaterList = function onClickRowRepeaterList (repeater) {\r\n        var isMulti = repeater.options.selectable === 'multi';\r\n        var isActions = repeater.options.actions;\r\n        var $repeater = repeater.$element;\r\n\r\n        if (!repeater.isDisabled) {\r\n            var $item = $(this);\r\n            var index = $(this).index() + 1;\r\n            var $frozenRow = $repeater.find('.frozen-column-wrapper tr:nth-child(' + index + ')');\r\n            var $actionsRow = $repeater.find('.actions-column-wrapper tr:nth-child(' + index + ')');\r\n            var $checkBox = $repeater.find('.frozen-column-wrapper tr:nth-child(' + index + ') .checkbox-inline');\r\n\r\n            if ($item.is('.selected')) {\r\n                $item.removeClass('selected');\r\n                if (isMulti) {\r\n                    $checkBox.click();\r\n                    $frozenRow.removeClass('selected');\r\n                    if (isActions) {\r\n                        $actionsRow.removeClass('selected');\r\n                    }\r\n                } else {\r\n                    $item.find(`.${this.options.checkClass}`).remove();\r\n                }\r\n\r\n                $repeater.trigger('deselected.lark.repeaterList', $item);\r\n            } else {\r\n                if (!isMulti) {\r\n                    repeater.$canvas.find(`.${this.options.checkClass}`).remove();\r\n                    repeater.$canvas.find(`.${this.options.viewClass} tbody tr.selected`).each(function deslectRow () {\r\n                        $(this).removeClass('selected');\r\n                        $repeater.trigger('deselected.lark.repeaterList', $(this));\r\n                    });\r\n                    $item.find('td:first').prepend(`<div class=\"${this.options.checkClass}\"><span class=\"glyphicon glyphicon-ok\"></span></div>`);\r\n                    $item.addClass('selected');\r\n                    $frozenRow.addClass('selected');\r\n                } else {\r\n                    $checkBox.click();\r\n                    $item.addClass('selected');\r\n                    $frozenRow.addClass('selected');\r\n                    if (isActions) {\r\n                        $actionsRow.addClass('selected');\r\n                    }\r\n                }\r\n                $repeater.trigger('selected.lark.repeaterList', $item);\r\n            }\r\n\r\n            toggleActionsHeaderButton.call(repeater);\r\n        }\r\n    };\r\n\r\n    var renderRow = function renderRow ($tbody, rows, index) {\r\n        var $row = $('<tr></tr>');\r\n\r\n        if (this.options.selectable) {\r\n            $row.data('item_data', rows[index]);\r\n\r\n            if (this.options.selectable !== 'action') {\r\n                $row.addClass('selectable');\r\n                $row.attr('tabindex', 0);   // allow items to be tabbed to / focused on\r\n\r\n                var repeater = this;\r\n                $row.on('click.lark.repeaterList', function callOnClickRowRepeaterList() {\r\n                    onClickRowRepeaterList.call(this, repeater);\r\n                });\r\n\r\n                // allow selection via enter key\r\n                $row.keyup(function onRowKeyup (e) {\r\n                    if (e.keyCode === 13) {\r\n                        // triggering a standard click event to be caught by the row click handler above\r\n                        $row.trigger('click.lark.repeaterList');\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        if (this.options.actions && !this.options.selectable) {\r\n            $row.data('item_data', rows[index]);\r\n        }\r\n\r\n        var columns = [];\r\n        for (var i = 0, length = this.columns.length; i < length; i++) {\r\n            columns.push(renderColumn.call(this, $row, rows, index, this.columns, i));\r\n        }\r\n\r\n        $tbody.append($row);\r\n\r\n        if (this.options.columnRendered) {\r\n            for (var columnIndex = 0, colLength = columns.length; columnIndex < colLength; columnIndex++) {\r\n                if (!(this.columns[columnIndex].property === '@_CHECKBOX_@' || this.columns[columnIndex].property === '@_ACTIONS_@')) {\r\n                    this.options.columnRendered({\r\n                        container: $row,\r\n                        columnAttr: this.columns[columnIndex].property,\r\n                        item: columns[columnIndex],\r\n                        rowData: rows[index]\r\n                    }, function noop () {});\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.options.rowRendered) {\r\n            this.options.rowRendered({\r\n                container: $tbody,\r\n                item: $row,\r\n                rowData: rows[index]\r\n            }, function noop () {});\r\n        }\r\n    };\r\n\r\n    var renderTbody = function renderTbody ($table, data) {\r\n        var $tbody = $table.find('tbody');\r\n        var $empty;\r\n\r\n        if ($tbody.length < 1) {\r\n            $tbody = $('<tbody data-container=\"true\"></tbody>');\r\n            $table.append($tbody);\r\n        }\r\n\r\n        if (typeof data.error === 'string' && data.error.length > 0) {\r\n            $empty = $('<tr class=\"empty text-danger\"><td colspan=\"' + this.columns.length + '\"></td></tr>');\r\n            $empty.find('td').append(data.error);\r\n            $tbody.append($empty);\r\n        } else if (data.items && data.items.length < 1) {\r\n            $empty = $('<tr class=\"empty\"><td colspan=\"' + this.columns.length + '\"></td></tr>');\r\n            $empty.find('td').append(this.options.noItemsHTML);\r\n            $tbody.append($empty);\r\n        }\r\n    };\r\n\r\n    var renderThead = function renderThead ($table, data) {\r\n        var columns = data.columns || [];\r\n        var $thead = $table.find('thead');\r\n        var i;\r\n        var length;\r\n        var $tr;\r\n\r\n        if (this.firstRender || areDifferentColumns(this.columns, columns) || $thead.length === 0) {\r\n            $thead.remove();\r\n\r\n            // noItems is set in `before` method\r\n\r\n            if (this.options.selectable === 'multi' && !this.noItems) {\r\n                var checkboxColumn = {\r\n                    label: 'c',\r\n                    property: '@_CHECKBOX_@',\r\n                    sortable: false\r\n                };\r\n                columns.splice(0, 0, checkboxColumn);\r\n            }\r\n\r\n            this.columns = columns;\r\n            this.firstRender = false;\r\n            this.repeater.$loader.removeClass('noHeader');\r\n\r\n            // keep action column header even when empty, you'll need it later....\r\n            if (this.options.actions) {\r\n                var actionsColumn = {\r\n                    label: this.options.actions.label || '<span class=\"actions-hidden\">a</span>',\r\n                    property: '@_ACTIONS_@',\r\n                    sortable: false,\r\n                    width: this.actions_width\r\n                };\r\n                columns.push(actionsColumn);\r\n            }\r\n\r\n\r\n            $thead = $('<thead data-preserve=\"deep\"><tr></tr></thead>');\r\n            $tr = $thead.find('tr');\r\n            for (i = 0, length = columns.length; i < length; i++) {\r\n                renderHeader.call(this, $tr, columns, i);\r\n            }\r\n            $table.prepend($thead);\r\n\r\n            if (this.options.selectable === 'multi' && !this.noItems) {\r\n                // after checkbox column is created need to get width of checkbox column from\r\n                // its css class\r\n                var checkboxWidth = this.repeater.$element.find(`.${this.options.tableWrapperClass} .header-checkbox`).outerWidth();\r\n                var selectColumn = $.grep(columns, function grepColumn (column) {\r\n                    return column.property === '@_CHECKBOX_@';\r\n                })[0];\r\n                selectColumn.width = checkboxWidth;\r\n            }\r\n            sizeColumns.call(this, $tr);\r\n        }\r\n    };\r\n\r\n    var sizeColumns = function sizeColumns ($tr) {\r\n        var automaticallyGeneratedWidths = [];\r\n        var self = this;\r\n        var i;\r\n        var length;\r\n        var newWidth;\r\n        var widthTaken;\r\n\r\n        if (this.options.columnSizing) {\r\n            i = 0;\r\n            widthTaken = 0;\r\n            $tr.find('th').each(function eachTH () {\r\n                var $th = $(this);\r\n                var width;\r\n                if (self.columns[i].width !== undefined) {\r\n                    width = self.columns[i].width;\r\n                    $th.outerWidth(width);\r\n                    widthTaken += $th.outerWidth();\r\n                    self.columns[i]._auto_width = width;\r\n                } else {\r\n                    var outerWidth = $th.find(`.${self.options.headingClass}`).outerWidth();\r\n                    automaticallyGeneratedWidths.push({\r\n                        col: $th,\r\n                        index: i,\r\n                        minWidth: outerWidth\r\n                    });\r\n                }\r\n\r\n                i++;\r\n            });\r\n\r\n            length = automaticallyGeneratedWidths.length;\r\n            if (length > 0) {\r\n                var canvasWidth = this.repeater.$canvas.find(`.${this.options.tableWrapperClass}`).outerWidth();\r\n                newWidth = Math.floor((canvasWidth - widthTaken) / length);\r\n                for (i = 0; i < length; i++) {\r\n                    if (automaticallyGeneratedWidths[i].minWidth > newWidth) {\r\n                        newWidth = automaticallyGeneratedWidths[i].minWidth;\r\n                    }\r\n                    automaticallyGeneratedWidths[i].col.outerWidth(newWidth);\r\n                    this.columns[automaticallyGeneratedWidths[i].index]._auto_width = newWidth;\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    var specialBrowserClass = function specialBrowserClass () {\r\n        var ua = window.navigator.userAgent;\r\n        var msie = ua.indexOf('MSIE ');\r\n        var firefox = ua.indexOf('Firefox');\r\n\r\n        if (msie > 0 ) {\r\n            return 'ie-' + parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);\r\n        } else if (firefox > 0) {\r\n            return 'firefox';\r\n        }\r\n\r\n        return '';\r\n    };\r\n\r\n    var toggleActionsHeaderButton = function toggleActionsHeaderButton () {\r\n        var selectedSelector = `.${this.options.tableWrapperClass} > table .selected`;\r\n        var $actionsColumn = this.repeater.$element.find('.table-actions');\r\n        var $selected;\r\n\r\n        if (this.options.selectable === 'action') {\r\n            selectedSelector = `.${this.options.tableWrapperClass} > table tr`;\r\n        }\r\n\r\n        $selected = this.repeater.$canvas.find( selectedSelector );\r\n\r\n        if ($selected.length > 0) {\r\n            $actionsColumn.find('thead .btn').removeAttr('disabled');\r\n        } else {\r\n            $actionsColumn.find('thead .btn').attr('disabled', 'disabled');\r\n        }\r\n    };\r\n\r\n\r\n     views[\"table\"] = {\r\n        name : \"table\",\r\n        ctor : TableView\r\n    }; \r\n\r\n    return TableView;\r\n\r\n});\ndefine('skylark-fuelux-repeater/views/tile-view',[\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-eventer\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-geom\",\r\n    \"skylark-domx-query\",\r\n    \"../views\",   \r\n    \"./view-base\"\r\n], function(langx, browser, eventer, noder, geom, $, views, ViewBase) {\r\n\r\n  var TileView = ViewBase.inherit({\r\n    klassName : \"TileView\",\r\n\r\n    options: {\r\n        alignment: 'left',\r\n        infiniteScroll: false,\r\n        itemRendered: null,\r\n        noItemsHTML: 'no items found',\r\n        selectable: false,\r\n        viewClass: \"repeater-tile\",\r\n        template : '<div class=\"clearfix repeater-tile\" data-container=\"true\" data-infinite=\"true\" data-preserve=\"shallow\"></div>',\r\n        item : {\r\n            template: '<div class=\"thumbnail repeater-thumbnail\"><img height=\"75\" src=\"{{src}}\" width=\"65\"><span>{{name}}</span></div>'\r\n        },\r\n        renderItem : null\r\n    },\r\n\r\n    //ADDITIONAL METHODS\r\n    clearSelectedItems : function() {\r\n        this.repeater.$canvas.find(`.${this.options.viewClass} .selectable.selected`).removeClass('selected');\r\n    },\r\n\r\n    getSelectedItems : function() {\r\n        var selected = [];\r\n        this.repeater.$canvas.find(`.${this.options.viewClass} .selectable.selected`).each(function() {\r\n            selected.push($(this));\r\n        });\r\n        return selected;\r\n    },\r\n\r\n    setSelectedItems : function(items, force) {\r\n        var selectable = this.options.selectable;\r\n        var self = this;\r\n        var i, $item, l, n;\r\n\r\n        //this function is necessary because lint yells when a function is in a loop\r\n        function compareItemIndex() {\r\n            if (n === items[i].index) {\r\n                $item = $(this);\r\n                return false;\r\n            } else {\r\n                n++;\r\n            }\r\n        }\r\n\r\n        //this function is necessary because lint yells when a function is in a loop\r\n        function compareItemSelector() {\r\n            $item = $(this);\r\n            if ($item.is(items[i].selector)) {\r\n                selectItem($item, items[i].selected);\r\n            }\r\n        }\r\n\r\n        function selectItem($itm, select) {\r\n            select = (select !== undefined) ? select : true;\r\n            if (select) {\r\n                if (!force && selectable !== 'multi') {\r\n                    self.thumbnail_clearSelectedItems();\r\n                }\r\n\r\n                $itm.addClass('selected');\r\n            } else {\r\n                $itm.removeClass('selected');\r\n            }\r\n        }\r\n\r\n        if (!langx.isArray(items)) {\r\n            items = [items];\r\n        }\r\n\r\n        if (force === true || selectable === 'multi') {\r\n            l = items.length;\r\n        } else if (selectable) {\r\n            l = (items.length > 0) ? 1 : 0;\r\n        } else {\r\n            l = 0;\r\n        }\r\n\r\n        for (i = 0; i < l; i++) {\r\n            if (items[i].index !== undefined) {\r\n                $item = $();\r\n                n = 0;\r\n                this.repeater.$canvas.find(`.${this.options.viewClass} .selectable`).each(compareItemIndex);\r\n                if ($item.length > 0) {\r\n                    selectItem($item, items[i].selected);\r\n                }\r\n\r\n            } else if (items[i].selector) {\r\n                this.repeater.$canvas.find(`.${this.options.viewClass} .selectable`).each(compareItemSelector);\r\n            }\r\n        }\r\n    },\r\n\r\n    selected: function() {\r\n        var infScroll = this.options.infiniteScroll;\r\n        var opts;\r\n        if (infScroll) {\r\n            opts = (typeof infScroll === 'object') ? infScroll : {};\r\n            this.infiniteScrolling(true, opts);\r\n        }\r\n    },\r\n    before: function(helpers) {\r\n        var alignment = this.options.alignment;\r\n        var $cont = this.repeater.$canvas.find(`.${this.options.viewClass}`);\r\n        var data = helpers.data;\r\n        var response = {};\r\n        var $empty, validAlignments;\r\n\r\n        if ($cont.length < 1) {\r\n            $cont = $(this.options.template);\r\n            $cont.addClass(this.options.viewClass);\r\n            if (alignment && alignment !== 'none') {\r\n                validAlignments = {\r\n                    'center': 1,\r\n                    'justify': 1,\r\n                    'left': 1,\r\n                    'right': 1\r\n                };\r\n                alignment = (validAlignments[alignment]) ? alignment : 'justify';\r\n                $cont.addClass('align-' + alignment);\r\n                this.thumbnail_injectSpacers = true;\r\n            } else {\r\n                this.thumbnail_injectSpacers = false;\r\n            }\r\n            response.item = $cont;\r\n        } else {\r\n            response.action = 'none';\r\n        }\r\n\r\n        if (data.items && data.items.length < 1) {\r\n            $empty = $('<div class=\"empty\"></div>');\r\n            $empty.append(this.options.noItemsHTML);\r\n            $cont.append($empty);\r\n        } else {\r\n            $cont.find('.empty:first').remove();\r\n        }\r\n\r\n        return response;\r\n    },\r\n    renderItem: function(helpers) {\r\n        if (this.options.renderItem) {\r\n            return this.options.renderItem.call(this,helpers);\r\n        }\r\n\r\n        var selectable = this.options.selectable;\r\n\r\n        var selected = 'selected';\r\n        var self = this;\r\n        var $thumbnail = this._create$Item(this.options.item.template,helpers.subset[helpers.index]);\r\n\r\n        $thumbnail.data('item_data', helpers.data.items[helpers.index]);\r\n\r\n        if (selectable) {\r\n            $thumbnail.addClass('selectable');\r\n            $thumbnail.on('click', function() {\r\n                if (self.isDisabled) return;\r\n\r\n                if (!$thumbnail.hasClass(selected)) {\r\n                    if (selectable !== 'multi') {\r\n                        self.repeater.$canvas.find(`.${this.options.viewClass} .selectable.selected`).each(function() {\r\n                            var $itm = $(this);\r\n                            $itm.removeClass(selected);\r\n                            self.repeater.$element.trigger('deselected.lark.repeaterThumbnail', $itm);\r\n                        });\r\n                    }\r\n\r\n                    $thumbnail.addClass(selected);\r\n                    self.repeater.$element.trigger('selected.lark.repeaterThumbnail', $thumbnail);\r\n                } else {\r\n                    $thumbnail.removeClass(selected);\r\n                    self.repeater.$element.trigger('deselected.lark.repeaterThumbnail', $thumbnail);\r\n                }\r\n            });\r\n        }\r\n\r\n        helpers.container.append($thumbnail);\r\n        if (this.thumbnail_injectSpacers) {\r\n            $thumbnail.after('<span class=\"spacer\">&nbsp;</span>');\r\n        }\r\n\r\n        if (this.options.itemRendered) {\r\n            this.options.itemRendered({\r\n                container: helpers.container,\r\n                item: $thumbnail,\r\n                itemData: helpers.subset[helpers.index]\r\n            }, function() {});\r\n        }\r\n\r\n        return false;\r\n    }\r\n    \r\n  });\r\n\r\n\r\n    views[\"tile\"] = {\r\n        name : \"tile\",\r\n        ctor : TileView\r\n    };\r\n\r\n    return TileView;\r\n    \r\n});\ndefine('skylark-fuelux-repeater/main',[\r\n    \"./repeater\",\r\n    \"./views\",\r\n    \"./views/view-base\",\r\n    \"./views/linear-view\",\r\n    \"./views/slider-view\",\r\n    \"./views/table-view\",\r\n    \"./views/tile-view\"\r\n], function(Repeater) {\r\n    return Repeater;\r\n});\ndefine('skylark-fuelux-repeater', ['skylark-fuelux-repeater/main'], function (main) { return main; });\n\n"]}